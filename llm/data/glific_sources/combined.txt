> ### **3 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**

Designing chatbots is an iterative process, and with every launch or pilot, you learn new things and make changes. But if you are launching your chatbot for the first time with your users, here are 15 quick things you need to check. It shouldn't take you more than 15 minutes to ensure everything is in order.

Disable the automated opt-in message on Gupshup. This will prevent your users from receiving additional default messages from Gupshup, which might confuse them. To do this, click on your app on Gupshup, go to the Opt-ins tab, click on the Onboarding mechanisms dropdown arrow, and scroll down to disable the toggle.



The first message that a user receives upon joining the bot should be a consent message. Here are a few guidelines for designing your consent message:
Clearly mention the name of the organization and the purpose of the bot.
Clearly ask the user if they would like to receive messages from the bot (You can provide an interactive message with a "Yes" or üëçüèº button).
Users should have an option to opt out. Therefore, add the keyword in the footer through which users can opt out from the bot.



Other pointers to remember- 
It is recommended to have the first message sent by the user to the chatbot, instead of you broadcasting the message to users, even if you have user details. Broadcasting messages might lead to user reporting or blocking the bot, which can affect the overall health of the bot. Unless you have obtained user consent outside the bot (on your app or manually), the first message should always be user-initiated.
Create a separate flow for users who type "STOP" and add them to a collection for future reference.

3) Update the Opt-in settings post-user consent. It is mandatory to update a contact's settings with Opt-in after their consent.


4) Important user information collected during registration, such as Name, Language, Training group, City, etc., should be updated in the contact profile. This will be helpful for you to refer in any flow in future

5) Confirm important information (like Name, Language, etc.) before updating the contact. Sometimes, users might enter incorrect information, which can impact the user experience throughout. 

For example, sharing a name as "My name is Krishna Priya" instead of just "Krishna Priya" can lead to the bot referring to the user with the incorrect name every time. Additionally, a user choosing the wrong language preference by mistake might discourage them from using the bot.

6) Set default and new contact flows through Settings ‚Üí Flows to ensure that new users receive the intended flow.
7) Add content in all nodes for all languages, if multiple languages are used for the bot.
8) Add users to relevant collections based on how you want to communicate with them in the future.
9) Use interactive messages wherever you want the user to choose from given options or when answers are predictable (e.g., grade, Yes/No, Gender, etc.).
10) If a flow is triggered from your end to the user, the first message of the flow should be an HSM message (because we don't know if the users are in the active session window or not).
11) Add labels for both outgoing and incoming messages for all the data you want to capture and check in the future.
12) Use appropriate names for Flows, Keywords, and Result names to make it easy to track them in the future.
13) Use emoticons, bold, italics, and media as needed.
14) Ensure the user does not encounter any dead ends in the bot, especially in the case of interactive messages. Make sure there is also an option for the user to send free text apart from the button options you provide, and clarify what the user is expected to do. Connect the user's response back to the main question and wait for their response so the flow can proceed.

15) Testing, Testing, Testing: Test the chatbot internally with at least 3 to 5 people on mobile phones before sharing it with actual users.
> ### **3 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**

**Designing chatbots is an iterative process, and with every launch or pilot, you learn new things and make changes. But if you are launching your chatbot for the first time with your users, here are 15 quick things you need to cross check,to ensure that you have checked in all basic things for your Bot. It shouldn't take you more than 15 minutes to ensure everything is in place.**

1. Disable the automated opt-in message on Gupshup. Every chatbot needs to take consent from it‚Äôs user to be able to further send messages. Gupshup sends a default message. But that generic message might confuse your users. Hence it is suggested to disable it on Gupshup and take consent on chatbot itself.
To do this, click on your app on Gupshup, go to the Opt-ins tab, click on the Onboarding mechanisms dropdown arrow, and scroll down to disable the toggle.

![image5](https://user-images.githubusercontent.com/132430123/281605574-a6094adf-9a7b-4495-b431-e0474560c8c0.png)

2. The first message that a user receives upon joining the bot should be a consent message. Here are a few guidelines for designing your consent message:
- Clearly mention the name of the organization and the purpose of the bot.
- Clearly ask the user if they would like to receive messages from the bot (You can provide an interactive message with a "Yes" or üëçüèº button).
- Users should have an option to opt out. Therefore, add the keyword in the footer through which users can opt out from the bot.

<img width="317" alt="image1" src="https://user-images.githubusercontent.com/132430123/281605857-d5e4ab08-653a-4098-af9d-61681071e4a2.png"/>

### Other pointers to remember- 
- It is recommended to have the first ever chatbot conversation initiated by the user instead of you broadcasting the message to users, even if you have user details. Broadcasting messages might lead to user reporting or blocking the bot, which can affect the overall health of the bot. Unless you have obtained user consent outside the bot (on your app or manually), the first message should always be user-initiated.
- Create a separate flow for users who type "STOP/ Opt Out" and add them to a collection. This will help you to reach out to them in future at least know how many of your users are opting out.

3. Update the Opt-in settings post-user consent. It is mandatory to update a contact's settings with Opt-in after their consent.

<img width="653" alt="image4" src="https://user-images.githubusercontent.com/132430123/281606075-975d6ec1-27aa-448b-adbd-982c2b87472b.png"/>

4. Important user information collected during registration, such as Name, Language, Training group, City, etc., should be updated in the contact profile. This will be helpful for you to refer in any flow in future

<img width="656" alt="image3" src="https://user-images.githubusercontent.com/132430123/281606152-983dce1d-5641-4294-a2fb-9cf931c86ab8.png"/>

5. Confirm key information (like Name, Language, etc.) which you would be using through out the bot, before updating the contact. Sometimes, users might enter incorrect information, which can impact the user experience throughout. 

For example, sharing a name as "My name is Krishna Priya" instead of just "Krishna Priya" can lead to the bot referring to the user with the incorrect name every time. Additionally, a user choosing the wrong language preference by mistake might discourage them from using the bot.

But please remember that, there is a tradeoff that it adds another click in the process for the user. So pick the info you would like to confirm.

<img width="741" alt="image2" src="https://user-images.githubusercontent.com/132430123/281606230-a244e1a6-b8e8-483e-b1c6-bd8c9a51f50b.png"/>

6. You can customize which flow you want to send to users who have come to your bot for the first time. You can update this new contact flow through Settings ‚Üí Flows. If you haven‚Äôt set it, then users would get a pre-set new contact flow (by Glific) which might not be your preferred first flow for new users.

7. Add content in all nodes for all languages, if multiple languages are used for the bot.

8. Add users to relevant collections based on how you want to communicate with them in the future.

9. Use interactive messages wherever you want the user to choose from given options or when answers are predictable (e.g., grade, Yes/No, Gender, etc.).

10. If a flow is triggered from your end to the user, the first message of the flow should be an HSM/ Template message (because we don't know if the users are in the active session window or not).

11. Add labels for both outgoing and incoming messages for all the data you want to capture and check in the future.

12. Use appropriate names for Flows, Keywords, and Result names to make it easy to track them in the future.

13. Use emoticons, bold, italics, and media as needed. 
On a side note, Here is a [blog](https://glific.org/writing-your-first-chatbot-script/) written on writing the first chatbot script (along with some examples). Do give it a read!

14. Ensure the user does not encounter any dead ends in the bot, especially in the case of interactive messages. Make sure there is also an option for the user to send free text apart from the button options you provide, and clarify what the user is expected to do. Connect the user's response back to the main question and wait for their response so the flow can proceed.

<img width="954" alt="image6" src="https://user-images.githubusercontent.com/132430123/281606375-6c9082e1-bdb9-4430-b027-0983fb82a8a0.png"/>

15. Testing, Testing, Testing: Test the chatbot internally with at least 3 to 5 people on mobile phones before sharing it with actual users.
> ### **4 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Advanced`**

**`Bhashini` is a project or initiative aimed at providing easy access to the Internet and digital services for all Indians in their native languages. The primary goal of the project is to increase the amount of content available in Indian languages, thereby promoting digital inclusivity and accessibility for a broader population**

---

## Bhashini in Glific
- Bhashini APIs are used in Glific for speech recognition
- Whatsapp user can share an audio file, which could be converted to text (in the language chosen by the user)
- The converted text could be stored in Google Sheets, used in flows/ used as per the use case

---

## Sample Chat
![image1](https://user-images.githubusercontent.com/132430123/274799942-b380b55e-c326-4f82-99bb-3c2289de81ff.jpg)

---

## Steps to integrate Bhashini ASR in Glific flows
1. Create an account in [Bhashini website](https://bhashini.gov.in/ulca/user/register#) using name & email ID. Please verify the account using the email received.
![image4](https://user-images.githubusercontent.com/132430123/274800251-9d80c40d-1ffa-4945-a542-7b405a8c60e0.png)

2. Go to ‚ÄòMy Profile‚Äô on the top-right corner. 
![image6](https://user-images.githubusercontent.com/132430123/274800442-cf1a04ff-2be4-4c18-8b22-af9dd7fb5388.png)

3. Generate ‚ÄòULCA API Key‚Äô (top-right corner). Also make note of the User ID on top of the button. This will be used inside the webhook call in Glific flow.
![image10](https://user-images.githubusercontent.com/132430123/274800897-be8948ad-2526-430c-8f04-f240e54c7ecc.png)

4. Make note of the API Key generated. This is required inside the webhook call used in the Glific flow for calling the Bhashini API. (Starting with 01af.. here)
![image2](https://user-images.githubusercontent.com/132430123/274801109-1d03b553-d1c3-4fe4-914d-d639d92659d3.png)

5. Now login to your Glific instance and create a flow. In this example we‚Äôll use a flow called Maven ASR Bhashini, used for recording incoming audio queries in a Google Sheet. The flow starts with asking the user to share the query as a voice note and it is saved as ‚Äòspeech‚Äô. 

The download link for a few sample flows are given below to test it for yourself.
![image11](https://user-images.githubusercontent.com/132430123/274801303-e87be8d0-c968-40f6-826c-483fa4cdc8d7.png)


6. After the audio is captured, the Bhashini ASR API is called using a Webhook function called ‚Äòspeech_to_text_with_bhasini‚Äô and the response is stored as ‚Äòspeech2text‚Äô.

- The function name is pre-defined, you should always use the name ‚Äòspeech_to_text_with_bhasini‚Äô to call the Bhashini API
- The response stored (speech2text here) could be given any name of your liking, just like any other flow variable

![image7](https://user-images.githubusercontent.com/132430123/274801489-a54cb427-0e79-4b45-9b11-9745e8cfa0fa.png)

7. The webhook body is shown below. Please update the parameters as shown :

- speech : It should be updated with the result name given for the audio file captured. Here, it is saved as ‚Äòspeech‚Äô (Step 5), hence the value is @results.speech.input (If the audio note captured was saved as ‚Äòquery‚Äô, then the value will be @results.query.input)
- userID : The userID is updated with the userID captured from Bhashini website. (Refer Step 3)
- ulcaApiKey :  The API Key needs to be updated with the ULCA API key captured from Bhashini website. (Refer Step 4)
- pipelineId : Keep the value as given in the screenshot below - ‚Äú64392f96daac500b55c543cd‚Äù
- base_url : Keep the value as given in the screenshot below - ‚Äúhttps://meity-auth.ulcacontrib.org/ulca/apis/v0/model/‚Äù
- contact : Keep the value as given in the screenshot below - ‚Äú@contact‚Äù
You can read more about the variables used inside the webhook body/ Bhashini APIs [here](https://bhashini.gitbook.io/bhashini-apis/)

![image3](https://user-images.githubusercontent.com/132430123/274801670-40988471-c09d-4f4f-a9e0-fd80d869dd73.png)

8. Once the webhook is updated, you could always refer to the translated text as ‚Äò@results.speech2text.asr_response_text‚Äô to use it inside the flow. 

The output of the text response from the Bhashini depends on the language preference of the user. For instance if a user has selected Hindi language, the response from Glific will be in Hindi script.

9. You could additionally link the webhook to a ‚ÄòLink Google Sheet‚Äô node to record the translated text into a spreadsheet as shown in the flow below. 

![image8](https://user-images.githubusercontent.com/132430123/274801797-ee8ad5e9-d404-43da-b4dd-97f78ca7eef2.png)

10. The Google Sheet node is configured as shown below. The fourth variable being used is ‚Äò@results.speech2text.asr_response_text‚Äô which will capture the translated text in the fourth column.  
![image9](https://user-images.githubusercontent.com/132430123/274801864-9bfca302-ae0d-4f12-9745-b1859fd66ff4.png)	

11. The incoming audio notes in this flow will be captured in Google Sheets as shown below
![image5](https://user-images.githubusercontent.com/132430123/274801897-a79f05c6-9f48-4eeb-93b9-3437bf2e6792.png)

## Sample Flow Links
*Test some sample flows for yourself by importing these flows to your Glific instance.*

- [Maven ASR Bhashini](https://drive.google.com/file/d/1qXxDIaP4MMDl18NsgVuhF1H8cIetJNiM/view?usp=sharing)
- [Bhasini API](https://drive.google.com/file/d/1K-KcJ0NFDIcVN2w8E1sTnev36AEGdv5I/view?usp=sharing)

## Blogs
- [Getting started with Bhashini ASR](https://glific.org/getting-started-using-asr-with-bhashini-api/)
<img width="799" alt="image4" src="https://user-images.githubusercontent.com/143380171/278219613-2255e5d6-516b-4706-ac0a-482a771b147f.png"/>

1. In the flow- by calling the ‚Äújugalbandi-voice‚Äù function and the above inputs in the webhook from the glific interface we can get a text response in desired language as well as a voice note. Send voice notes and get voice notes in return using the Jugalbandi API. 

- Prerequisites: knowledge base will have to uploaded in jugalbandi platform. [Read More](https://glific.github.io/docs/docs/Integrations/ChatGPT%20Integration/) 
- [Example flow](https://drive.google.com/file/d/1xLnLGWg_95Zhi5v0QIQpaRz_cLA9d0Er/view) (json format) which you can upload and re-use as a starting point


Elements involved 
2. [Jugalbandi Platform](https://api.jugalbandi.ai/docs#/)  
Using Jugalbandi platform for generating voice response.
 
![image2](https://user-images.githubusercontent.com/143380171/278219829-1ef5b7f4-cfed-49bc-b114-5a45c58fd897.png)


3. Call the Glific webhook 

Function to use - ‚Äújugalbandi-voice‚Äù 

<img width="754" alt="image6" src="https://user-images.githubusercontent.com/143380171/278220013-ce637f7f-8106-444e-a52b-b25c160ea45e.png"/>

## Function Body

<img width="843" alt="image5" src="https://user-images.githubusercontent.com/143380171/278220103-a95c78bb-2ad0-49f6-a7a8-9f740cb2468e.png"/>


‚ÄúInput_language‚Äù : specify as per the jugalbandi platform or you can use the @contact.language 
‚Äúoutput_format‚Äù : text or voice
‚Äúquery_text‚Äù : if the input is in text format
‚Äúaudio_url‚Äù : send the flow variable of the voice note received
‚Äúprompt‚Äù : any contextual or system prompt 
‚Äúuuid_number‚Äù : custom knowledge base which has been uploaded in the jugalbandi platform

## How to get the response back and get the voice note
- The first node in the ‚Äúsuccess‚Äù pathway is pulling the responses 

![image1](https://user-images.githubusercontent.com/143380171/278220211-5ef97299-341f-4d2d-811b-0b33abefbc53.png)



- The second node (screenshot below) is sending the computer generated voice note of the response. 

![image3](https://user-images.githubusercontent.com/143380171/278220336-961e73b6-331b-4c74-b93f-61b158f5c91a.png)




> ### **3 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Intermediate`**
___

This is for you if: 
- **You are struggling to acquire users for your chatbot due to challenges with users clicking the link or users not typing the keyword and want to ease the friction of them starting chatbot flows easily.**
- **You are operating your WhatsApp chatbot on Glific and have an Exotel number.**

## Setting up on Exotel
1. After logging in, make sure you have a number for the state where you expect most calls from.

2. Go to address book and create 2 lists ‚Äì success and failure (success is for those whose missed call returned a response from Glific server successfully and failure for where it fails)

![1](https://user-images.githubusercontent.com/132430123/245516283-d1cbf291-febf-45fd-bee9-233401097dc9.png)
<br />

3. Go to App Bazaar in the menu and create a new app
![2](https://user-images.githubusercontent.com/132430123/245516373-660c9733-0850-491d-b526-024d483308e5.png)
<br />

4. Proceed to Edit the app and select and drop into the selection box the component called ‚ÄúPassthrough‚Äù
![3](https://user-images.githubusercontent.com/132430123/245516442-16892ecd-a3ea-46a5-a761-078a36c7073e.png)
<br />

5. When you drop it in place, you will see a new box opening up like below. Paste the link in this format ‚Äì https://api.xxx.glific.com/webhook/exotel/optin where xxx is your org‚Äôs name. For example: https://api.staging.glific.com/webhook/exotel/optin

  <img width="859" alt="Screenshot 2024-03-07 at 4 22 00‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/f119c347-9bc7-462b-836d-2f67ceae135b" />

<br />

6. In the ‚ÄúIn response‚Äù section, drag list manager in both boxes. Click on the list manager for ‚ÄúOnce URL returns OK‚Äù and in the box which opens next, select the list for successful calls and in the section called ‚Äúnext‚Äù below, drag and drop Hangup.

<img width="982" alt="Screenshot 2024-03-07 at 4 23 44‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/fe945eda-f7d9-4476-b7f8-c92bc31bcdaf" />

<br />

7. In the previous card, click on the list manager under the head ‚ÄúIf the URL returns anything else‚Äù and in the box which opens, select the list for all failed calls. In the Next header, drag and drop Hangup.

<img width="969" alt="Screenshot 2024-03-07 at 4 25 00‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/9d2ad00d-e1e9-4bd5-b299-c76bfe633738" />

<br />

8. Select save. This completes the setup on Exotel side.
___
## Integrating Exotel in Glific

1. You need to be an admin to get this access.

2. Login and go to flows and identify the flow your Exotel missed call should start. Select `Edit` to open the next screen

<img width="1197" alt="Screenshot 2024-03-07 at 4 26 48‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/79857ce2-20ff-4b4f-9ffd-90cb0a16005e" />

<br />

3. In the URL, note down the Flow ID as highlighted. Click on `CONFIGURE` to make sure you have done the next 2 steps.

<img width="767" alt="Screenshot 2024-03-07 at 4 32 47‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/8ef47980-f1d6-4612-84af-378815b81daa" />

<br />


4. Start the flow with the Card for `Update Contact.` See next step to configure it.
![9](https://user-images.githubusercontent.com/132430123/245516813-3f0b39fd-c9e3-4b2e-bbd5-301d72920032.png)
<br />

5. In the drop down `Select what to update`, Select `Settings` and in the box below type ‚Äúoptin‚Äù. This will set the opt-in flag to true in WhatsApp. This is essential for the next step. Without this, no HSM template can be sent.
![10](https://user-images.githubusercontent.com/132430123/245516873-e3f22408-68a7-416f-b329-2331b9f90ffe.png)
<br />

6. Via Gupshup create a marketing template with a button. FaceBook seems to only approve marketing messages as of now ‚Äì maybe it is due to the increased revenue this type of message offers. This button can be anything. The button will send a message from the user‚Äôs side after the flow has been started, so that the bot can actually send messages to the user.
   
<br />

8. Map this message like this after the Optin message as shown in Steps 5 and 6 above. To create this ‚Äì Select ‚Äúsend a message‚Äù in the dropdown, and then click on WhatsApp tab in the top right of the card and configure as show in the second image in this step ‚Äì you have to select the template you just got approved in Gupshup.

![12](https://user-images.githubusercontent.com/132430123/245516966-fcdf34ca-4e9d-4074-874f-1cf5b98a5cbf.png)
<br />

![13](https://user-images.githubusercontent.com/132430123/245517020-c5509dc1-1cf2-49af-8ce1-23dfcf42b9c9.png)
<br />


8. Save the flow and go to `Settings` screen. Select `Exotel`from the options. Remember, only admins can do this.
<br />


9. Set `is Active` to true. Enter the Glific Flow ID you noted in Step 3 above. Set direction of call to `Inbound` and write your Exotel number in the last box and save.
   <img width="1061" alt="Screenshot 2024-03-07 at 4 35 35‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/9a74544a-73eb-4863-b179-6bb0b8cd8ce2" />

<br />


11. This completes your Exotel setup and linkage of Exotel to the bot.


A trick with your mobile number
1. On the mobile with your Chatbot number, activate unconditional call forwarding to the Exotel number. This way, your user can call the chatbot number and they will see their chatbot responding to them on WhatsApp.


___
## Best Practices
1. Test the missed call function thoroughly. Best way to do this is to use mobiles from different carriers, and prepaid and postpaid services.
2. Monitor the ‚Äúfailed calls‚Äù list weekly and contact those whose missed call failed.
3. If you have a prepaid number for the chatbot, set a calendar reminder to recharge 2 days in advance. If the balance expires, and then you recharge, the call forwarding is broken. In this case, you need to disable call forwarding on your mobile to Exotel and then re-enable after 5 minutes. All missed calls in this downtime are lost.

**Typical Costs** (this can change and is provided as an estimate for you to budget and plan expenses):
Exotel charges Missed call at Rs 0.3
WhatsApp sends marketing template messages at Rs 0.7

___
## Reference Article

- Reap Benefit has experimented with Exotel for their onboarding. [Click Here](https://glific.org/missed-call-feature-solving-the-design-flaw-for-easy-onboarding-and-continuous-re-engagement-of-your-beneficiaries-into-your-glific-chatbot/) to read more.

> ### **3 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Advanced`**

**Leverage the capabilities of GPT models developed by OpenAI by using Jugalbandi APIs. Jugalbandi APIs is enhancing Glific by providing Retreival Augemented Generation or in simple words, enabling NGOs to use custom knowledge base for GPT models to answer from.**

## Video Tutorial


<iframe width="800" height="500" src="https://www.youtube.com/embed/cE84OP0Uz8E" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

## Using ChatGPT within Glific via Jugalbandi API

**Step 1:** Import the below sample flow from the Flow screen and click on the `setting` icon to configure it.

**Sample Flow**

[GPTintegration.json](https://storage.googleapis.com/cc-tides/GPTintegration%20(2).json)

**Step 2:** Click on `Flows` from the left panel and click on the setting icon to configure the imported flow. Here's how the imported flow would look like

![image](https://github.com/glific/docs/assets/40158831/3b73c25e-3bb3-44f4-9b8b-2fce8760a7cf)

**Step 3:** The first node is the `Send Message` node, which prompts the contact to ask question which will then be sent to ChatGPT using `Call Webhook` in `Step 6`

**Step 4:** The second node is the `Wait for Response` node with the result name `gpt_query`. The response from the contact will be saved in this result and can be referenced as `@results.gpt_query`.

![image](https://github.com/glific/docs/assets/40158831/a91c2a31-55b7-4fea-a8f5-ffd8a914f942)

**Step 5:** The third node is the `Send Message` which we are sending to contact while we are sending user query to ChatGPT and waiting for the response.

![image](https://github.com/glific/docs/assets/40158831/0da1319e-6a62-4dc1-a523-63fcd63304fe)

**Step 6:** Next in the `Call Webhook` node we are calling [Jugalbandi](https://www.jugalbandi.ai/) APIs by choosing `FUNCTION` in the node and adding value as `jugalbandi`

![image](https://github.com/glific/docs/assets/40158831/6dd12db6-3e08-4569-854b-1ae6acf22c2f)

When invoking a webhook, the initial step is to select a suitable HTTP method, such as `POST`, `GET`, or `PATCH`, to perform the desired function in the interaction between the caller and the Jugalbandi API.

The function is then called with three key-value pairs as the function body

![image](https://github.com/glific/docs/assets/40158831/7f509016-f7fd-43c8-83c1-b133dd95a7dc)

`url:` URL is referencing a given end point from the [Jugalbandi APIs](https://api.jugalbandi.ai/docs) some examples are given below

_below is picture showing the list of end points_

<img width="1453" alt="Screenshot 2024-02-13 at 8 05 22‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/972af81e-647b-429f-90ab-8ce2f5f8e635"/>

following shows how to use these end points in the webhook call parameter: 

1. to use GPT3.5: `https://api.jugalbandi.ai/query-with-langchain-gpt3-5`
1. to use GPT4: `https://api.jugalbandi.ai/query-with-langchain-gpt4`
2. to use GPT4 using custom prompt: `https://api.jugalbandi.ai/query-with-langchain-gpt4-custom-prompt`

`uuid_number:` The "uuid_number" is a special code assigned to a file when it is uploaded through the  [jugalbandi API](https://api.jugalbandi.ai/docs#/Document%20Store/upload_files_upload_files_post)  then this `UUID` is used to find the relevant information from the knowledge base and gives it back to you.

`query_string:` user query asked in flow

additionally, an extra parameter can be passed called `prompt:` in the API end points which end with `custom-prompt`. This is a system prompt that can be passed to the model. This enables NGOs to experiment with prompt engineering. Generally it can be used to provide guidelines or steps or explicit instructions for the LLM to process the 'query_string' being passed, like
-  to limit the length of response generated,
-  decline to answer if the question asked is outside the scope of the documents uploaded (this prevents what is termed as hallucination by the LLMs)
-  generate in a specific tone, ex catering to a student below the age of 15 etc.
-  anything else under the ambit of prompt engineering which allows one to get creative in eliciting responses from LLMs


Additionally, you can use [Google sheet](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Link%20Google%20Sheets/) feature to store response into google sheet as this data can later be analyzed to evaluate each model's accuracy and effectiveness and help you make a decision.

Using the [webhook logs](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Call%20a%20webhook/#checking-webhook-logs), you can view the logs of questions asked and responses received by ChatGPT.

**Step 7:** In the last step, the user is provided with their answer using the variable `@results.jugalbandi.answer`. This variable contains the response generated by the ChatGPT from custom knowledgebase, leveraging Jugalbandi APIs

## Pricing 
**Via Jugalbandi**

- No cost is involved for using jugalbandi integration in Glific. 
- Jugalbandi has it rate limited so an increased usage might lead to responses not getting generated. 
- To overcome rate limitation, orgs can acquire Open AI API access, and Jugalbandi team can create a separate instance and for the org and the cost will be as per usage of Open AI APIs. 
- Jugalbandi intends to keep the usage of the platform free of cost for the foreseeable future. 

**Cost involved in Open AI APIs**
- The cost involved in getting responses using Open AI‚Äôs APIs depends on 
      1. The type of model being used 
      2. The total number of token being processed (input + output) 
- https://openai.com/pricing contains the prices involved for each model along with details on the model
- Tokens roughly correspond to the number of words used
      - For the English language, 75 words roughly comes up to 100 tokens.
      - For Indic language, tokens usually are higher than English langauge
- To get an estimate of the tokens involved in a question + answer pair go here: https://platform.openai.com/tokenizer
- Paste the string of question, prompt and answer pair in the tokenizer to get an idea

For more details on pricing refer here: https://docs.google.com/document/d/1EBNwezbZFxhz8KyNyqqiUcebyjTFWejm6OKyxGrxhBA/edit

## Advanced Feature Webinar

<iframe width="800" height="500" src="https://www.youtube.com/embed/9fWOfnOFB9I" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
> ###**3 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Advanced`**

## Using ChatGPT within Glific using the OpenAI APIs

_**Leverage the capabilities of GPT models developed by OpenAI by using OpenAI APIs.**_

## Pre-requisites 
1. Create an account in OpenAI platform [platform](https://openai.com/product) 
2. Create new API keys
3. Make sure there is enough credit in OpenAI account to allow usage.
4. Pricing for API calls is as per OpenAI platform [pricing](https://openai.com/pricing)
   
<img width="1060" alt="Screenshot 2024-02-07 at 10 50 58‚ÄØAM" src="https://github.com/glific/docs/assets/141305477/d3c22780-a4ae-4aaa-b196-1d079fce7eb5" />

_Above is a representative image from the OpenAI platform account_

## How it will work 

1. Question is asked by the user after the flow is initiated
2. OpenAI API call is made using webhooks within the flow
3. Model being called to generate responses is `gpt-3.5-turbo-16k`
4. The response to the question is then sent to the user

## Steps to follow to set up OpenAI API in Glific platform
1. Go to `Settings`, find `OpenAI (ChatGPT) (Beta)`
2. Click on `is active` and paste the OpenAI API key from your OpenAI platform account

<img width="591" alt="Screenshot 2024-02-07 at 10 48 51‚ÄØAM" src="https://github.com/glific/docs/assets/141305477/87adef8e-1858-4aa6-8b46-7f976cfbb9fb" />

## Using the webhook for OpenAI API call in a Glific flow

<img width="1069" alt="Screenshot 2024-02-07 at 9 59 24‚ÄØAM" src="https://github.com/glific/docs/assets/141305477/babb9e27-fce5-4b2b-81d9-58017fd1a079" />

_Representative image to explain the steps in OpenAI API calls in a simple flow_

[Sample flow](https://drive.google.com/file/d/1jl0NWn73YlK1qMRedaPnGCQwDKHfG_7j/view?usp=drive_link)


1. Get the user question 
2. In `call a webhook` node, select `function` and paste function name as `parse_via_chat_gpt`
   
  <img width="684" alt="Screenshot 2024-02-07 at 10 52 49‚ÄØAM" src="https://github.com/glific/docs/assets/141305477/f1165b6b-483c-43b4-9e8d-7bb6044d6e24" />

3. Share the following function body 
 ` {
  "contact": "@contact",
  "results": "@results",
  "question_text": "@results.question" 
  }`

here `question_text` is the parameter name corresponding to user question. 

<img width="711" alt="Screenshot 2024-02-07 at 10 53 21‚ÄØAM" src="https://github.com/glific/docs/assets/141305477/65622c0e-2dfb-41fb-8f6d-a836e8a0f81d" />
  
4. The response from GPT is shown as `@results.webhookresultname.parsed_msg`, in the given example `gpt_response` is the webhook result name. 


## Limitations 
1. At present, this is simple question answer with the GPT model `gpt-3.5-turbo-16k`
2. Selection of GPT model is not yet customizable from org Glific instances
3. Additional system prompt is not yet customizable from org Glific instances
4. Parameters like temperature, top P etc are not yet customizable from org Glific instances

_Reach out to the Glific team to flag any further customizations within this functionality_
> ### **6 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Advanced`**


**Dialog Flow can be used in flows to send responses to end-users based on their intent when a specific keyword doesn‚Äôt match.**

## Video Tutorial

<iframe width="800" height="500" src="https://www.youtube.com/embed/oXIE_b-9UnQ" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

<br />

_The UI of the platform has been updated since the webinar was conducted. The functionalities shown all remain the same_

## Using DialogFlow NLP agent within Glific.

**Step 1 :** Open a GCP account, project and service account with a key (.json file).

**Step 2 :** Connect your Glific instance with this project by adding contents of its key file as GOTH credentials for Glific.

**Step 3 :** Open a DialogFlow Account and _create an NLP agent_ that links to the project created in Step 1.

**Step 4 :** Create some intents within your agent. You can do so by creating an intent from scratch OR by creating a KnowledgeBase from a set of FAQs

**Step 5 :** Create a flow in Glific that accepts a message from the user , maps it to an intent and delivers the response (as computed by the agent ) to the user.

Below are details on each of these steps.

**Step 1 : GCP Account and project**

Refer to the DialogFlow Quick start guide - [https://cloud.google.com/dialogflow/es/docs/quick/setup](https://cloud.google.com/dialogflow/es/docs/quick/setup) -  and execute the following  steps before you configure Glific

- Create a project 
- Enable Billing 
- Enable the API
- Set up Authentication (till you download the private key file.) You will use the content of this key file to set up your GOTH credentials in Glific.

Dialog Flow  can be used in flows to send responses to end-users based on their intent when a specific keyword doesn‚Äôt match.

**Step 3 : Open your DialogFlow account and create an Dialog flow agent connected with the project from step one.**

- Go to [https://dialogflow.cloud.google.com/](https://dialogflow.cloud.google.com/)

- Log in with your gmail id

- Click on &quot; Create Agent&quot;

- Choose Import an existing Project (You should be able to see your project from step 1 if you are in the same browser window)

**Step 4 :  Create some intents within your Dialog flow agent.**

1 . Create an intent

1 .  Go to Google Dialog flow [https://dialogflow.cloud.google.com/](https://dialogflow.cloud.google.com/)

2 . Click on `Create intent`button

![image](https://user-images.githubusercontent.com/32592458/212662142-af6ce124-9d8a-4c63-a6a6-7749a0189e21.png)



3 . Enter the `name` of the intent.

![image](https://user-images.githubusercontent.com/32592458/212662172-7a471ced-f64d-472b-b367-7c8e381ba16b.png)



4 . Enter the `phrases` you can expect user will send to BOT. Enter one phrase and hit enter to add it in the phrases list.

![image](https://user-images.githubusercontent.com/32592458/212662208-500f69f1-4899-4226-9e98-0a85e96f8cd2.png)

5 . Click on `Save` button.

![image](https://user-images.githubusercontent.com/32592458/212662375-6351b60a-233e-47f1-8abd-9bf8bddf4374.png)



6 .  It will be changed to `Done` after successful save

![image](https://user-images.githubusercontent.com/32592458/212662399-b0f8064e-af64-4e76-8beb-f23f64939ee7.png)



7 . Click on `setting` icon on top of the screen

![image](https://user-images.githubusercontent.com/32592458/212662419-dd2bb531-cd79-4855-a91a-638c3478a2dc.png)



8 .  Click on `ML Settings` and then click on `Train` button.

![image](https://user-images.githubusercontent.com/32592458/212662443-3f0340b2-868a-493d-ad6e-15a618d27507.png)

9 .  Click on `Save` button.

![image](https://user-images.githubusercontent.com/32592458/212662478-eb77daee-ba1d-4e43-bcec-a1758bbd0cb5.png)



10 .  After saving, click on `intents` menu.

11 .  To test type any phrase entered earlier in the `try it now` section and hit enter.

![image](https://user-images.githubusercontent.com/32592458/212662511-1aeedc29-328b-4336-b031-6e17cbc3c42d.png)

12 .  It will show the `intent` name matched to your phrase

![image](https://user-images.githubusercontent.com/32592458/212662537-a3bcc33b-d364-44ab-b8e3-f4bf7fb57993.png)

13 . Click on `Diagnostic info` button at the bottom of the section.  It will open an `API response`. Search for **Confidence** in the text to find the confidence level of the response match to the phrase. **Confidence** level **1**  is the highest level. Any thing above .75 is good matches to the phrase

![image](https://user-images.githubusercontent.com/32592458/212662560-bb9b4b7b-6984-45b2-9b83-319102fe82e0.png)



14 . Click on `Close` button. You are ready to use NLP in your flow.

NOTE : You can also create an intent by creating a Knowledge Base. This basically is a collection of FAQs that can be split across multiple documents.

a. Since this is a beta feature you will need to enable Beta features and API in your agent settings - under the General Tab.

b. Once done you will be able to create a Knowledge Base. Follow the instructions to point DialogFlow to your FAQ document(s)

c. Each knowledgebase is mapped to an auto-generated intent. You can test the knowledge base just like to test any intent. Ask a question from your FAQ and the agent should respond with corresponding answer.

Troubleshooting tip :  Added a new intent in Dialog Flow agent does not reflect in Glific split by intent dropdown ? IN settings  open Dialogflow  settings and just hit save without making a change.

## Step 2 : Configure Dialog Flow in Glific to connect to your GCP Project

1 .  Click on `NGO main account`, find `Settings` and go to `Dialogflow`.

<img width="384" alt="Screenshot 2024-03-04 at 3 11 54‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/1405fdf5-b01d-420c-adc3-3fee2849f03e" />



3 .  Enter `Goth Credentials` of your Dialog flow.  It is same as it is for your GCS account. Check the &quot;Is active&quot; box as well.

<img width="732" alt="Screenshot 2024-03-04 at 3 12 39‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/cb8c0128-5cfa-4b80-a0a9-0e7faf94acf2" />

4 . Click on **Save** button

## Give Google account Dialog flow access permissions

Note : This is only needed if your service account doesn&#39;t have complete owner privilege.

1 .  Go to [https://console.cloud.google.com/](https://console.cloud.google.com/)

2 .  Click on `IAM` menu from left menu list.

![image](https://user-images.githubusercontent.com/32592458/212662736-ad4a830c-e91e-4395-a8b5-4b9098bf811a.png)



3 .  Click on `members` button.

![image](https://user-images.githubusercontent.com/32592458/212662771-c0a57b1e-bb61-4f3e-ba31-ca5822c62b5e.png)



4 . Scroll down to the account you are using to link with Glific and check if user is having Dialog flow access permission. If not then click on `edit` icon next to the account permission section.

![image](https://user-images.githubusercontent.com/32592458/212662810-736cb0d7-75f0-45bf-8e42-4f01cce5feb2.png)



5 .  Click on `+ADD ANOTHER ROLE` link.



6 . From the dropdown search and select `Dialogflow API Admin`   and `Dialogflow Console Agent Editor` role.

![image](https://user-images.githubusercontent.com/32592458/212662843-3db1b51a-48c6-4d96-bf71-7b67d675d034.png)



7 .  Click on `Save` button at the bottom.

![image](https://user-images.githubusercontent.com/32592458/212662874-fbf6bd44-349b-4964-a50a-c5cb025c73ea.png)





## Step 5 : Create a flow in Glific that uses your DialogFlow Agent

1 .  Create a new Flow, or edit any existing flow.

2 . Use **Wait for response** action type to receive the intent phrase input  from user.

![image](https://user-images.githubusercontent.com/32592458/212662895-1d90e9f5-42c6-4f30-be85-096e2ec49710.png)



3 . Next linked node will be `Split by intent`

![image](https://user-images.githubusercontent.com/32592458/212662937-f7ca433b-b85d-4a35-a81b-2f52800f7913.png)

4 .  Select Dialog flow from the 2nd drop down.

5 .  Fill the details of your intent.

a) select `has top intent`

b) select your **intent name** created in dialog flow.

c) Enter the confidence level. (Enter the confidence you have got in intent to match it exactly with the phrase. or enter  **.5**  for now)

d) Enter category of the intent Ex. **intent name**

e) Enter the variable name to receive the input in `Result Name` section

![image](https://user-images.githubusercontent.com/32592458/212663016-95e4d7c8-2ac5-44fb-9cc1-121717375daf.png)

6 .  Click `ok` to save.



7 . You will get the **nlp response**, **nlp confidence** and **nlp intent** to use in your flow. syntax are

Response: **_@results.df_intent.response_**

Confidence: **_@results.df_intent.confidence_**

Intent: **_@results.df_intent.intent_**



![image](https://user-images.githubusercontent.com/32592458/212663042-68f1fa3b-9c24-4bfe-9aaf-aefb3c84ff2b.png)

**Flow Sample**

![image](https://user-images.githubusercontent.com/32592458/212663070-d7d43c7e-3c3f-47f2-8a0b-ccb0bc6e0471.png)



**Flow Results**

**Success case**

![image](https://user-images.githubusercontent.com/32592458/212663085-2fe17b6b-df29-4e56-905f-952fec2b27c2.png)



**No Match found case**

![image](https://user-images.githubusercontent.com/32592458/212663103-a76a7e11-2adf-4e1c-8cd7-bad58f735de9.png)
---
sidebar_position: 0
---

# Introduction

> ### **3 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**


**Glific is a WhatsApp based open source communication platform for NGOs to have conversations with their community. It is being developed under Project Tech4Dev initiative of Chintu Gudiya Foundation.**

**Glific aims to empower social organisations to act decisively and quickly on grassroots information through a range of host of features ranging from automated responses to comprehensive analytics.**

___

## Whatsapp Chatbot #101

**Here are a few things you should note when planning to use WhatsApp chatbot for your organization:**

1. **WhatsApp Business API** <br />
There are three ways to use WhatsApp, a basic app which we generally use to talk to our friends and family. WhatsApp business is meant for small businesses for small scale interactions with customers and allows basic automations like greeting and away messages. The third one is WhatsApp Business API which is meant for large scale two-way communication and it empowers businesses to do a lot more such as automate any amount of conversations, generate insights from it, schedule messages, send messages with buttons and a lot more - see here. WhatsApp Business API powers the WhatsApp based chatbots. When using WhatsApp chatbot, while end-users use their WhatsApp application, businesses log onto a different interface. 
<br />
2. **Conversation Types** <br />
Whenever a user messages the chatbot, businesses have 24-hrs to respond to their query (this is where chatbot helps). If the 24-hrs window closes, businesses can nudge the users to re-initiate conversation with a pre-approved template message only. To send messages outside of 24-hrs, businesses also need to get users to opt-in(or subscribe) to their number. If the contacts are not opted in and the window has closed, then you can only interact with them when they message you.
<br />
3. **Conversation Costs** <br />
With WhatsApp chatbot businesses have to incur costs to talk to their end-user, read in detail here. In addition to this, there‚Äôs also platform costs where the chatbot runs. 
<br />
4. **Chatbot Phone Number** <br />
You can use any kind of phone number that is active - either a special number or any regular number works, it can also be a virtual or a landline number. You only need the number on the mobile phone during the initial set up phases for OTP verifications. You must not link the chatbot number with any WhatsApp or WhatsApp business application. It gets linked with WhatsApp business API when you set up the chatbot.
<br />
5. **Constraints & Features** <br />
    a. **Optins:** Businesses must get end-users to initiate the first conversation and get them to explicitly mark that they are okay with receiving WhatsApp messages from your organization. This process can happen through forms, redirecting users from your Facebook page, or getting them to optin directly on whatsapp when they send you the first message (at Glific we enable you to do it easily on WhatsApp). <br />
    b. **No Groups:** WhatsApp business API doesn‚Äôt support groups functionality. You can only talk to your end-users in a 1-to-1 manner. You can broadcast messages to a large number of contacts but the conversation will be 1-to-1. 
<br />
    
    - Message Approvals: When sending messages outside of to opted-in users, you need to follow the guidelines set by WhatsApp and get your message approved by them. These messages are called HSM templates. Within 24-hrs you can send any message without approval.<br />
6. **Messaging Limits**<br />
    When you start your chatbot program, you can get as many end-users to send you a message as you want, but while sending a nudge message(HSM template) you can only send to 1000 contacts to begin with. When you messages to 2000 unique-contacts within a 7-days period, your messaging limit increases to 10,000 and similarly to 1,00,000.
    <br />
7. **Facebook Business Manager Verification** <br />
    The most critical step to getting access to WhatsApp business API and starting your chatbot is to get your business verified from Meta. Your business should be registered, it should have a facebook page and a website. Read more here to know the complete process.

___

## Quick Links
- Product Information
  - [Glific Two Pager](https://drive.google.com/file/d/1jWlB4wh8ZsUVlQf4xZ3UOVUkmG5QgQYx/view?usp=sharing) (What you can do with Glific)
  - [Product Video](https://www.youtube.com/watch?v=r6pI3YnINws) (5 min product overview video)
  - [Detailed Product Demo](https://www.youtube.com/watch?v=EO-W0cFy_i8) (Deep dive into the Product)
  - [Dashboard](https://datastudio.google.com/reporting/fdc97942-72e5-4d7d-92c4-4a4c7da9be86/page/p_t8287rtztc) (Sample)
  - [Tutorial Videos](https://www.youtube.com/channel/UCIJfQhrbJSCWQtzdI484nng/playlists)
  - [FAQ](https://chintugudiya.org/glific-faqs/)
  - [Onboarding Support Docs](https://glific.github.io/docs/docs/category/onboarding/)
  - [Platform Pricing](https://tides.coloredcow.com/pricing)
- [Case Studies](https://glific.org/tag/case-study/) (What other NGOs have done)
  - [Arogya World](https://glific.org/influencing-healthy-behaviours-on-whatsapp-through-ai-driven-nudges/)
  - [Digital Green](https://glific.org/reaching-farmers-directly-scaling-reach-reducing-time-to-get-analytics-from-months-to-seconds/)
  - [The Apprentice Project](https://glific.org/activities-quizzes-gamification-taps-education-program-on-whatsapp/)
  - [Reap Benefit](https://glific.org/reap-benefit-glific-google-sheets-makes-a-great-chatbot-to-help-covid-affected-families/)
  - [TAP](https://glific.org/activities-quizzes-gamification-taps-education-program-on-whatsapp/)
  - [Antarang](https://glific.org/antarang-foundation-ab-tests-their-user-registration-process-using-the-split-randomly-node/)
  - For more visit our [Blogs](https://glific.org/blogs/)
  
- VodCast 
  - [TAP](https://www.youtube.com/watch?v=ixAF0XX9DRs)
  - [Quest Alliance](https://www.youtube.com/watch?v=7tTLozX0fKE)
  - [Arogya World](https://www.youtube.com/watch?v=nraet2442a0)
  - [LAHI](https://www.youtube.com/watch?v=XsGIAYY4RVg)
  - [VOPA](https://www.youtube.com/watch?v=Mv8H_6fbAlg)
  - [STiR Education](https://www.youtube.com/watch?v=_LUuNTgIiPQ)
  - [Antarang](https://www.youtube.com/watch?v=pqCb5SYcWzk)
  - [Mukkamaar](https://www.youtube.com/watch?v=GyCONkQ1-vI)
  - [Digital Green](https://www.youtube.com/watch?v=5leX9Wp53cw)
  - [The Apprentice Project](https://www.youtube.com/watch?v=6n7jnEWByLo)
  - [Dhwani RIS](https://www.youtube.com/watch?v=u4iyoDAezck)

- Please checkout our [Discord Community](https://discord.gg/cHnTF9x) if you&#39;d like to see our support channel and interact with any of the NGO partners.

> ### **4 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**

___
![image](https://user-images.githubusercontent.com/32592458/212236384-09147af2-3acf-45b0-a644-4aa090bdda1e.png)

# Requirements
To be a part of Glific pilot you‚Äôll need these things:

1. **Facebook page** of your organization for **Facebook Business Manager Verification**
1. A **phone number** to be used for **Whatsapp Chatbot**
1. **There is a monthly fee of INR 7,500 for the platform usage and a one-time setup cost of INR 15,000 for initial consulting/training/customizations.** 
(The fee  covers our operational expenses and platform costs. Messaging costs are additional and will be paid via credit card directly to Gupshup - [all pricing details here](https://tides.coloredcow.com/pricing).  Platform development and enhancement costs are borne by philanthropic funding.)
1. **Your use case and how you plan to use it. For what programs, the scale, etc‚Ä¶**
(The reason is that once the NGOs identified the process and have documented how communications will happen at their organisations, it will be easier to apply Glific or any relevant software solution for that. Identifying and refining the process is key and super important.)  
1. **Your proposed workflow:** [**Example¬†1**](https://docs.google.com/document/d/1jQcSOLfASa_RR7f_JlZd7WT2INaSC9tTQCNdWI_EOOw/edit)**,** [**Example¬†2**](https://docs.google.com/document/d/1CQAFkDsktgk-2dUb_qOkeVZyLuObCyBql5wI3V3kT2E/edit)
(This a sample flow for ideas, your proposed workflow should be different from the example.)
1. **Details and description of any previous pilot experiments(with 10-50 users)** 
(Your NGO has done using your personal WhatsApp account.  This gives you a better idea of how you might want to structure the interaction, to begin with.)
1. [Knowledge of WhatsApp Ecosystem](https://glific.org/7-things-you-must-know-about-using-whatsapp-chatbot/ )
___
# Additional Pointers

These additional pointers may help you with the planning and piloting. The pilot can help you discover:

- How similar or different are the questions asked by your beneficiaries
- Identify a pattern in conversations
- Try a question-answer process with at least 20 beneficiaries
- Create an FAQ database based on your conversations
- Create a set of data points you generally need to collect
- [India Literacy Project Use Case Study](https://docs.google.com/document/d/1YnCnzfjxwPfOirJSgTE6_BQxkTpPKxbP_hP_6zXkNFY/edit), [Antarang Use case](https://docs.google.com/document/d/1jQcSOLfASa_RR7f_JlZd7WT2INaSC9tTQCNdWI_EOOw/edit?ts=5fe42228)
___
# Next Steps

- [Get Facebook Business Manager Verified](https://glific.github.io/docs/docs/Onboarding/Facebook%20Verification%20Process%20for%20WhatsApp%20Business%20API) for your organisation
- [Submit your details here](https://cc.tides.coloredcow.com/organization-registration)  

Note : When your Glific instance is set up, it is recommended that you provide us support access to your account. We generally name that support contact &quot;SaaS Admin&quot;. If this contact does not exist it might be harder for us to provide you the ideal turnaround on support issues.
___
# Setup and launch estimates

| Getting a new number* | approx.     4 days | _(can be done in parallel during fb verification process)_ |
| --- | --- | --- |
| Program design | 3-4 days  | _(depends on the NGO speed)                     (can be done in parallel during fb and Gupshup process_) |
| Get Facebook business manager verified | 5-20 days | _(5 days if all paperwork like branding, address proofs are in order, 20 days or more if it‚Äôs not)_ |
| Setup Glific | 1 day |  |
| GCS, BQ, DataStudio account creation and linking to Glific | 1 day | _(can be done in parallel during fb and Gupshup process)_ |
| Setup flows on Glific | 6-8 days | _(depends on the complexity and volume of flow and messages)_ |
| Test internally and with a ~20 end users | 3-4 days | _(test the flow plans before making it live for larger audience)_ |
| Ready to launch |  |  |

> *Please make sure to keep a check on the number&#39;s validity, inactive numbers might get shut down by your telecom service provider. You can recharge with a year-long plan or switch to a postpaid plan to avoid a shutdown.
___
# Glific Test Account

```
https://staging.tides.coloredcow.com/
Phone number: +917834811114
Password: Secret1234!
```

Please don&#39;t use this to build extensive flows and testing on live numbers. We update the account every week so any work you do is likely to be removed. Please only use it to view the platform and check out the features.

___

# Reference Article

- [Arist: The Text Message Learning Platform](https://www.arist.co) - Gives good ideas on how to structure content and make it engaging
- [FunDza Literacy Trust | Reading changes lives!](http://www.fundza.co.za) - A good example of how to use a highly structured menu and give access to lots of content. The WhatsApp number is at the bottom
- [Turn.io Learn](https://learn.turn.io) - Training material from our friends at Turn

___

# Importing Contacts from the Backend.

- NGO will need to share proof of opt-in being collected for each of the contact mentioned in the contact list to be imported. The proof should clearly reflect the user&#39;s consent of receiving messages on Whatsapp. 
- The opt-in details will be reviewed internally by Glific and processed only after approval. 
- The activity will be chargeable @ INR 2000 per request. If the contacts to be imported are more and the effort involved is greater than an hour then it will be charged at the rate of INR 2000/hour
> ### **2 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  `Intermediate`**
___

1. Go to [Google Cloud Console](https://console.cloud.google.com) and sign in with your Gsuite account.

![image](https://user-images.githubusercontent.com/32592458/212658353-8fed1d92-2e9d-4a9f-99c9-a359dc08698f.png)

2. After signing in you will be redirected to the Google Cloud console. Use link if not redirected: [https://console.cloud.google.com/getting-started](https://console.cloud.google.com/getting-started)

3.  Click on `TRY FOR FREE` and fill in Billing details.

![image](https://user-images.githubusercontent.com/32592458/212658391-1bd0d4ca-2b0d-452b-8433-844efda39820.png)

4. Select `Country` and check to agree to terms and conditions.

![image](https://user-images.githubusercontent.com/32592458/212658410-f1ed8d3a-0155-48b2-af9f-6d32f564b450.png)

5. Now fill in the rest of the details to verify.

![image](https://user-images.githubusercontent.com/32592458/212658435-487ebaa8-87fd-4223-9839-3b67f734c64d.png)

6. On the same page, fill in `Primary contact details` and `payment method details`and click on the `start my free trial.`

![image](https://user-images.githubusercontent.com/32592458/212658459-8d951455-6974-43d7-ac41-c68417d11ef7.png)

7. Now if it does not redirect you go to the google cloud console dashboard you can also use this link. [https://console.cloud.google.com/home](https://console.cloud.google.com/home)

8. Click `My Project` in the top bar to create a new project.

![image](https://user-images.githubusercontent.com/32592458/212658486-b65ab5bc-f270-4e71-b2fc-55a9e8ac010f.png)



9. Click on `New Project` at the top right corner.



![image](https://user-images.githubusercontent.com/32592458/212658511-abbcf419-0d1e-406d-9bd6-b4f58c2b5379.png)

10. Fill in your project details and click on the `CREATE` button.

![image](https://user-images.githubusercontent.com/32592458/212659618-d639b26f-f998-4f78-97f5-09c25a2d210c.png)

11. Select `Cloud Storage` from the side panel of Google Cloud Console Dashboard

![image](https://user-images.githubusercontent.com/32592458/212659644-31270258-de4f-4457-812a-e9ca693318a3.png)



12. Click on `CREATE` button to create a bucket to store data



![image](https://user-images.githubusercontent.com/32592458/212659921-587ddafc-1d15-4e8c-849c-3b087c987dec.png)

13. Enter the name of the bucket to be created and the preferred data location where data will be stored

![image](https://user-images.githubusercontent.com/32592458/212659958-a2f60758-3580-4ebd-a2a6-ecd2d9c9ee97.png)

14. Choose the preferred plan for storage and access control type and click on the `CREATE` button.

![image](https://user-images.githubusercontent.com/32592458/212659975-fa03ee09-ce26-4126-a12d-67533c64f2af.png)

15. A new bucket is created.

![image](https://user-images.githubusercontent.com/32592458/212659992-4e172f37-b99d-43c0-bd1c-42169b90d1c5.png)
___

## Making bucket Public

1 . Once Bucket is created, Open the bucket and click on `Permissions`.

![image](https://user-images.githubusercontent.com/32592458/212660019-29e80d68-f442-4bd5-802b-ba235490c4c1.png)



2 .  Click on the `ADD` button next to Permissions.

![image](https://user-images.githubusercontent.com/32592458/212660044-e3ed0eba-e776-486f-ac99-a10bcf10925d.png)

3 . Under the new members, tab choose `allUsers` **** and choose a role as Storage Admin.

![image](https://user-images.githubusercontent.com/32592458/212660068-c45ff88c-1ca3-4957-9f5e-bbf6afffc43c.png)



![image](https://user-images.githubusercontent.com/32592458/212660108-74a4e900-2852-41fe-ae95-e8e2adaf81fc.png)



4 . Click on `save` open and a pop-up will come for confirmation of making the bucket publicly accessible.

5 . Click on `ALLOW PUBLIC ACCESS`

![image](https://user-images.githubusercontent.com/32592458/212660135-9f33ac04-1b9c-4415-90b3-766ee23df40c.png)
> ### **1 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Intermediate`**
___

**Currently, Glific is using Google Cloud Storage (GCS) for various purposes like storing data for reporting  via BigQuery as well as for storing media files.**

## Video Tutorial

<iframe width="800" height="500" src="https://www.youtube.com/embed/afLYh7KOA_Y" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<br />
<br />

___

**You can use media file storage for both:**
- To save the files received from contacts in the user responses.
- To send the saved files to contacts in a chat flow.

Below is the step by step flow to setup GCS in Glific.

1. [Create an account in Google Cloud Storage (GCS).](https://glific.github.io/docs/docs/Onboarding/GCS%20Setup/Create%20an%20account%20in%20Google%20Cloud%20Storage%20GCS)  
1. [Upload files in GCS and use them within flows in Glific.](https://glific.github.io/docs/docs/Onboarding/GCS%20Setup/Upload%20files%20on%20GCS)

or

- [Integrate GCS in Glific to store media files received in chat flow.](https://glific.github.io/docs/docs/Onboarding/GCS%20Setup/Upload%20files%20on%20GCS#upload-media-files-in-the-gcs-bucket)


Refer this [video](https://drive.google.com/file/d/1kzwulj1kscMTFqqsj41jrgQpUu5FcPj-/view?usp=sharing) for more details.
___

## Reference Articles

- [GCS Pricing Details](https://cloud.google.com/storage/pricing)

- [Google Help Docs](https://cloud.google.com/storage/docs/quickstart-console)
> ### **2 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Intermediate`**
___

**To send files (images, audio, video, pdfs) to contacts, you would need to upload them to GCS and then attach link in the message.**

## Navigate to the bucket in GCS

1. Access Google console [https://console.cloud.google.com](https://console.cloud.google.com)

1. Click on `Storage` from the left Navigation., or search for it.

![image](https://user-images.githubusercontent.com/32592458/212660233-169b49b4-a4e9-4cb5-b3cb-1c029db30510.png)


3. Click on `Browser`  option under storage.

![image](https://user-images.githubusercontent.com/32592458/212660288-accb1040-c587-41bc-91df-0b74fe8a1044.png)



4.  Click on the `Bucket` you have already created in GCS.

![image](https://user-images.githubusercontent.com/32592458/212660324-9b4ba297-0d6f-484b-a470-6bbfe90987c4.png)
___

## Making bucket Public

5.   Open the bucket and click on Permissions.

![image](https://user-images.githubusercontent.com/32592458/212660370-28ddb3fb-a006-4c53-aeaf-2c996b6ed246.png)



6.  Click on the `ADD` button next to Permissions.

![image](https://user-images.githubusercontent.com/32592458/212660406-4d88150f-f2bd-4fd8-87b4-ab7525a28af6.png)



7.  Under the new members tab choose `allUsers` **** and choose a role as `Storage Admin`.

8.  Click on `save` open and a pop-up will come for confirmation of making the bucket publically accessible.

![image](https://user-images.githubusercontent.com/32592458/212660460-f69b525d-a981-42bf-8542-6db51605f57c.png)



9.  Click on `ALLOW PUBLIC ACCESS`



## Upload media files in the GCS bucket



5.  From the options at the top, click on the  `Upload files`  button.

![image](https://user-images.githubusercontent.com/32592458/212660893-038f203f-2292-46d4-8cf3-5952b13603de.png)



6.  It will open your system browser window. You can select one or multiple files and click on the `Open` button to upload the file.

![image](https://user-images.githubusercontent.com/32592458/212660923-3119c820-e69c-4385-83cb-d721417898e7.png)



7. Verify the file uploaded in the bucket. The file can be seen inside the bucket.

![image](https://user-images.githubusercontent.com/32592458/212660965-edc71bef-87ea-42d1-8f8f-560c135e64c4.png)



8.  Click on the file name to open the details of the file and copy the URL of the file.

<img width="1470" alt="test2" src="https://user-images.githubusercontent.com/143380171/268852539-554ae0fb-7792-415a-9556-36af6c6eacf1.png"/>

___
## Use media files in a flow 

9.  Follow the steps to send the media files to contacts through a flow.

- [Send media files in messages](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Send%20the%20contact%20a%20message/#send-media-files-in-a-message)
> ### **3 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**
___

**NGOs can add their billing details from their Glific account. Monthly subscription will be auto debited from Stripe integration in Glific on 1st of every month.**

## Pricing

- There is a monthly fee of INR 7,500 for the platform usage and a one-time setup cost of INR 15,000 for initial consulting/training/customizations. <br />

- The fee covers our operational expenses and platform costs. Messaging costs are additional and will be paid via credit card directly to Gupshup - [click here for Pricing Details](https://tides.coloredcow.com/pricing). Platform development and enhancement costs are borne by philanthropic funding.
___

## Add Billing and Card Details.

1. Login to your Glific account.

2. Click on the `Settings` icon.

![image](https://user-images.githubusercontent.com/32592458/212647849-425c83cf-7909-42a2-a11b-ea921ab46d6d.png)



3. Click on the `Edit` icon on the `billing` section.

![image](https://user-images.githubusercontent.com/32592458/212647873-bb9c9d35-096f-4b8d-9b4c-458dd9a29dd1.png)



4. Add the details

    i) **Your**  **Organisation Name** - Your organisation Name which you want on your invoice

    ii) **Email**  **ID**- Your email address, which will be used for  billings communication

    iii) **Card Number** - Your Credit Card details

5. Click on¬†the `Subscribe for monthly billing`button

![image](https://user-images.githubusercontent.com/32592458/212647896-aeb44854-de75-474b-97ed-71beb8a15215.png)

6. Once done you will see **You have an active subscription** message with a green tick.
___

## Edit Billing Details - Card

You can edit your billing details and card details on the Stripe portal

1. Clink on `Visit stripe portal` link at the bottom of the billing page.

![image](https://user-images.githubusercontent.com/32592458/212647930-923b8865-f81e-4ab2-9145-ed74bf2b3223.png)



2. Stripe portal will open up in another tab.

3.  Click on `+ Add payment method`

![image](https://user-images.githubusercontent.com/32592458/212647947-706990b9-e66f-47b1-ba34-6efa6f18c84f.png)

4.  Add the new card details and click on `Add` button

![image](https://user-images.githubusercontent.com/32592458/212647974-94326bbf-0e2f-4427-9e47-c2a307cedf6c.png)

5. Click on `Go back` button  and click on `X icon` in front of old card to remove it from stripe portal.

![image](https://user-images.githubusercontent.com/32592458/212648001-739688f9-b48d-405e-921c-128d5ae39618.png)
___
## Edit billing details - Email, GST

1. Click on `Update information` link from stripe portal under `Billing information` section.

![image](https://user-images.githubusercontent.com/32592458/212648037-cabeff02-cfe1-4587-b6de-39d072ee9d5a.png)

2.  Enter the `email` address you want to change.

3. Add the `TaxID` if you want to have it on your invoice. Select IND GST from the drop down.

![image](https://user-images.githubusercontent.com/32592458/212648073-85f7b3d2-cd31-4f1e-9073-84936641ab1c.png)

4.  Click on `Save` button

**Note** - To edit the Billing organisation name please contact Glific support team.
___
## View / Download invoices.

You can view or download your monthly invoices from stripe portal

1. Find the list of your monthly invoices under `Billing History` sections.

2. Click on `Date` of the invoice.

![image](https://user-images.githubusercontent.com/32592458/212648109-397f7a3a-8f60-4fab-ae87-9a631ec81442.png)

3. A new page will open up with invoice and receipt link.

4. Click on `Download invoice` button to download the invoice and Download receipt button to down the receipt of the payment.

![image](https://user-images.githubusercontent.com/32592458/212648176-d359bfac-bfed-4cdd-9d9d-bb961662e8ac.png)
> ### **6 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**
___
<h1>Video Tutorial</h1>

<iframe width="800" height="500" src="https://www.youtube.com/embed/UJqdnolQmGM?si=ztNkgph90e5Gtk2x" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

<h4>Note- We recorded this video somedays back while working with an org. We will re-record a better one in future</h4>

<h5>Things to keep ready before Facebook Verification-</h5>
Below are the 4 things you need to keep handy before you start FB verification, as you would need to add these details at different points in verification.

1) Registration certification- Required to verify the registered name and branding (you can read more about this in next session)

2) Utility bill (Electricity bill/Internet/Mobile bill)- Required to verify the name of the organization, the address, and phone number i.e 
   (BOT number). If the BOT number  is not available. Please match the exact address

3) Bank statement- Required to verify the organization name and address.

4) Phone number on which you would like to run the chatbot
   Make sure that this phone number should not be associated with WhatsApp Business or WhatsApp application.
   Needs to be active for the use so that you can get sms/call for verification. It could be running on a basic monthly plan.

## Creation of FB Business Manager

Create your Facebook Manager¬†or claim it for an existing page : Click here to know how [Create a Business 
  Manager
](https://www.facebook.com/business/help/1710077379203657?id=180505742745347)

## Branding Consistency

For smooth FB verification to happen, it is very important for your organization branding to be consistent with your registered entity name. Here are a few guidelines/workaround for the same-

1) Your Facebook page and domain name should be exactly the same or close to the registered business name. If that's not the case, For eg- 
   Glific Two-Way Communication Inc. is the registered name but the Facebook page name is Glific, and the website is www.glific.org, and email 
   id is info@glific.org, then you would need to explicitly mention on your website about page that "Your organization name is Glific Two-Way 
   Communication Inc. but popularly goes by the brand Glific". You may add it in any words you'd like but it needs to be very clearly 
   mentioned.

2) This applies also to cases where you may have subsidiary programs such as Chat for change is the program by Glific which has an FB page, 
   website, etc‚Ä¶but the registration certificate is in the name of Glific Two-Way Communication Inc. You would need to get approval for the 
   registered business entity.

3) Once this is done, you can give a specific display name to the chatbot which is relevant to the program and not the main entity. So, the 
   chatbot name can be Chat for change but again, it should show a clear connection with the main entity Glific Two-Way Communication.

4) Since you may also need to later verify your domain(website) you need access to your website codebase or have a valid email id for the 
   domain such as info@domain.com

## Facebook Verification Process

1) Log in using a **Facebook** account connected to your Business Page.

2) Access **Meta Business Suite**: 

3) Click on the downward-facing arrow in the top-right corner of the Facebook interface to open the dropdown menu.

4) Select "**Meta Business Suite**" from the dropdown menu.

5) Access Settings: Within the Meta Business Suite, click on "**Settings**."
![image6](https://user-images.githubusercontent.com/143380171/274565279-fbe2bfec-9dec-4a4d-80f9-861dcfb46503.png)

6) Navigate to **Business Setting**: Inside the Settings, locate and click on "**Business Settin**g."

7) In the Business Setting section, you may find options to update your business details, including the **Legal Business Name, Address,and 
   Contact Number**. Ensure that the business phone number matches the BOT number.
![image1](https://user-images.githubusercontent.com/143380171/274556525-3cea209f-24b8-49dd-9884-f84b9aad76b1.png)

   **Note:** The address you enter should match the document you'll be submitting for verification

8) Check Linked Facebook Page:Go to the "**Accounts**" section on the left-hand side.

9) Under "**Accounts**," click on "**Pages**" to check if your Facebook Page is correctly linked to your Business Manager.
![image2](https://user-images.githubusercontent.com/143380171/274577606-684ee46e-be51-4fa5-ab62-03a97877f804.png)

10) Configure **Brand Safety and Suitability Settings**:
In the left-hand menu, locate and click on "Brand Safety and Suitability."

11) Under this section, you should find an option for "**Domain**." 
    Click on "**Add a domain**."
![image3](https://user-images.githubusercontent.com/143380171/274577857-73abca95-625f-484b-8fe6-96880aa45b23.png)

## Additional Notes on Adding a Domain:
When adding a domain, only include the domain name itself without "www." at the beginning. For example, if your domain is 
"www.example.org," you should enter it as "example.org."
<br/>

![image4](https://user-images.githubusercontent.com/143380171/274578534-5a778337-1468-4fa4-806f-84568495b522.png)
![image5](https://user-images.githubusercontent.com/143380171/274578545-e48fc5f5-0afa-43ef-8322-969d3bfd639f.png)

   It usually takes 3 to 7 working days to  get verified.
   You can if Facebook is verified for not under Business Info.
   Once your Facebook is verified, please start the process to create an account on **Gupshup.**

<h1>Video Tutorial</h1>

<iframe width="800" height="500" src="https://www.youtube.com/embed/ej0ZeRMum4c?si=acpT8bCgmiIN_bFi" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

<h4>Note- We recorded this video somedays back while working with an org. We will re-record a better one in future</h4>

Next, go to [Gupshup.io](https://www.gupshup.io/) and click on sign up

![image](https://user-images.githubusercontent.com/32592458/212237110-a32280c9-8826-474b-b7a0-094c84bbcd0d.png)


1. Then create your account using Google(preferred) and **using a common email id** like `info@glific.org` or `chat@glific.org` instead of a personal email id so that it can be accessed by different team members when something fails to work. Complete the Signup.

![image](https://user-images.githubusercontent.com/32592458/212237130-d20dc178-ccff-46b0-984a-b79d67cce1f0.png)


2. A verification mail will be sent on the updated email address. Please verify the link by logging into your email account.
**Once verification is done. Please login using the credentials.**

![image](https://user-images.githubusercontent.com/130072273/233285404-8c040eef-9f71-4faf-8489-a8767fc29d3a.png)


3. Under **Have you been referred?** please select `Yes, by an ISV/Partner` option. Click on `Proceed`.

**IMPORTANT NOTE** : This is a mandatory step to receive OTP‚Äôs for your password reset.

![image](https://user-images.githubusercontent.com/130072273/233286078-2c831c44-59e4-4536-a696-51bd0525e17d.png)
 

4. Please fill in the **Company/Organization details.**

![image](https://user-images.githubusercontent.com/130072273/233286330-38c97b9e-0eae-4a2c-b809-151201a24722.png)


5. Click on the `Create your first App` button.

![image](https://user-images.githubusercontent.com/130072273/233286709-06f3bb99-5f3e-41d2-b8f9-650dd3ad0474.png)


6. Create an App page will open up. Click on the select `Access API` button.

![image](https://user-images.githubusercontent.com/130072273/233286944-35b719b3-c491-4134-8b00-d7f05bbee7b0.png)


7. Enter an app name (No space or special characters allowed). This is something internal and not visible to your end users & also **it cannot be changed once setup is completed**. So you can go for something like `GlificChatbot` or `TamilNaduChatbot` etc‚Ä¶

![image](https://user-images.githubusercontent.com/130072273/233287354-f1aafdef-064f-4862-bf28-f392d8c7949b.png)


8. Once the App name is entered. It will show as **Created successfully**. Click on `Go to Dashboard`.

![image](https://user-images.githubusercontent.com/130072273/233287630-bb1481fb-c34c-493d-8fc2-e1a2d5837000.png)


9. After creating the app you will be redirected to the what app dashboard(image below). Click on the `Go live` button.

![image](https://user-images.githubusercontent.com/130072273/233288175-775d6bbe-0367-4123-8a5e-a91e7ecb2fc7.png)


10. On the Next step click on `Get started` button under **Instant onboarding with Facebook embed**.

![image](https://user-images.githubusercontent.com/130072273/233288813-5ef5ea2c-a396-46dd-acbe-33710f5bd13f.png)


11. Select the **Country** and scroll down to click on the `Proceed` button.

![image](https://user-images.githubusercontent.com/130072273/233289185-3abc6c2b-1a26-4ccd-9f78-54e34c908d6b.png)


12. Enter the details of a contact person from your organization (It should be someone who would be managing chatbot work for the organization) & click `Next`button.

![image](https://user-images.githubusercontent.com/130072273/233289596-30c543a0-3bdb-45d1-abaf-89c55c720b56.png)


13. Click on `Confirm` button.

![image](https://user-images.githubusercontent.com/130072273/233290836-8858c4e3-a4ac-40ad-9f45-aa2dfd8cd349.png)


14. Click on `Continue with Facebook` in the next page. It will redirect to Facebook login page. 

![Continue with Facebook](https://user-images.githubusercontent.com/130072273/233291163-3dc9d020-ed29-4160-bb39-c0b5c5956870.png)


15. Configure read receipts¬†in the Gupshup account. Please refer to [Configure read receipts¬†in Gupshup account](https://glific.github.io/docs/docs/FAQ/Configure%20read%20receipts%20in%20Gupshup%20account./) for detailed steps.


16. On FaceBook Registration. Click on `Continue with FaceBook` button.

![image](https://user-images.githubusercontent.com/32592458/212237363-f893f635-2b2c-4eab-ac01-e89c7eade633.png)


17. Select your business page with which you want to setup your WhatsApp chatbot. and Click `Continue`.

![image](https://user-images.githubusercontent.com/32592458/212237399-a7540ca4-afd1-4b74-b991-3fe1c0e513a6.png)


18. Enter `display name` of your business. This will be visible to your users. The display name should be similar to your brand identity and not different like Glific Two-Way Communication can&#39;t be GTWC. GTWC will get rejected.

![image](https://user-images.githubusercontent.com/32592458/212237414-a413e8a9-55b5-4d07-b079-57feee30b34a.png)


19. You will get a message `Account has been setup`. Click on `Continue to Step 2`

![image](https://user-images.githubusercontent.com/32592458/212237427-ec68cc88-97ff-45c7-add3-6c7ef62759d9.png)


20. Select your business category like `Non-Profit`**.** And add your organisation details

![image](https://user-images.githubusercontent.com/32592458/212237443-923fe52a-f195-42ba-8284-0b24dbc468e9.png)


21. Enter your `Chatbot number`and click on `send code`. Select`Text message`

![image](https://user-images.githubusercontent.com/32592458/212237463-e5cbdc91-0a19-4922-8361-99a6829c4198.png)

![image](https://user-images.githubusercontent.com/32592458/212237481-815f723e-78e7-40ea-b5bc-3fee5adcfe17.png)


22. Click `OK`

![image](https://user-images.githubusercontent.com/32592458/212237511-56140dee-0ec9-41fe-82d9-4468f34acf62.png)


23. Go back to your Gupshup account/tab. Select your BOT number and click on `Confirm`

![image](https://user-images.githubusercontent.com/32592458/212237535-53070a91-25d0-4ba6-8d3d-fb9ea316865d.png)


24. Click `confirm` on the next screen

![image](https://user-images.githubusercontent.com/32592458/212237548-37e5d59e-c91b-434c-9a73-aac9210f154c.png)


25. Click on `Go to Dashboard`button on Congratulations page. Your setup is complete.

![image](https://user-images.githubusercontent.com/32592458/212237561-a98717d4-dc52-4ecf-ac44-12a4b00cd5b2.png)


26. Then go to the Security Centre page on Facebook business manager. You should find the button activated. In case it doesn&#39;t get activated instantly, you may give it some time. If it&#39;s taking longer than a few hours, contact us.

![image](https://user-images.githubusercontent.com/32592458/212237581-64976b86-a052-47a1-a685-10cc604032b5.png)


27. If you still don&#39;t see or get access to `start verification`, go to News Pages in your business manager, add your page and then click on verify your business.

![image](https://user-images.githubusercontent.com/32592458/212237592-58a68279-af03-44b9-bca4-4e9b38d5e7f6.png)


28. The process is straightforward after that. You will be required to verify your business by uploading some documents. Please refer to this document for verification guidance: [https://drive.google.com/file/d/1HhcirTBjhiYdXcOUFg04uJG4yxL8vpq-/view?usp=sharing/](https://drive.google.com/file/d/1HhcirTBjhiYdXcOUFg04uJG4yxL8vpq-/view?usp=sharing/)


29. As the doc will mention, using `Certificate of registration` is highly recommended to not get the approval process rejected. _Please make sure your provided business details exactly match with the detail in the document._


30. Once done, Facebook will take 3-4 days to review and you will receive an email once this is done. The button in the Security Centre will also have changed. Please reach out to us in case it&#39;s taking more than a week. We&#39;ll reach out to FB to expedite the process.


31. While the Facebook business is getting verified, you can send us a request to set up a glific account. (Note : Billing will start as soon as the account is set up) . To set up you account send us your details here: [https://cc.tides.coloredcow.com/organization-registration](https://cc.tides.coloredcow.com/organization-registration) after clicking on `continue` button
    1. App Name _(see step 11 above)_
    1. Your chatbot phone number _(what you used in step 25)_


32. API key For API key, go to Gupshup **_Home&gt;&gt; Dashboard &gt;&gt; Profile Settings_** on Gupshup page and click on your `profile image` to get your API key.

![image](https://user-images.githubusercontent.com/32592458/212237622-60245fbc-461e-4a3e-9493-61cd5f964121.png)

___
## After Glific setup:


Update the Gupshup settings with a **callback URL**. (_**_we will provide you with the callback URL to add_**_) 

Steps to update the **Callback URL**. 

1. Click on the **App name** in the Dashboard.

![image](https://user-images.githubusercontent.com/130072273/233299613-0c990056-fff9-4e8e-b637-1be2062be067.png)


2. Click on **Webhook** option on the top. Then enter the Callback URL in the Box below & click on `Set` button. 

![image](https://user-images.githubusercontent.com/130072273/233300205-a65edf6e-44f0-4f1f-9555-59a20741feca.png)

> ### **5 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**
___

For a GupShup account, you will also need

    1.  [Facebook verification process for WA business API](https://glific.github.io/docs/docs/Onboarding/Facebook%20verification%20process%20for%20WA%20business%20API/)

1.  A new phone number or an phone number that hasn‚Äôt been used with WhatsApp(\*\*). The sim card should be activated with a minimal plan so as to receive sms verification code/call from Gupshup

** To dis-associate your phone number from WhatsApp you need to open WhatsApp on your phone. Go to Settings ‚Üí Account ‚Üí Delete my account. Note - simply uninstalling the app **does not\*\* remove the association between the phone number and WhatsApp.

There are 2 ways to proceed with your gupshup account. You will need to make that choice at step #13 in the documentation below.

1. Traditional Flow : Here is a [video](https://www.gupshup.io/resources/developers/how-to-set-up-your-whatsapp-business-account-and-go-live-with-the-gupshup-traditional-flow) from gupshup that outlines the process for going live with &quot;Traditional Flow&quot; . You would do this if you have a _verified Meta Business Manager account_.
1. FaceBook Embedded Flow : If your Meta Business Account is _not verified_ you may have to choose the &quot;Embedded Flow&quot;.

Here is useful documentation from [Gupshup.io](https://support.gupshup.io/hc/en-us/articles/360012075939-What-is-required-to-Go-Live-with-my-app-) that helps you understand the difference between the two.

**TIP:** To check if your Facebook Business Manager Account is verified, log in as admin into your Meta/Facebook Business Account at [business.facebook.com](http://business.facebook.com/). You need to select your business in the dropdown at the top left (it may be default) ; Using the left menu go to Settings-&gt; More Business Settings -&gt; Security Center to check verified status.
___
## Create your GupShup Account

> **Note :-** _This is a Self-Service step. No need to contact to Gupshup for this. Gupshup may take the route of enterprise Gupshup setup, which is not useful and not required for Glific SAAS service._

1. Go to [https://www.gupshup.io/](https://www.gupshup.io/) and Click on Login and then Click on **sign up here** link. **Note:** Please create an account such that it is shareable with other team members. Because GupShup doesn&#39;t allow multiple team members on one account.

<img width="1436" alt="Screenshot 2023-03-27 at 4 05 03 PM" src="https://user-images.githubusercontent.com/16541548/227918374-b701f880-d0b6-4f3e-a030-1e798e705f07.png" />

<img width="1410" alt="Screenshot 2023-03-27 at 4 04 49 PM" src="https://user-images.githubusercontent.com/16541548/227918354-cf811f98-9f55-4068-b250-cbe7c40c6b79.png" />

<img width="1343" alt="Screenshot 2023-03-27 at 4 08 33 PM" src="https://user-images.githubusercontent.com/16541548/227918761-79ab9c9f-4d89-4629-997a-e446eb376d12.png" />

2 . After Signup access and click on the `login` link

<img width="1436" alt="Screenshot 2023-03-27 at 4 05 03 PM" src="https://user-images.githubusercontent.com/16541548/227918374-b701f880-d0b6-4f3e-a030-1e798e705f07.png" />

3.  Enter your email and password. Or use Google/FB account to login.

![image](https://user-images.githubusercontent.com/32592458/212237803-f287ace6-1d14-467d-8d38-f4d4a8997fc8.png)

**_For an NGO organization, the preferred option would be Google (using your G Suite email id) or Facebook (your NGO Facebook page)._**

4.  If it does not redirect you go to the WhatsApp dashboard you can also use this link. [https://www.gupshup.io/whatsappassistant/#/whatsapp-dashboard](https://www.gupshup.io/whatsappassistant/#/whatsapp-dashboard)

5.  Click on the `+Create App` button on the WhatsApp dashboard screen in the right top corner.

<img width="1408" alt="Screenshot 2023-03-27 at 4 11 50 PM" src="https://user-images.githubusercontent.com/16541548/227919452-c7724105-1da9-4b57-a707-22f5065160a8.png" />


6 . **CreateApp** page will open up. Click on select `Access API` button.

<img width="1343" alt="Screenshot 2023-03-27 at 4 13 33 PM" src="https://user-images.githubusercontent.com/16541548/227919743-90707ed1-4f47-4878-9a1f-7fa85911e4f8.png" />


7.  Enter your organization name and create the app. The name of the app could be your org name or initials or any variations like organization name or abbreviation (CC, ILP, SoL, etc).

<img width="1283" alt="Screenshot 2023-03-27 at 4 15 04 PM" src="https://user-images.githubusercontent.com/16541548/227920097-1f55e8d4-6cb9-44d7-8656-88da23ff07c7.png" />

8. Click on **Go To Dashboard** button.

<img width="743" alt="Screenshot 2023-03-27 at 4 15 53 PM" src="https://user-images.githubusercontent.com/16541548/227920529-24bfb3c1-2197-40b3-882a-2149edbe17f6.png" />

9. Click on GO LIve Button
8 . Click on `Onboarding mechanisms` dropdown arrow. And scroll down.

![image](https://user-images.githubusercontent.com/32592458/212237866-928e7f03-a84f-477d-a4eb-a2032155864d.png)

a) Disable Automated opt-in message.

![image](https://user-images.githubusercontent.com/32592458/212237884-e64243bf-03d1-4833-9336-2f40911a792d.png)

9.  It will redirect to the stage 2 page. Scroll to the bottom and click on `next` button.

![image](https://user-images.githubusercontent.com/32592458/212237892-406d705b-980e-4d35-bfcb-0cbb551b63a9.png)

10 . Step 3 page. Enable `template messaging.`

![image](https://user-images.githubusercontent.com/32592458/212237909-526dbf82-0293-4e8c-a4ff-004a455cb032.png)

11 . Scroll down and click on `Go To dashboard` button

![image](https://user-images.githubusercontent.com/32592458/212237928-78d5f135-0a95-4828-9c94-669928f9bf95.png)

12 . After creating the app you will be redirected to the what app dashboard(image below). Click on the `Go live` button.

![image](https://user-images.githubusercontent.com/32592458/212237941-e154a1ad-8ef7-4f28-9b43-f8f4b0aa0738.png)

13 . It will ask to select one of the options. Select `Go Live with Traditional Gupshup Flow`and then select `New Number` and then click on `confirm` button

![image](https://user-images.githubusercontent.com/32592458/212237959-08bbfe58-f16a-4a2e-8e8f-14f115a5ad51.png)

![image](https://user-images.githubusercontent.com/32592458/212237979-f295070b-c707-4683-a420-2879a51a05c2.png)

14 . It will ask to if you are ready to setup your business details. Click on `I am ready` button

![image](https://user-images.githubusercontent.com/32592458/212237997-f8b25254-0961-4f64-8623-dbb8e2b756a5.png)

15 . Enter the `country` and scroll down to click on `proceed` button

![image](https://user-images.githubusercontent.com/32592458/212238012-aa5d96aa-f734-4c57-87cd-47fc5e8448f6.png)

![image](https://user-images.githubusercontent.com/32592458/212238025-d70d1f53-8a49-466e-9038-e5e9527d0060.png)

16. Fill in all your general details and your **email id** (on which you will receive verification email), office address, etc... (**_All the details should match your Facebook manager account_**) and then click on `next`.

![image](https://user-images.githubusercontent.com/32592458/212238049-8645bca0-f128-464d-b944-fe714e519634.png)

17. Verify your account via the verification email and click `confirm`.

![image](https://user-images.githubusercontent.com/32592458/212238066-29c4845f-37ed-47a9-a1a3-3937253e6056.png)

18. Then it will ask for your Facebook business manager id. You can get it from here. Enter your FMId and click on confirm.

![image](https://user-images.githubusercontent.com/32592458/212238079-8a8d0204-b027-4a45-a76f-73175421ce2c.png)

19. After that it will ask you to add a Facebook Business manager ID and then it will ask a new chatbot number. Enter the number and click on `save`.

![image](https://user-images.githubusercontent.com/32592458/212238089-ebc1fdd7-b50b-4e97-9403-8da176620124.png)

![image](https://user-images.githubusercontent.com/32592458/212238106-dc1ce8fe-6680-4183-bc8a-2e59f290de93.png)

20. After adding the chatbot number, Gupshup mentions that they take 2-7 days to verify your Facebook manager ID.

21. Go to your Facebook manager and accept the request from the request screen. (It should show on this screen below).

![image](https://user-images.githubusercontent.com/32592458/212238122-b99bdcff-efe5-4fd5-979c-6c7958618776.png)

22. Now go to your Gupshup account again and verify the mobile number via OTP or a call (image as shown in point 9).

![image](https://user-images.githubusercontent.com/32592458/212238137-05f5a452-6d63-4c36-a618-0619008a40f7.png)

23. After verification, you will be live on Gupshup.

24. To set up Glific, you‚Äôll need to send us the following details at https://prod.glific.com/organization-registration

25. App Name
26. GupShup account phone number
27. API key - Go to Gupshup, Click on the right corner top click on it and copy the API key and paste it in the Glific form

<img width="213" alt="Screenshot 2024-02-15 at 9 29 44‚ÄØAM" src="https://github.com/glific/docs/assets/143380171/71d4c140-ed0a-48c2-9167-815196e394c5"/>

Click on `continue` button.

![image](https://user-images.githubusercontent.com/32592458/212238150-d2bfd134-a1ce-4722-a559-94114272b2fb.png)

25 . Fill the details in the form and click on `Get started`button.

![image](https://user-images.githubusercontent.com/32592458/212238167-e65001ac-5fd2-48ca-bae5-05ddc3c524c8.png)

26 . Go to **_Home&gt;&gt; Dashboard &gt;&gt; Profile Settings_** on Gupshup page and click on your `profile image` to get your API key.

![image](https://user-images.githubusercontent.com/32592458/212238181-217f960e-9dd8-4e2d-9a35-fb4fa7686114.png)

27. Update the Gupshup settings with a `callback URL`, on the settings page. To reach faster, search for callback: _(_**_message us to provide you with the callback URL to add_**_)_

![image](https://user-images.githubusercontent.com/32592458/212238205-ebfe72e5-2eb2-4379-868f-f42881c7d61c.png)

28. Please make sure your option to send template messages is enabled (see below*).*

![image](https://user-images.githubusercontent.com/32592458/212238218-000a79e2-1a16-44ad-aaf3-5346c573a553.png)

29 . Approve the OTP HSM for your registration and other OTP requirements. Follow the steps below:

    1. Click on the `View templates` button

![image](https://user-images.githubusercontent.com/32592458/212238236-e894a1fc-4d29-4be5-a956-dc99359727f7.png)

b. Click on the `Add more`button

![image](https://user-images.githubusercontent.com/32592458/212238246-528c821b-de7b-44d0-a780-0a2548556e7a.png)

c. Find the OTP template and click on `Submit for Approval`**.**

![image](https://user-images.githubusercontent.com/32592458/212238257-2c7c148c-9acb-43a2-a157-21877fed7568.png)

![image](https://user-images.githubusercontent.com/32592458/212238268-62214b8f-91f7-4774-93f6-abf4d01a92ab.png)

d. Now Click on `Submit`. It will take a couple of hours to get approved.

![image](https://user-images.githubusercontent.com/32592458/212238290-85eb9ccf-37ff-47f8-9659-9fc309a5b8d2.png)

30 . Turn off the **automated opt-in message** option (refer to the image below ), so that users will not get optin message when they send the message for the first time. Glific provides an easier way to get optin preferences from a flow. Refer [Configure Optin &amp; Optout preferences in Glific](https://glific.github.io/docs/docs/Product%20Features/Flows/Others/Configure%20Optin%20&%20Optout%20preferences%20in%20Glific/) for more details.

![image](https://user-images.githubusercontent.com/32592458/212238328-fa927959-1c14-454c-94aa-8e5a52fff64a.png)

![image](https://user-images.githubusercontent.com/32592458/212238338-19775932-dfd0-422a-94e7-964db10b4fab.png)
___
## Configure Read Receipts¬†in the Gupshup Account

Please refer to [Configure read receipts¬†in Gupshup account](https://glific.github.io/docs/docs/FAQ/Configure%20read%20receipts%20in%20Gupshup%20account./) for detailed steps.

If you&#39;re done with this step and want to get started with Glific, you may also [check out the onboarding steps here](https://glific.github.io/docs/docs/Onboarding/Glific%20Onboarding%20Toolkit).
## Check Whatsapp Messaging limits

Messaging limits determine the maximum number of business-initiated conversations you can initiate using each of your phone numbers in a rolling 24-hour period. A business-initiated conversation begins when the first template message is delivered to a customer and ends 24 hours later.

The phone number tier of your WhatsApp API account will determine your messaging limit - the number of Contacts an account can message. 


There are five tiers a phone number inside a WABA can reach, including:

_**Unverified Trial Tier**_: Send messages to 50 unique Contacts in a rolling 24-hour period.

_**Tier 1**_: Send template messages to 1K Contacts in a rolling 24-hour period.

_**Tier 2**_: Send template messages to 10K unique Contacts in a rolling 24-hour period

_**Tier 3**_: Send template messages to 100K Contacts in a rolling 24-hour period

_**Tier 4**_: Send template messages to unlimited unique Contacts in a rolling 24-hour period


If a sender has initiated X or more conversations with unique customers(where X is your current messaging limit divided by 2) in the last 7days, then the tier will be up by 1 level. For example- If you are in tier 1 and send 500 business conversations to unique users in 7days,  you would be moved from Tier1 to Tier2.


**Example 1**: A WhatsApp Sender begins by being able to initiate business conversations to 1000 unique customers per day. On day 1, the Sender starts 500 business conversations to unique customers by 3pm. The message limit for the Sender is raised to 10,000 unique customers by day 2 at 3pm. 

**Example 2**: A WhatsApp Sender begins by being able to initiate business conversations to 1000 unique customers per day. On day 1, the Sender starts 100 business conversations to unique customers. On day 2, the Sender starts another 300 business conversations to unique customers. On day 3, the Sender starts another 100 business conversations to unique customers by 3pm. This brings the total number of unique business conversations in the last 7 days to 500. The message limit for the Sender is raised to 10,000 unique customers by day 4 at 3pm.


## Quality Rating

Your quality rating is based on how messages have been received by recipients over the past seven days and is weighted by recency. It is determined by a combination of quality signals from conversations between businesses and users. Examples include user feedback signals like blocks, reports and the reasons users provide when they block a business.


**Maintaining High Quality**
* Make sure messages follow the Whatsapp Businnes Policy (https://www.whatsapp.com/legal/business-policy/) and Commerce Policy ( https://www.whatsapp.com/legal/commerce-policy/).
* Only send messages to users who have opted into receiving messages from your business. 
* Make the messages highly personalized and useful to users. Avoid sending open-ended welcome or introductory messages.
* Be mindful of messaging frequency; avoid sending customers too many messages a day. Be thoughtful of informational messages, optimizing for content and length.


**Please refer the following link for more information :**

  https://developers.facebook.com/docs/whatsapp/messaging-limits/



## How to check how many HSM template messages are sent from BOT.

1 . Login to Gupshup [https://www.gupshup.io](https://www.gupshup.io/developer/home)

2 . From the `Dashboard` dropdown click on the `My Wallet` link

![image](https://user-images.githubusercontent.com/32592458/220826444-e851183c-a8b2-45bd-b4e8-caade39dbafd.png)



3 . Click on `View Usage` button

![image](https://user-images.githubusercontent.com/32592458/220826458-3d403b42-70d8-4be8-a486-debd18b4a869.png)



4 . Under the `Messages breakup` section, check the `Template Sent`and `Template Media` details.

![image](https://user-images.githubusercontent.com/32592458/220826470-3977e185-1866-4544-a4a8-499bc6751e8b.png)

5 .  To filter the results use `Filter by App` and `month` dropdown. You can also download the report from `Download report` the button.

![image](https://user-images.githubusercontent.com/32592458/220826480-d91d47f8-5021-49c6-95cc-de25c425821d.png)
1 .  Go to google console ([https://console.cloud.google.com](https://console.cloud.google.com/home/dashboard?project=tides-saas-309509)).

2 .  From top click on 3 lines icon next to Google Cloud Platform

3 . From left panel mouse over on `IAM & Admin` menu item.

![image](https://user-images.githubusercontent.com/32592458/220826170-fea17b70-75df-42ca-8ed6-66e54ea74dc7.png)



4 . It will open a sub menu. Click on `IAM` sub menu item.

![image](https://user-images.githubusercontent.com/32592458/220826180-6162b681-c041-453f-9c42-81c7d496db4c.png)



5 . Permission page will open up. Click on `Add` link from top of the page.



![image](https://user-images.githubusercontent.com/32592458/220826189-3b9e1d11-945f-4558-b63d-223c5540439b.png)



6 . In `New principals` filed, type the `email id`of the person to whom you need to give the permissions.

![image](https://user-images.githubusercontent.com/32592458/220826204-91cbb82f-bd67-47ae-87f3-18a31f9158e1.png)

7 .  Click on `Roles` field dropdown and type `owner` and select it from the options given in the dropdown. You can select any other roles (Browser, editor, viewer) for the person based on your requirement.

![image](https://user-images.githubusercontent.com/32592458/220826217-806b27e0-b663-423b-962a-3ef1f81f2800.png)

8 .  Click on `Save` button to give the permissions. The user will receive an email with the access link and accept the permission.
You can configure a link like below and send to the contacts through SMS or emails.

Once they will click on the link, it will redirect them to a WhatsApp with the message, which they can send to start the conversation.



Method 1 : Commonly used to onboard existing  users to chatbot.

[https://wa.me/+91&lt;10 digit bot phone number&gt;?text=](https://wa.me/+917772309999?text=Hi)&lt;text you want user to send&gt;

Eg: A URL like the one below  can be used to trigger your new contact flow with optin. [https://wa.me/+91&lt;your bot phone number&gt;?text=Hi](https://wa.me/+917772309999?text=Hi)

Whatsapp documentation for the same : [https://faq.whatsapp.com/452366545421244/?helpref=uf_share](https://faq.whatsapp.com/452366545421244/?helpref=uf_share)

Method 2:

https://api.whatsapp.com/send?phone=**BOTNumber**&amp;text=**Message**

- **https://api.whatsapp.com/send?phone=** - link prefix
- **Your BOT Number** - Ex. 917302307943
- **text=** - fixed content of the link 
- **Message** - This will be message which will be posted on the WhatsApp.  Ex. Hi

[https://api.whatsapp.com/send?phone=917302307943&amp;text=Hi%20Glific%20team](https://api.whatsapp.com/send?phone=917302307943&text=Hi%20Glific%20team)

Message will look as given below for contacts in WhatsApp

![image](https://user-images.githubusercontent.com/32592458/220826084-fe5c3a72-dcd0-4cf1-bfc6-d4a626246b67.png)
# 

Currently in Glific, the bulk contact uploads can only be performed by the Glific Tech team. NGOs can use the discord channel or any other communication medium to share the required details with the team. The team requires all the list of contacts with specific details in an Excel format sheet. Once the required sheet is available it takes 24hrs or less to add them to the NGOs Glific account.

## File Format

Here is a sample [Excel format](https://docs.google.com/spreadsheets/d/1YZQgn2epiRWNqzDjow5EoR14YxCg_KV2hQKrUJvOfz4/edit#gid=0) that NGO needs to provide to the Glific team for bulk contacts onboarding.

![image](https://user-images.githubusercontent.com/32592458/220826244-f9aaf7d7-ffa1-4b07-972e-d6cd279055b0.png)

## 

## Sharing the details for the column below:



**Name:** It should contain the name of the beneficiary. This is a mandatory field for the onboarding process and it also makes sure that the organization knows their contacts and doesn&#39;t perform any spamming activity.

**Phone (WhatsApp number):** It should contain the active WhatsApp number of the beneficiary from which they will send or receive the messages.

_Please make sure to add the_ **_country code_** _to the number. For example 91 for India based contact_

**Optin:** It should contain the DateTime string of when you have taken permission from the user to send them a message. This is a mandatory field and it ensures that NGOs have taken permission from their beneficiaries to communicate with them through WhatsApp.

**_Note:_** _WhatsApp policy is very strict about this and if the users started blocking the numbers on WhatsApp, as per the policy WhatsApp will connect with NGOs for the consent details and also might ban the business number for a lifetime._
1. Login to your Gupshup account.

2. Click on Dashbaord

3. CLick on Settings tab
 
4. Check the waba ID under APP type

<img width="668" alt="Screenshot 2023-04-06 at 7 20 31 PM" src="https://user-images.githubusercontent.com/16541548/230400972-7e8f103d-e4cf-4ae8-8d8f-6094a15698d2.png" />
To get **upload attachment** option, one needs to setup GCS and make it active in Glific.

### **Upload Attachment**

![image](https://user-images.githubusercontent.com/32592458/220826106-0d37027d-a37c-4dc6-b9b9-0119cc9496ea.png)



### **Activate GCS in Glific**

![image](https://user-images.githubusercontent.com/32592458/220826115-e572afa1-9388-463c-b458-a028cc17336f.png)
Basic WhatsApp text formatting option are available in flow editor. Refer [this article](https://faq.whatsapp.com/general/chats/how-to-format-your-messages/?lang=en) for more details

## Text Formatting

1 . User ***** to make the text bold. - ***Bold***

2 . User **_** to make the text italic. **_Italic_**

3 **** . **** User **~** to strikethrough the text .**~strikethrough~**

4 . Use **&#39;&#39;&#39;**  for monospace-  **&#39;&#39;&#39;monospace&#39;&#39;&#39;**

![image](https://user-images.githubusercontent.com/32592458/220825997-0e940f0f-2ca9-43b7-949a-0a53ee7f6fa5.png)



## Add Emojis

Generally, all browser provide Emojis extension. Once you have added the extension, you can add emojis with right click in the text editor of message.

Below example is from chrome.

![image](https://user-images.githubusercontent.com/32592458/220826004-44f8faf5-267c-4e2b-bea0-08bf9c21718e.png)

![image](https://user-images.githubusercontent.com/32592458/220826011-054d2829-c06a-4ff7-8cdd-78647fe01b35.png)
Check if there is stop icon in the contact messages. If it is there, contact  is has not opted in, please ask contact to send **optin** keyword to the BOT.

![image](https://user-images.githubusercontent.com/32592458/220825576-4a51716a-5868-4895-8955-9713f5a5b09b.png)
**You can inactivate a flow, which is not in use. This will prevent the flow from executing if a user enters keyword mapped to it.**

1 .  Go to the `Flows`  screen from the left panel.

2 . Click on `Edit` icon next to the flow.


<img width="1268" alt="Screenshot 2024-03-05 at 5 32 30‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/43851b75-bdc2-4c5f-b75f-19af84312871"/>


3 . Uncheck the `is active` check box.

4 . Click on `SAVE` button

![image](https://user-images.githubusercontent.com/32592458/220825733-d1b954c3-5410-493f-a720-02a508ea5d3e.png)
# Display Name, Picture & Guidelines for ChatBot

- [Add Display Picture](https://support.gupshup.io/hc/en-us/articles/360011977580-How-to-change-display-picture-)

- [Add Display Name](https://support.gupshup.io/hc/en-us/articles/360011977600-Why-is-a-Display-name-required-)

- [Display Name Guidelines](https://developers.facebook.com/docs/whatsapp/overview/display-name)

- [Showing Display Name to end-users](https://support.gupshup.io/hc/en-us/articles/360012076019-How-to-get-a-verified-tick-How-will-my-display-name-show-to-end-users-)

- [Get Verified Green Tick](https://support.gupshup.io/hc/en-us/articles/360012076019-How-to-get-a-verified-tick-How-will-my-display-name-show-to-end-users-)
1. Login to your Gupshup account



![image](https://user-images.githubusercontent.com/32592458/220826581-84febd93-1abc-47e9-9129-02162d13515a.png)



2. Click on the `settings` icon for your app

![image](https://user-images.githubusercontent.com/32592458/220826589-200c7dbf-e1ed-47f0-8051-f54b5dd316fd.png)



3. Click on Down arrow for `Onboarding machanisums`.

![image](https://user-images.githubusercontent.com/32592458/220826599-b9caa656-118e-4313-b5c8-5e14c15898b4.png)



4. Scoll down `Smart mechanisms to get active and opted in users` section to get the QR code

![image](https://user-images.githubusercontent.com/32592458/220826607-3ca26188-3e74-4bf4-a638-73462ca06dc6.png)
You can use variable `@contact.optin_status` to check. It will  return **True** if user is opted it otherwise return False.

![image](https://user-images.githubusercontent.com/32592458/220825610-b3e59398-3837-4a7a-906c-da0aa795cd6b.png)



Use it in `split by expression` to make decision, if user is opted in or not.

`<%= if @contact.optin_status ==  true, do: 1, else: 2%>`



![image](https://user-images.githubusercontent.com/32592458/220825618-23afc2c8-35ab-46fa-994d-b2a5ad56dac4.png)
Refer this article [Change access and permissions for a business account](https://www.facebook.com/business/help/299504287548592)By displaying the green tick badge, WhatsApp enables users to swiftly spot official brand accounts on the platform. This badge confirms the account's authenticity as it is WhatsApp-verified, assuring users that it genuinely represents the claimed company.

## Steps

1. **Comply with WhatsApp Guidelines**: Review WhatsApp's Business Policy and API Terms of Service to ensure that your account and business operations comply with their guidelines and policies.

2. **Provide Business Information**: Make sure that your business information is accurate and up-to-date in your WhatsApp Business API account. This includes your business name, address, phone number, and a brief description of your business.

3. **Verify Your Business**: WhatsApp may require additional verification to ensure the authenticity and legitimacy of your business. The verification process may involve submitting official documents or going through a review process.

4. **Contact WhatsApp Support**: Reach out to WhatsApp support or your WhatsApp Business Solution Provider (BSP) to inquire about the green tick verification process for your WhatsApp Business API account.

5. **Follow Instructions**: WhatsApp support or your BSP will provide you with specific instructions on how to proceed with the verification process. This may include providing documentation, going through a verification call or fulfilling other requirements.

6. **Wait for Verification**: Be patient during the verification process, as it may take some time for WhatsApp to review your account and complete the verification.

7. **Receive the Green Tick Verification**: If your WhatsApp Business API account meets the verification criteria and is approved, it will receive a green tick badge, indicating that it is a verified business account.

8. **Maintain Compliance**: After receiving the green tick verification, continue to adhere to WhatsApp's Business Policy and API Terms of Service to retain the verification status.

## Reference Article

- [How will my Display Name show to end-users?](https://support.gupshup.io/hc/en-us/articles/360012076019-How-to-get-a-verified-tick-How-will-my-display-name-show-to-end-users-)

- [How to apply for Whatsapp Green Tick Verification](https://www.wati.io/blog/whatsapp-green-tick-verification/)

1. Login to your Gupshup account from [https://www.gupshup.io/developer/home](https://www.gupshup.io/developer/home)
1. Go to the WhatsApp dashboard [https://www.gupshup.io/whatsappassistant/#/whatsapp-dashboard](https://www.gupshup.io/whatsappassistant/#/whatsapp-dashboard)
1. Click on settings icon of your App.

![image](https://user-images.githubusercontent.com/32592458/220825528-1f1974e7-173a-4dd7-a13d-8c7b073aa883.png)

1. Clink on the copy link under `Click URL` option to copy your opt-in link.

![image](https://user-images.githubusercontent.com/32592458/220825541-f01c8946-0caa-4e00-914d-5e47eed1667c.png)
If you have a query or you facing any issue while using Glific. Please don't wait and take help from Glific team.

Steps to follow to take support.

##  Glific Doucmentation
      1. From the left navigation click on help link.
      2. It will open a documentation link http://docs.glific.org/
      3. From right top corner click on the search box
      <img width="1465" alt="Screenshot 2023-05-19 at 5 47 38 PM" src="https://github.com/glific/docs/assets/16541548/7112d4a5-88f3-40a3-9123-396942d66af4" />
      
      4. Type the name of feature or functionality. 
      <img width="556" alt="Screenshot 2023-05-19 at 5 49 43 PM" src="https://github.com/glific/docs/assets/16541548/0583f03e-ea7b-4e9b-9fc2-459a21a75c7a">

      5. It will show the results. Scroll down and find the relevant article content and clcik on it.
      <img width="555" alt="Screenshot 2023-05-19 at 5 52 00 PM" src="https://github.com/glific/docs/assets/16541548/ff37b7bc-d147-4891-bd09-0d0b9814e436">
      
      6. It will open up the document with detailed steps and screen shot.
      <img width="1432" alt="Screenshot 2023-05-19 at 5 53 47 PM" src="https://github.com/glific/docs/assets/16541548/dcf8b16a-a4ca-467a-9536-ac451546e0c2">

The documents has all features and possible queries covered anf you will get your answers most of the time. 
But in case you didnt find the soluction of your queries, then you can connect to Glific Support team.

*#2. Glific provides 24 X 7 Chat support on Glific Discord channel*
Note: - Monday to Friady - Glific team is super active on Discord channel and reposne almost immediately you post your query.
on weekend - Satuday and Suday - You can expect a reposne within 2 to 8 hours.

## How to get a support on chat
1. Join the GLific Discord Channel.
2. Post your query

1. Join GLific Discord Channel.
      1. Click on the link - https://discord.com/invite/g6VNUBUCTq
      2. Enter your personal email (it should not be your org email) /phone number to create account.
      3. Once logged in. click on NGO Support channel https://discord.com/channels/717975833226248303/1037981805653008404
      <img width="326" alt="Screenshot 2023-05-19 at 6 41 48 PM" src="https://github.com/glific/docs/assets/16541548/8b6e6f2d-5beb-434b-b8f9-cc1e0e85fe84" />
      
      4. Click on New Porst button
      5. Enter the title of the request with your Orgname . For example - Not able to login - NGO Name
            <img width="1401" alt="Screenshot 2023-05-19 at 6 44 50 PM" src="https://github.com/glific/docs/assets/16541548/80ac5bb1-65d6-44de-bfd4-a3681022e58b" />

      7. Enter the description of the request or issue in "enter the message seciotn". Please share below details to get fast response.
            1) Your Glific application URL -
            2) Flow Name -
            3) Contact Nmae and Phone Number who faced issue -
            4) Date and time when issue received -
            5) Steps to replicate it
            6) Screen shot of the GLific application where issue/ error is thrown
<img width="1103" alt="Screenshot 2023-05-19 at 6 52 33 PM" src="https://github.com/glific/docs/assets/16541548/78de4e01-a86e-4e1a-8c0e-8e5159598cf1" />

## Speak to support team for any assistance
- Every Thursday we have Support hour call at 3:30 PM, where any one can join and get their queries resolved. We have this for once is a week for now. 
If we have more requriement, we can start doing it twice a week.
- Google meet Link: = https://meet.google.com/kyv-ymhs-kmu
- Time : 03:30PM (Every Thursday)
The read receipts data is important for tracking user engagement. It lets you categorize the status of different messages you've sent into `Sent`, `Delivered`, `Read (blue tick)`etc

## Steps to configure read receipts¬†in the Gupshup account.

![5f5b7e61-f4cb-417d-a761-7e48ddd7fec6](https://user-images.githubusercontent.com/132430123/268231483-ca9cc692-74d9-493d-a0fd-bc8abb643fa0.jpg)

1 . Log in to your Gupshp account.


![image](https://user-images.githubusercontent.com/32592458/220826509-62b892dd-a45f-4b7a-9473-0a9dacaef9fe.png)

2 . Click on the settings icon on your app.

![image](https://user-images.githubusercontent.com/32592458/220826516-97e6fbac-5fc0-483c-b6d6-65e91168e30e.png)

3. Scroll down to the `Message Events` section and active all the checkboxes.

![image](https://user-images.githubusercontent.com/32592458/220826523-1121ed20-a912-4a48-abc4-4e5a2d813ef2.png)

- Once you configure Gupshup, you will be able to see the status (delivered, read, sent etc) in the column name `bsp_status` of `Messages table` in BigQuery.

![2e1b384f-5fcc-4378-b377-1407a3b0d809](https://user-images.githubusercontent.com/132430123/268231468-1469fd93-2c9e-4f10-9ce7-21de4b2a3d01.jpg)

  
- You can add this table in your dashboards to create a Funnel Chart which will help you with more insights on the different drop-off areas/ leakages in your flow. This helps you understand your flow using data & helps you tweak it to enhance engagement. 
While creating a program you might have a requirement to capture multiple answers for a single question. This requirement doesn&#39;t work with interactive messages but you can still use regular text to accomplish this.



For multiple answers, it&#39;s always better to add a note and an input example that will help users to know how to answer in the correct way. For example,

![image](https://user-images.githubusercontent.com/32592458/220826281-76ac0b42-35c1-49d3-8783-e3f62f3bde6f.png)



And the Wait For Response can be something like this

![image](https://user-images.githubusercontent.com/32592458/220826296-6cd90fe4-4f03-4eb5-8c1f-3f498316f7e4.png)



Your message flow will look something like this

![image](https://user-images.githubusercontent.com/32592458/220826307-aba044ec-1550-40ac-8add-e63bdeca3698.png)





## For Conditional Flow



If you want to create a conditional flow with multiple answers, you can create your program like this.



![image](https://user-images.githubusercontent.com/32592458/220826317-aacff5e4-ff75-4918-afe5-4765ec98d66c.png)



You can set the Wait For Response like this,

![image](https://user-images.githubusercontent.com/32592458/220826324-c19102ba-7cb9-457a-8434-15645628b409.png)



Your message flow will look like this

![image](https://user-images.githubusercontent.com/32592458/220826333-c172be29-8509-4445-b2bb-3da05ec99de4.png)
1 . Login to Glific

2 . From left menu select `Manage` then select `Contacts`


<img width="1256" alt="Screenshot 2024-03-04 at 3 16 52‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/9ec4be3a-bd23-4112-ada7-37aebdf1ae99" />


3 . From **Contact management** page click on `Download sample file` link.



4 . Enter the details in the given sample data in excel and save it as .csv file. Enter the name of the collections in `collection` column  comma separated in which you want to move the contacts.

![image](https://user-images.githubusercontent.com/32592458/221194489-bfb20287-7c7b-4974-b49b-4fd566a14074.png)

For **Contact filed addition** please use the below .csv file format.

![image](https://user-images.githubusercontent.com/32592458/221194510-4d154d4e-7550-418c-bae5-22d71fb62aa1.png)

[contact_fields_csv.csv](https://slabstatic.com/prod/uploads/8k89m6if/posts/attachments/APignKgSOPLIqMEf1hrK0L62.csv)



5 .  Click on `select file` button and select the saved .csv file.

6 . Click on `Upload`button to process the file.

7 .  Verify the contacts are moved into a collection.
## Prerequisites:

- [WhatsApp Session Time](https://www.twilio.com/docs/whatsapp/key-concepts#the-24-hour-window-or-24-hour-session)
- [WhatsApp Templates](https://www.twilio.com/docs/whatsapp/key-concepts#whatsapp-templates-are-required-for-notifications)
- [User opt-in](https://developers.facebook.com/docs/whatsapp/overview/getting-opt-in/)

## Steps:

1. Apply for an OTP template in Glific if not already present. Get the ID of the template from the URL. Will be used later to send the message.


2. Check if the contact is present on Glific using the [ContactByPhone API](https://api.glific.com/#bfc8d05b-c5a4-45d2-9874-e9db9727678c).


3. If the contact is present and the bspStatus of the contact is not null then you can send an OTP template message using [createAndSendMessage API](https://api.glific.com/#c09fbc20-193d-4c36-a927-e2c30c4cc14a). Also you can check other fields like collections and fields of the contact using the API in point no 2.
If the contact is not present on Glific then you need to 
Create a contact using [createContact API](https://api.glific.com/#4573b3d2-5def-4475-bb94-368b9fa83bbf)
Optin the contact using [optin API](https://api.glific.com/#73271fe4-ce79-4975-9048-92d6036c2ba4) provided you have taken consent from the user in any form
Send the OTP template using the API mentioned in point 3
- Login to your Google account https://console.cloud.google.com/
- Click on Big Query Tab 
- Click on small trangle next to your project ID
- Click on small trangle next to the your BOT number
- Click on any of the table.
- In the right pane clikc on Query Tab in the Split tab
- Write the below query to get the results of a single flow
- **SELECT * FROM `your_dataset.messages` where flow_name = `flow_name` order by inserted_at DESC**
Select the **Ignore Keyword** check box from edit flow screen to make sure the flow should not be interrupted in between if user sends keyword of another flow.



![image](https://user-images.githubusercontent.com/32592458/220825679-ff321bc0-cf78-4c80-81a8-cbf9616300fb.png)
## Recharge Gupshup Walltet

Steps to recharge your Gupshup wallet account.

1 . Log in to your Gupshp account.

![image](https://user-images.githubusercontent.com/32592458/220826639-50b7360b-2855-487b-a9e9-385412681437.png)

2 .  After login from the `dashboard` dropdown lick on `My Wallet`



![image](https://user-images.githubusercontent.com/32592458/220826649-dd789396-884c-402e-8779-9152a44032b2.png)

3 . `My Wallet & Usage`  the page will open up. Click on `Add Balance`and pay it from your credit card.

![image](https://user-images.githubusercontent.com/32592458/220826664-b6dcb971-417c-4abf-a593-67a168f15006.png)



2 . Update your `billing address`.



![image](https://user-images.githubusercontent.com/32592458/220826677-75cb385e-3437-42dc-953a-199b4527f0df.png)

3 .  Pay with your credit card.

![image](https://user-images.githubusercontent.com/32592458/220826720-b4de5073-9ee5-4f7a-8017-6a21bacbf058.png)



## Check Coversation usage

1 . On `My Wallet & Usage` page, click on `View Usage` button.

![image](https://user-images.githubusercontent.com/32592458/221192072-ff3de188-8dbc-4478-9a8f-56542de66ab6.png)



2 .  Click on the `WhatsApp` tab.

![image](https://user-images.githubusercontent.com/32592458/221192087-2f1bbc9e-8143-45f8-a80a-85585cfbe4e6.png)



3 . Select the `month` from the dropdown you want to see the usage. Click on `Download Report`  the button to download.

![image](https://user-images.githubusercontent.com/32592458/221192104-04078137-d5c1-4060-9875-991a0313f699.png)



or scroll down to see the usage on the web page.

![image](https://user-images.githubusercontent.com/32592458/221192146-b28d10d5-bd16-4cbc-8d04-376841080da7.png)
You can update the profile picture of your BOT account of WhatsApp from Gupshup settings page. - **_Go to Home &gt;&gt;Dashboard &gt;&gt; Profile settings._**

_Refer_ [_GupShup article_](https://support.gupshup.io/hc/en-us/articles/360011977580-How-to-change-my-business-display-picture-) _for more details_
> ### **2 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Intermediate`**

**While communicating with contacts, data points can be collected and saved. Once done, customised reports can be created from the saved data.**

## Prerequisites

- [Data Studio Integration for Visualizations & Reports](https://glific.github.io/docs/docs/Product%20Features/Reporting%20&%20Dashboard/DataStudio%20Integration%20for%20Visualizations%20&%20Reports)

**Below is a step by step process to capture the data first.**

1. Gather the data points from flows.
1. Save the data with the ‚ÄúUpdate Contact‚Äù function.
1. Check the data field value in BigQuery.
1. Generate chart reports in DataStudio.



Detailed steps to generate the reports.

1. Use `Wait for response` function in flows to gather the data points. Example: capture name of the contact using _contact_name_ field.

![image](https://user-images.githubusercontent.com/32592458/219550290-32ac760a-39bf-4243-9ac2-c5cf1232ba13.png)

1. Save the data with the `Update Contact` node. Use this variable format for the data point   _@results.fieldname.input_ where the fieldname part can change as per your data point. For simplicity, make field name same as Result Name from the above image.

![image](https://user-images.githubusercontent.com/32592458/219550304-bcc8ae6d-8309-4aa6-8dbd-f11ddfa70be4.png)

![image](https://user-images.githubusercontent.com/32592458/219550316-c303b7d0-c3d4-4110-93fd-8d0e168ce097.png)



4. Access the field values using variables such as  _@contact.fields.fieldname_

![image](https://user-images.githubusercontent.com/32592458/219550335-7072aed0-2fb3-4c91-a944-66c653de7acb.png)

5. Access BigQuery from [https://console.cloud.google.com/](https://console.cloud.google.com/)



![image](https://user-images.githubusercontent.com/32592458/219550346-0059ca7d-d59a-4cd8-b3f4-b7a80d2b5b41.png)



6.  Select your `project` from the dropdown.

![image](https://user-images.githubusercontent.com/32592458/219550363-9e319041-f8b1-461d-9f73-080dfeb76df5.png)



7 . From the left menu, click  on **triangle** next to your project name . Then click on the **triangle** next to  your BOT number **** and click on the `Contacts` label.

![image](https://user-images.githubusercontent.com/32592458/219550376-ca64cea3-8e5c-4a14-8c71-e72f5d46f62d.png)



8 . Click on the `Preview`  sub-label to view the data in tabular format.

![image](https://user-images.githubusercontent.com/32592458/219550394-df8a3820-2308-427d-8631-12fa86641bd5.png)



9 . Verify the data in your Big Query

![image](https://user-images.githubusercontent.com/32592458/219550409-945fd4d7-0190-4644-b726-601f4ba8ffe0.png)

![image](https://user-images.githubusercontent.com/32592458/219550427-f2e6eac2-e8d7-4c26-814a-eeaaae63cf2f.png)

10 .  From the `Export` dropdown on the right, click on `Explore with Data Studio` option.

![image](https://user-images.githubusercontent.com/32592458/219550434-9c528e83-c7c5-4898-9133-d3e0c1a98fae.png)



11 . Google Studio ( [https://datastudio.google.com/](https://datastudio.google.com/) ) will open up in another tab.

![image](https://user-images.githubusercontent.com/32592458/219550449-66b0ccc9-cfd6-4446-8058-a0c7bd81ba46.png)

12 . Follow the steps in the below document to create reports.
> ### **3 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Intermediate`**

## Steps to integrate DataStudio for newly onboarded organization

1 . Copy the Glific Report template.

2 . Add data sources.

3 . Connect all tables one by one to get the data from BigQuery tables.

4 . Get data in Flat Fields (Refer : [Populate data in Field Views (User info) report.](https://glific.github.io/docs/docs/Product%20Features/Reporting%20&%20Dashboard/Populate%20Data%20in%20Field%20Views-%20User%20Info%20Report/)

5 . Your reports will be ready.

**Below are the detailed steps with screenshots to integrate Data studio.**

**_Note:_** _The screenshots may be different, as google may update the screens with their updates_

1 . Click on the link of the reports template (shared publicly with view access). Use the latest **version 4.0** for your reports.

- Template v2.3: [https://datastudio.google.com/s/hUkQeA0pjH4](https://datastudio.google.com/s/hUkQeA0pjH4)
- Template v3.0: [https://datastudio.google.com/reporting/676f97b8-9da0-41a6-a50a-6c05190eac2c](https://datastudio.google.com/reporting/676f97b8-9da0-41a6-a50a-6c05190eac2c)
- Template v4.0: [https://datastudio.google.com/u/0/reporting/fdc97942-72e5-4d7d-92c4-4a4c7da9be86/page/p_t8287rtztc](https://datastudio.google.com/u/0/reporting/fdc97942-72e5-4d7d-92c4-4a4c7da9be86/page/p_t8287rtztc)

1.

2 . Click on the `Make a copy` icon at the top right corner, from the 3 dots dropdown next to the Share button.

![image](https://user-images.githubusercontent.com/32592458/212663584-0780edee-bff6-4714-b088-a8f4a60e5b63.png)

3 . Click on `Copy Report`.

**_Note_**_: Use the original data source, for now, don‚Äôt change it for any data source, it will break a few charts which have calculated or renamed fields._

![image](https://user-images.githubusercontent.com/32592458/212663623-13a99b24-1848-4c2e-af9f-22986e1b2435.png)

4.  In the new tab of the created copy of the report, select `Manage added data sources`from the Resources Menu

![image](https://user-images.githubusercontent.com/32592458/212663662-6e5145a3-44ad-4228-b342-35c9336c8029.png)

5.  Click on `edit` one by one for each tables. Start with **contact** and **messages** tables

![image](https://user-images.githubusercontent.com/32592458/212663748-52bb6637-8dc2-4186-8847-1bdcdd87cb67.png)

6.  Select BigQuery data source

a. Select `MY PROJECTS`

b. Select the `Project` (_If the project is not listed you might need to enter the_ **_project ID_** _manually_)

c. Select the `Dataset`

d. Select the `Table`. Click on the `Reconnect` button.

![image](https://user-images.githubusercontent.com/32592458/212663799-cd8bb1bd-975c-4002-af79-f1840d55a7cd.png)

f . You might get a warning &quot;`Configuration has changed. Do you want to apply the changes?`‚Äù. That‚Äôs ok, click on `APPLY`

![image](https://user-images.githubusercontent.com/32592458/212663828-8000aace-580e-4c42-9248-d3a1c4baab5a.png)

g . Click on `DONE` in fields listing page

![image](https://user-images.githubusercontent.com/32592458/212663847-338d5a56-2374-46b6-860f-b7bac3f6a3b3.png)

**_Repeat steps 5 and 6 for the following tables. Contacts, Messages_**

To get the project ID click on the phone number on BigQuery.

![image](https://user-images.githubusercontent.com/32592458/212663868-0de922cd-7b17-47fc-ad1a-d4c00bc128b8.png)

6 . For Flat fields data source update the custom query with **project ID** (from

the Glific settings interface for big query) and phone number

![image](https://user-images.githubusercontent.com/32592458/212663893-3fd0358b-066f-4bcf-a3ea-34647d1aa725.png)

and click on `Reconnect`to update.

![image](https://user-images.githubusercontent.com/32592458/212663917-aa382287-5c61-4826-8fb8-df22c764480c.png)

7.  For Flow context data source update the custom query with **project ID** (from

the Glific settings interface for big query) and phone number. There will be four place where you need to update the **project ID**

![image](https://user-images.githubusercontent.com/32592458/212663940-cb623c04-38a4-47ce-9a9c-37803e252315.png)

8. Follow the same steps as above for `Monthly active users` the data source. Replace the **project ID** and **phone number** as per your setup.

9 . For Flow results. Go to your big Query account. Open a new Tab and run below query. Replace `tides-saas-309509.917302307943` with your **Project ID**

![image](https://user-images.githubusercontent.com/32592458/212663971-569e3848-7a8a-44ff-813a-f044962c3397.png)

```
CREATE OR REPLACE FUNCTION `tides-saas-309509.917302307943.jsonObjectKeys`(input STRING) RETURNS ARRAY<STRING> LANGUAGE js AS R"""
const inputJson=JSON.parse(input)
 return Object.keys(inputJson).map((key) => {
 return (JSON.stringify([key, inputJson[key].input]));
});
""";
```

10 . Click on `Run` button. After successful execution a new Routine will be created with name `JsonObjectKeys`

![image](https://user-images.githubusercontent.com/32592458/212664014-f6f114ce-6677-4b86-a360-bf801280985d.png)

11 . Go back to DataStudio and follow the same steps as we did for Flat fields (7 &amp; 8) above for `Flow Results` data source. Replace the **project ID** and **phone number** as per your setup.

12 . Click `CLOSE` on the top right, and your reports will be ready

![image](https://user-images.githubusercontent.com/32592458/212664047-85461e8b-65ca-4790-87cc-47724f9506fe.png)

13 . Your reports are ready for use.

![image](https://user-images.githubusercontent.com/32592458/212664089-c796e0c7-24d1-4599-a476-e3a11767bfd3.png)

14. Follow the steps in the below document to create reports.

[https://support.google.com/datastudio/answer/6292570?hl=en](https://support.google.com/datastudio/answer/6292570?hl=en)

## Connection to V5 Data Studio Report

**Before you start**, ensure that you have [set up and connected your BigQuery Account](https://glific.github.io/docs/docs/Product%20Features/Reporting%20&%20Dashboard/BigQuery%20Setup%20and%20link%20with%20Glific)

---

# **Overview**

A . Make a copy of [Glific report template v5.0](https://lookerstudio.google.com/u/0/reporting/21ead9bd-acc2-4327-af1c-d202bbffe28a/page/p_eq3uecja2c)

B . Connect 10 data sources to your BigQuery Account

1. Connect `contacts`, `messages`, and `message conversations` through 'My Projects'
2. Connect `flat fields`, `monthly active users`, `Contact collections`, `success messages` and `flow context` by replacing your Dataset ID into the preset 'Custom Query'.
3. Connect `flow Results` and `Contact Collection` by running a query for each in BigQuery before connecting the data sources.

3 . Your reports will be ready.

**Implementation Time**: 60 minutes

**Below are the detailed steps with screenshots to integrate Data studio.**

---

**_Note:_** _The screenshots may be different, as google may update the screens with their updates. [Message us on Discord](https://discord.com/channels/717975833226248303/717975833679233077) to let us know._

---

# Detailed Steps:

## Make a copy of Glific report template v5.0

1 . Click on the link of the reports template (shared publicly with view access). Use the latest **version 5.0** for your reports.

- Template v5.0: [https://lookerstudio.google.com/u/0/reporting/6f6d2bd7-7bd0-45d0-afad-1e9620f266d8/page/p_eq3uecja2c](https://lookerstudio.google.com/reporting/e790512e-01d4-4f55-a514-dc5dbf4b6c51)

2 . Hover your cursor near the top of the report, then click on the 3 dots in the top right corner, then click on the `Make a copy` icon. Refer to the image below:

<img width="1468" alt="Image1" src="https://user-images.githubusercontent.com/119285990/217206154-8d95e47e-aad5-42df-ae7a-36718a2ca7fc.png" />

---

**_Note:_** _If you have never used Data Studio before then you will be prompted to provide some basic information and agree to their terms and conditins. Do so and then repeat step 2._

---

3 . Click on `Copy Report`. Refer to the image below:

<img width="704" alt="Image2" src="https://user-images.githubusercontent.com/119285990/217206648-fc1d55bc-f874-4152-a35d-be0ecd7930e3.png" />

---

**_Note:_** _Do not click on any of the drop downs for **New Data Source**. Directly click on_ 'Copy Report'

---

## Connect data sources to your BigQuery Account

---

4 . A new tab will open with the copy of the report and some visuals not functioning, select `Manage added data sources`from the Resources Menu. Refer to the image below:

<img width="1466" alt="Image3" src="https://user-images.githubusercontent.com/119285990/217206723-83e76394-9dfd-46d7-95b0-804b29822475.png" />

---

### Connect `contacts`, `messages`, and `message conversations` through 'My Projects'

---

5 . Click on `edit` one by one for each data source. Start with **contacts**

![image](https://user-images.githubusercontent.com/32592458/212663748-52bb6637-8dc2-4186-8847-1bdcdd87cb67.png)

6 . Connect to the BigQuery data source:

a. Select `MY PROJECTS` from the menu on the far left.

b. Select the `Project` (_If the project is not listed you might need to enter the_ **_Dataset ID_** _manually_. _Refer to the note after step 8_)

c. Select the `Dataset`, this is your WA bot number

d. Select the `Table` with the matching name. Click on the blue `Reconnect` button at the top right corner.

![image](https://user-images.githubusercontent.com/32592458/212663799-cd8bb1bd-975c-4002-af79-f1840d55a7cd.png)

e . You might get a warning &quot;`Configuration has changed. Do you want to apply the changes?`‚Äù. That‚Äôs okay, click on `APPLY`

![image](https://user-images.githubusercontent.com/32592458/212663828-8000aace-580e-4c42-9248-d3a1c4baab5a.png)

f . The fields listing page will open up. Verify that the fields are set to the correct type. Most will be correct by default.

**What to check for:**

1. All fields with 'id' in their name should be of the type 'text'
2. 'phone' should be of the type 'text'
3. 'language' should be of the type 'text'
4. All fields with 'at'/'time' in their name should be of the type 'Date and Time'
5. Latitude/Longitude should be of the type latitude, longitude.

g. Click on `DONE` in fields listing page

![image](https://user-images.githubusercontent.com/32592458/212663847-338d5a56-2374-46b6-860f-b7bac3f6a3b3.png)

7 . **_Repeat steps 5 and 6 for the following data sources; Messages, Message Conversations_**

---

**_Note: To get the Dataset ID click on the phone number on BigQuery._**

![image](https://user-images.githubusercontent.com/32592458/212663868-0de922cd-7b17-47fc-ad1a-d4c00bc128b8.png)

---

### Connect `flat fields`, `monthly active users`, `Contact collections`, `success messages` and `flow context` by replacing your Dataset ID into the preset 'Custom Query'.

---

8 . For the Flat Fields data source, select Edit and then update the custom query with **Dataset ID** (from the Glific settings interface for big query as shown in the note above). Replace `tides-saas-309509.917302307943` with your **Dataset ID** (Refer to the image below)

**Note:** Ensure that you only replace the **Dataset ID**, that is, ".contacts" should not be deleted. This applies for all steps where you replace the **Dataset ID**, ensure you do not select and paste over the remaining text.

---

![image](https://user-images.githubusercontent.com/32592458/212663893-3fd0358b-066f-4bcf-a3ea-34647d1aa725.png)

9 . Click on `Reconnect` to update.

![image](https://user-images.githubusercontent.com/32592458/212663917-aa382287-5c61-4826-8fb8-df22c764480c.png)

10 . Verify the field types. (Refer Step 6.f.) And then click `Done`

11 . Follow steps 8 to 10 as above for; `Monthly active users`, `Contact Collections` and `Success Messages`, Replace the **Dataset ID** as per your setup.

12 . For Flow context data source update the custom query with **Dataset ID** (from the Glific settings interface for big query). There will be four places where you need to update the **Dataset ID**

![image](https://user-images.githubusercontent.com/32592458/212663940-cb623c04-38a4-47ce-9a9c-37803e252315.png)

---

### Connect `flow Results` and `Contact Collection` by running a query in BigQuery before connecting the data sources.

---

13 . For Flow results. First go to your BigQuery account. Open a new tab and run below query. Replace `tides-saas-309509.917302307943` with your **Dataset ID**

![image](https://user-images.githubusercontent.com/32592458/212663971-569e3848-7a8a-44ff-813a-f044962c3397.png)

```
CREATE OR REPLACE FUNCTION `tides-saas-309509.917302307943.jsonObjectKeys`(input STRING) RETURNS ARRAY<STRING> LANGUAGE js AS R"""
const inputJson=JSON.parse(input)
 return Object.keys(inputJson).map((key) => {
 return (JSON.stringify([key, inputJson[key].input]));
});
""";
```

14 . Click on the `Run` button. After successful execution a new Routine will be created with name `JsonObjectKeys` (refer image below)

![image](https://user-images.githubusercontent.com/32592458/212664014-f6f114ce-6677-4b86-a360-bf801280985d.png)

15 . Go back to DataStudio and follow the same steps as we did for Flat fields (9 to 11) above for `Flow Results` data source. (Replace the **Dataset ID** as per your setup in 2 lines.)

16 . For Contact Collection. Again go to your BigQuery account. Open a new tab and run below query. Replace `tides-saas-309509.917302307943` with your **Dataset ID**

![image](https://user-images.githubusercontent.com/32592458/212663971-569e3848-7a8a-44ff-813a-f044962c3397.png)

```
BEGIN
CREATE OR REPLACE VIEW
  `tides-saas-309509.917302307943.contact_collection` AS (
  SELECT
    name,
    phone,
    group_name
  FROM
    `tides-saas-309509.917302307943.contacts`,
    UNNEST(SPLIT(group_labels, ',')) group_name);
END
```

17 . Click on the `Run` button. After successful execution a new Routine will be created with name `contact_collection` (refer image below)

<img width="1470" alt="Image 4" src="https://user-images.githubusercontent.com/119285990/217206706-0a8d37e6-ef58-46d5-b4e1-0a4ba458bcff.png" />

18 . Go back to DataStudio and follow the same steps as we did for `contacts` (6 and 7) above to connect the `Contact Collection` data source.

19 . Click `CLOSE` on the top right, and your reports will be ready

<img width="1468" alt="Image 5" src="https://user-images.githubusercontent.com/119285990/217206715-0c5bec40-8b91-437d-9155-5a001eb6c536.png" />

20 . Your reports are ready for use.

---

**_Note: To create your own custom reports follow the steps in the below document ._**

[https://support.google.com/datastudio/answer/6292570?hl=en](https://support.google.com/datastudio/answer/6292570?hl=en)

---
> ### **2 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Intermediate`**

**Flat fields table contain contact specific data based on the data points an Organisation has defined in their system. Organisation needs to have enough contact fields information available to visualise this report.**

## Prerequisites
- [Data Studio Integration for Visualizations & Reports](https://glific.github.io/docs/docs/Product%20Features/Reporting%20&%20Dashboard/DataStudio%20Integration%20for%20Visualizations%20&%20Reports)

## How to verify if you have enough contact fields information available.

1 .  Go to Big query and execute the below queries to check if there is enough data  in contacts and messages tables.



**_Note - beginner-290513.917777711114  needs to be changed with your product ID_**

_SELECT * ¬†FROM `beginner-290513.917777711114.contacts`LIMIT 1000_

_SELECT * FROM `beginner-290513.917777711114.messages` LIMIT 1000_

![image](https://user-images.githubusercontent.com/32592458/220825085-4c44f5f9-88db-4479-80a2-65befe0147b6.png)



2 . Get the data in your reports for Contacts and Messages tables. Follow the steps from 1 to 6 in [Integrate DataStudio to create visualisations &amp; reports](https://glific.github.io/docs/docs/Product%20Features/Reporting%20&%20Dashboard/DataStudio%20Integration%20for%20Visualizations%20&%20Reports) to get the data for Contacts and Messages tables.

## Steps to configure your Field Views (User info) report.

1 .  Select `Field View (User Info)` report from the dropdown.

![image](https://user-images.githubusercontent.com/32592458/220825095-c14da736-1d22-40f9-b2ae-1b7038c9473b.png)



2 . You may see error in the report chart section.

![image](https://user-images.githubusercontent.com/32592458/220825108-f75ad726-a6e4-4824-9c86-a8fc93d5148b.png)



3 . Click on `Resources >> Manage added data source`

![image](https://user-images.githubusercontent.com/32592458/220825112-f7f25cac-4353-45e0-ab97-3739406716e3.png)



4 . Click on `Edit` on `Flat fields` section.

![image](https://user-images.githubusercontent.com/32592458/220825122-fad954da-46be-4064-84c1-e77562a9e0d3.png)

5 . Click on `Edit connections`

![image](https://user-images.githubusercontent.com/32592458/220825140-74c31bb5-1a50-4cbc-a5df-a9393d2fdf83.png)

6 .  Click on `My Projects`. Click your `project` . Click on your `data set`. Then click on `flat_fields` table.

![image](https://user-images.githubusercontent.com/32592458/220825160-6d2f5b40-3d4a-4dbb-9f1b-3a6edaf3966b.png)

7 .  It will open up Big Query. select `flat_field` table from the list of tables.



![image](https://user-images.githubusercontent.com/32592458/220825176-7a0a91e6-c2a0-4710-b92d-362725a46574.png)

8 . Click on `Invoke store procedure`

![image](https://user-images.githubusercontent.com/32592458/220825190-171460cb-08db-43ac-8711-596bf6606cfb.png)

9 .  Click on `Run` button

![image](https://user-images.githubusercontent.com/32592458/220825207-3de3e868-9332-4fec-8688-7b19e433df31.png)

10 . Click on Reconnect

![image](https://user-images.githubusercontent.com/32592458/220825215-f6958cf2-5f1f-4cfa-84b5-7ef9c9512e1e.png)

11 . Click on Done

![image](https://user-images.githubusercontent.com/32592458/220825223-2a731a27-5abc-49f5-83e3-28f5f5a8f2ef.png)

12 .  Now data will be updated in Flat_fields.



## Plot the data in the charts

1 .  Click on the chat where you want to plot the data from Flat fields.

2 .  Click on `Data` link in right pane.

3 .  Notice under `Dimension` section it says Invalid dimension

![image](https://user-images.githubusercontent.com/32592458/220825237-68f3f18a-bd5e-4be2-b58d-808ad60323ec.png)

4 . Drag the data field from the Available fields section to the dimension section.

![image](https://user-images.githubusercontent.com/32592458/220825248-7f71cd60-86a9-4948-8b74-a3b09b50b80e.png)



5 .  And you will be able to see the data in the charts.

![image](https://user-images.githubusercontent.com/32592458/220825257-dc41434e-1131-4d41-a011-d75d654e8f90.png)
> ### **10 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;`Beginner`**

___
## Prerequisites

- [GCS Setup](https://glific.github.io/docs/docs/Onboarding/GCS%20Setup/Google%20Cloud%20Storage%20Setup)
- [BigQuery Setup](https://glific.github.io/docs/docs/Product%20Features/Reporting%20&%20Dashboard/BigQuery%20Setup%20and%20link%20with%20Glific)
- [Sample Dashboard](https://lookerstudio.google.com/u/0/reporting/6f6d2bd7-7bd0-45d0-afad-1e9620f266d8/page/CoQkB)
___
## Video Tutorial

<iframe width="800" height="500" src="https://www.youtube.com/embed/s7VnUBoFnG0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

___

# Why should you connect to the V5 Template Dashboard?
Deploying your chatbot program can generate tremendous value at scale for your users, **the template dashboard enables the crucial other half of your chatbot program.** 
- It enables your organisation to **monitor and evaluate the health of your chatbot program**, so that you may iterate and improve the experience for your users. 
- The dashboard **also serves as a repository of user information that your field/remote operations teams can easily download** to engage more deeply with your stakeholders.


The template dashboard aims to make as much common chatbot program information accessible to your organisation as possible. You may use what is relevant to your program. Beyond this, you might want to tweak this dashboard to further suit your needs, refer to [google support](https://support.google.com/looker-studio/?hl=en#topic=6291037) to learn how to do this.
___

# Understanding the pages in the Dashboard
## 1. Overview
This page has been created to give your organisation a sense of the overall health of your chatbot progream. It is divided into 3 broad sections, described below.
The page has one date range filter at the top left which is set to the last 30 days by default.

### Stakeholder Engagement Overview

<img width="1470" alt="Image 1" src="https://user-images.githubusercontent.com/119285990/221197664-d1562527-f65f-4c75-bf4e-2412c8868abb.png"/>

This section of the overview page tells you about the number of people/phone numbers that have engaged (sent or recieved messages) with your chatbot.
- **Contacts reached since launch:** The total number of phone numbers that have ever engaged with your chatbot till today. This number will not change when you alter the date range filter.
- **Active Contacts (recieving messages):** The total number of phone numbers that have recieved a message in the selected time period. 
It is important to note that all contacts who have recieved a message might not have sent a message back to you, but all those who have sent a message to your bot would definitely have recieved a message back.
- **Contacts sending messages:** The total number of phone numbers that have sent a message to your chatbot in the selected time period. This is a subset of your Active Contacts value.
- **Sending/Active:** The percentage of phone numbers who are sending messaged to your chatbot as compared to the total number of phone numbers that have received messages. Based on the nature of your program you could decide what percentage indicates good engagement. 
- **Active contacts and messages exchanged graph:** This is a very useful graph that helps you analyse the trends of contacts engaged and messages sent over time. 

    **Note:** _If you hover your cursor over the top right corner of this graph and click on the down arrow, you can learn about engagement trends over months, days of the week and hours of the day. Give it a try!_
___
### Messages and Conversations Overview

<img width="1469" alt="Image 2" src="https://user-images.githubusercontent.com/119285990/221197690-1a7de6cb-8f4b-4cec-878c-192e53ae835e.png"/>

This section of the overview page tells you about the number and types of messages and conversations you have exchanged. Messages and conversations impact costs and can be seen in further detail the _conversation costs_ page of your report.
- **Messages exchanged:** The total number of messages that have been sent by the bot (outgoing) or recieved by the bot (incoming) in the selected time period.
- **Outgoing and Incoming messages pie chart:** The distribution of total messages exchanged.
- **Outgoing and Incoming messages graph:** The daywise trend of messages exchanged over time.
- **Conversations started:** The total number of unique conversations started during the selected time period. A single conversation is defined a 24 hour window from the first message sent by your bot.
- **Conversation type pie chart:** The distribution of conversation types. Different conversation types are charged differently. Refer [here](https://support.gupshup.io/hc/es-co/articles/4414423534617).
- **Conversations Graph:** The daywise trend of total number of conversations over time for the selected time period.
___
### Contact Opt in/Opt out Overview

<img width="1117" alt="Image 3" src="https://user-images.githubusercontent.com/119285990/221197702-aa97ac9f-4bb5-47e4-993a-6e1ce1500e4d.png"/>

This section is especially useful during the onboarding phase/s of your program. An important first step in using the chatbot is getting your users consent or to 'opt in' to receive messages from you. This is required by WA/Facebook to ensure that people do not recieve spam messages.
- **Opt in since launch:** The total contacts who have opted in since your chatbot started
- **New optins:** The users who have opted in during the selected time period.
- **Optin Graph:** The day wise trend of optins for the selected time period.
- **Active opt in contacts:** The total optin contacts recieveing or sending messages in the selected time period.

Similarly for the the 3 corresponding opt out visuals.
___
## 2. Flow Activity
This page has been created to help you monitor your flows. It is divided into 4 broad sections, described below. This page has a date range filter and a flow name filter which allows you to see data for a specific flow during a specific time period.
___
### Flow Activity Overview


<img width="1467" alt="Image 4" src="https://user-images.githubusercontent.com/119285990/221197708-113ff798-6a2e-4b3c-bb06-33374e0e0ccd.png"/>

This section tells you how many people are going through the flows and how often. 
- **Contacts starting flows:** The number of contacts starting selected flows in the selected time period.
- **Total flows traversed:** The total number of times the selected flows have been entered in the selected time period.
- **Unique flows traversed:** A count of the unique flows entered in the selected time period.
- **Contacts and total flows traversed graph:** The Daywise trend of contact and flow activity over time.
___
### Flows Completed


<img width="1470" alt="Image 5" src="https://user-images.githubusercontent.com/119285990/221197716-4ab49144-e85b-40ba-bfea-eb6d5fb2dede.png"/>

This section will help you understand how often and how your flows are being completed.
- **Total flows completed:** A count of the unique flows selected.
- **Flow completions table:** A list of the selected completed flows and the number of times it has been completed.
- **Flow completed node table:** A list of the completed flows, the node at which the flow was completed, and the number of times that node was reached.
- **Flow completion graph:** The daywise trend of flows completed during the selected time period.
___
### Incomplete and Killed Flows

<img width="1469" alt="Image 6" src="https://user-images.githubusercontent.com/119285990/221197724-09c884ce-30ab-4ac6-a06e-ffa6f78306a3.png"/>

This section helps you investgate which flows have been killed, at which node, and for which contact. Flows can be killed if contacts do not respond for 7 days, if a webhook fails, if they fall into an infinite loop, or if you manually terminate the flow.
Using this you can identify where and how to improve your flows.
- **Total incomplete and killed flows:** The number in the box indicated the count of unique flows that have been killed for some contacts.
- **Flow name table:** The list of killed flows out of the flows that you have selected and the number of contacts for whom the flow is killed.
- **Node and result table:** The list of killed flows, the node, associated result name and number of contacts for whom the flow was killed.
- **Contact list table:** The list of phone numbers and the point at which the flow was killed. Using this you can investigate your flow and their chat on Glific to understand the problem further.

___
### Contacts in the Middle of Flows

<img width="1469" alt="Image 6" src="https://user-images.githubusercontent.com/119285990/221197724-09c884ce-30ab-4ac6-a06e-ffa6f78306a3.png"/>

This section is structured the same was as the previous one. It will tell you about flows which contacts have not completed, which node they are at, and who the contacts are.
___
## 3. Contact Activity by Flow

This page has been created to give you information about your contacts. It is divided into 3 broad sections, described below. This page has a date range filter, a flow name filter, and a flow label filter which allows you to see data for a specific flow/flow label during a specific time period. [Using labels](https://www.youtube.com/embed/Y2KWDO7SfnI?showinfo=0) to track engagement is an important part of flow design.

This is an important page to gather user information and data points for activity in specific flows.

### Total Contacts and Messages by Flow name/Flow Label

<img width="1469" alt="Image 8" src="https://user-images.githubusercontent.com/119285990/221197732-5e0c91c9-c88a-48e6-840e-4c6cf4e5e0e3.png"/>

This section is the same as the the **stakeholder engagement overview section** in the **overview page**, with the key difference being that you can filter and check engagement for specific flows.
___
### Contact Details by Flow Label 

<img width="1470" alt="Image 9" src="https://user-images.githubusercontent.com/119285990/221197737-a440e78c-c693-465f-bc88-641d210479f0.png"/>

This section allows you to see the contact activity for each of the listed flow labels for a specific flow or of flow labels selected, depending on how you use the filters.
- **Flow label & contacts table:** Displays all the associated flow labels as per your filter and the count of contacts tagged with that label.
- **Flow label and messages table:** Displays the flow label, contact, and associated message as per your selected filters. 

___
### Contact Activity 

<img width="1470" alt="Image 10" src="https://user-images.githubusercontent.com/119285990/221197743-aaa0d574-ccb7-4d82-8374-566ee26b2e3b.png"/>

This section comprises of 1 table which will give you a list of every contact for selected flows or flow labels and show you how many messages the contact has sent during the selected time period. It is arranged for you to see your most active contact at the top.
___
## 4. Result Details
This page gives you all the information stored in your [flow variables](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Variables/Flow%20variables%20vs%20Contact%20variables) which we create and store with '@results'.
The page has two sections with one table in each.You can filter this page by date, flow name, and result name.

<img width="1470" alt="Image 11" src="https://user-images.githubusercontent.com/119285990/221197750-75f0d670-e0a0-4e89-bd59-06ce3a7cbef4.png"/>

- **Total users by result name:** Describes the number of times a value has been stored in a result/flow variable for a specific flow.
- **User names and responses by result name:** Gives you the list of contacts, when they passed through the node and what value was saved in the result/flow variable.
___
## 5. Contact Details
This page is where you will find all the contact details that you have [stored in contact fields](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Update%20the%20contact/#define-custom-variables).
This page has 5 visuals, described below. This page allows you to filter by contact name, phone number, contact field, and date.

<img width="1468" alt="Image 12" src="https://user-images.githubusercontent.com/119285990/221197756-0989c23e-9bbb-45b7-bcf9-2cace64bd57d.png"/>

- **Active Contacts(recieving messages)**: A count of all the contacts stored who have recieved messages in the selected time period.
- **Total users by language preference:** Shows you the distribution of contacts for those contacts who have their language preference updated on your system.
- **Contact List:** This table shows you all you contacts, the contact field values that have been created for them and the associated values stored in these contact fields.
- **Opt out Contacts** This table shows you the list of all the contacts who have opted out from using your chatbot(i.e. you can no longer send them messages) and their related details.

<img width="1470" alt="Image 13" src="https://user-images.githubusercontent.com/119285990/221197761-292c4586-b008-4ab9-af1e-6baee381ea34.png"/>

___

## 6. Conversation Costs


You will recieve a monthly invoice from Gupshup based on the messages you exchange and the conversations started. This page provides you with a snapshot of your chatbots activity and associated charges for the selected time period. It is an expansion of the second section of the overview page.

<img width="1469" alt="Image 14" src="https://user-images.githubusercontent.com/119285990/221197765-9abd0834-e21c-462f-9533-7b412716adca.png"/>

To learn more about charges for the types of conversations and messages mentioned in this sheet refer [here](https://support.gupshup.io/hc/es-co/articles/4414423534617). 

___

## 7. Collection Messages
This page allows you to search for your contacts by the collections that they are part of and then check how many and which messages they have exchanged.
You can filter this page by date, phone number, and collection name. This page has 2 visuals, described below.

<img width="1470" alt="Image 15" src="https://user-images.githubusercontent.com/119285990/221197768-0b4a4f8f-ccc5-461d-aa41-62dfea6babdc.png"/>

- **Total Messages exchanged per collection:** A list all the contacts, the collections they belong to and the total messages they have exchanged.
- **Messages exchanged:** A list of all the messages exchanged by each contact in the selected collections.

<img width="1470" alt="Image 16" src="https://user-images.githubusercontent.com/119285990/221197772-280f2575-2b70-4238-bae1-b617727d4cc6.png"/>

___

## 8. Collection Contacts
This page allows you to search for your contacts by the collections that they are part of, check how many there are and extract their details.
You can filter this page by date, phone number, and collection name. This page has 3 visuals, described below.

<img width="1470" alt="Image 17" src="https://user-images.githubusercontent.com/119285990/221197775-cc03cc10-4f82-4ed3-bb71-5376bea6be7b.png"/>

- **Number of contacts:** The total number of active contacts for the selected time period in your selected collections.
- **Contacts by collection table:** This table gives you a count of the active contacts for the given time period, per collection selected.
- **Contacts details by collection:** This table will give you all the contact details by contact field as per the selected filters.

<img width="1470" alt="Image 18" src="https://user-images.githubusercontent.com/119285990/221197778-58bb04df-c4b2-41e8-a5a7-acf30ff0eb70.png"/>

___
## 9. User Retention
This page provides you with a view of monthly user retention. it has a date filter set to always show you the past one years data. It contains a single visual which can be understood as follows:

Refer to the row for Nov 2022. In this month, 22 contacts engaged with our bot for the first time (the column labelled '0'). In the following month, 14 of these contacts returned to use the bot (column labelled as '1'), in the following month only one of these users returned. And in the month after that, 3 users from the cohort who first engaged with us in Nov 22 had returned to use the bot.

<img width="1470" alt="image 19" src="https://user-images.githubusercontent.com/119285990/221197785-538977ce-0403-4cef-8627-8fe1d2974611.png"/>

___

## Additional

### Checking which dataset is being used

___

Understanding which dataset and fields are being used will help you understand your dashboard better.
1. Hover your cursor over the top of the dashboard and click edit at the top right. You will enter the editing mode.
2. Click on any visual and refer to the first column on your right. You can see which data source is being used under the heading 'data source'.

<img width="1470" alt="Image 20" src="https://user-images.githubusercontent.com/119285990/221197788-028246fd-27d4-4489-8a4b-dd7a7326c7a0.png"/>

Note: If you have not connected to our V5 template dashbord then first make a copy (option next to edit) and then follow the above steps. 

The visuals will not populate until you connect them to your chatbot data sources, but you should still be able to see which dataset its intended to pick up from.

<img width="1470" alt="Image 21" src="https://user-images.githubusercontent.com/119285990/221197789-601c0bcd-5e24-4f82-b4b9-3c47620ff690.png"/>

___

### Downloading data

1. In view mode, hover your cursor over any visual and click the 3 dots at the top right of the vidual.

<img width="1097" alt="Image 22" src="https://user-images.githubusercontent.com/119285990/221197792-420fcacf-de89-4abc-87de-3c26af05ddcf.png"/>

2. Select export and then pick whichever format you want the data in. 

<img width="1101" alt="Image 23" src="https://user-images.githubusercontent.com/119285990/221197795-16989648-1f41-48b9-9940-a88ab4ccbda9.png"/>

___
> ### **3 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Intermediate`**


**Many NGOs are concerned about the cost of setting up BigQuery. They are worried about running up a bill. In reality BigQuery provides a very generous [free tier](https://cloud.google.com/bigquery/pricing#free-tier) that you will find will suffice for several months. You need not worry till your storage exceeds 10GB and queries 1TB / month!**
___
Google also sends notifications before billing you and provides you mechanisms like quotas to help control price. Learn more about these here :

- [Billing Reports & Cost Trends](https://cloud.google.com/billing/docs/how-to/reports)

- [Cost Estimates](https://cloud.google.com/bigquery/docs/estimate-costs)

- [Custom Quotas](https://cloud.google.com/bigquery/docs/custom-quotas)

Now that we have that out of the way, let&#39;s help you set up your account!

## Creating your BigQuery Account

The following steps needs to follow for creating your BigQuery account.

1 . Go to [Google Cloud Console](https://console.cloud.google.com/) and sign in with your GSuite account.

![image](https://user-images.githubusercontent.com/119290547/212645739-c8066127-1244-423e-b7d7-83c22ea42035.png)

<br />

2 . After signing in you will be redirected to Google Cloud console. Use the given link if not redirected: [https://console.cloud.google.com/getting-started](https://console.cloud.google.com/getting-started)

3 . Click on `TRY FOR FREE` and fill in Billing Details.

<img width="1432" alt="1 TryForFree" src="https://user-images.githubusercontent.com/16541548/220536608-01e57005-1d5f-4616-b85c-4247ae0a9505.png" />

<br />

4 . Select `Country` and check to agree to Terms and Conditions.

<img width="1233" alt="2 Country" src="https://user-images.githubusercontent.com/16541548/220536715-d873a074-04b0-4adf-9523-6f4c38670f56.png" />



5 .  Fill in the rest of the details to verify.


<img width="1291" alt="3 Card1" src="https://user-images.githubusercontent.com/16541548/220541707-229ad308-ef37-490b-9be4-9e7ccf06c423.png" />

<br />

6 . On the same page, fill in Primary contact details and payment method details and click on the `Start my free trial`
<img width="963" alt="4 Card2" src="https://user-images.githubusercontent.com/16541548/220541753-966d086b-d5a2-43bb-ad60-f58cb256dc6d.png" />

<br />


7 .  If it does not redirect, you can go to the [Google Cloud Console Dashboard](https://console.cloud.google.com/home) directly

8 .  Click `My First Project` in the dropdown in the Top Bar to create a new project.

<img width="684" alt="5 My First Project" src="https://user-images.githubusercontent.com/16541548/220541806-d82eff5e-c65c-435c-a775-bdc0b97c1d67.png" />

<br />

9 . Click on `New Project` at top right corner.

<img width="935" alt="6 New Project" src="https://user-images.githubusercontent.com/16541548/220541839-1aed54b2-2224-4f3d-973c-cf46d1d650ce.png" />

<br />

10 . Fill in your project details and click on the `CREATE` button.

<img width="1186" alt="7  Create" src="https://user-images.githubusercontent.com/16541548/220541934-aba0919c-0aec-4842-a051-981428d69ee6.png" />

<br />

11 . Select `BigQuery` from the side panel of Google Cloud Console Dashboard or use link to reach Bigquery Dashboard, 
<img width="517" alt="8 BigQuery" src="https://user-images.githubusercontent.com/16541548/220542017-94fd523d-d1e7-44dc-b1af-424be3dbc9b8.png" />

<br />

12. Select the project.
<img width="718" alt="9 Select a project" src="https://user-images.githubusercontent.com/16541548/220542114-414942c6-603f-4c43-a050-d32358ac79d7.png" />

<br />

13 . Now Go to [https://console.cloud.google.com/apis/credentials/serviceaccountkey](https://console.cloud.google.com/apis/credentials/serviceaccountkey) to generate project **API keys**

14 . From the drop select your project. Next, select a `new service account` and choose Role as `Project -> Owner`. And Click on the `Create Serive Account` button below.

<img width="711" alt="10 Create a Serive account" src="https://user-images.githubusercontent.com/16541548/220543796-65dd05de-67a1-42a5-8447-31dba5a91cff.png" />

<br />

15. Enter serivce account details and click on 'Done'
<img width="621" alt="11 Serive Account details and done" src="https://user-images.githubusercontent.com/16541548/220542392-063c9b3b-235b-45a8-ae46-1dc18b951232.png" />

<br />

16. Add **Grant this service account access to project** is not optional. Along with it, owner access to the email should be added as well while creating a service account.

  <img width="601" alt="image1" src="https://github.com/glific/docs/assets/132430123/9937c70c-ef0e-4867-93ee-efead6c1c0d9" />

<br />

  <img width="492" alt="image2" src="https://github.com/glific/docs/assets/132430123/f14cf384-d78f-4c3f-bc2b-df4ed7865136" />

<br />

  <img width="537" alt="image3" src="https://github.com/glific/docs/assets/132430123/9bf641bd-95db-4416-85e2-c352597532f5" />

<br />


17. Create serive Key. CLick on Manage Keys from 3 dot dropdown.
<img width="1160" alt="12 Serive Key" src="https://user-images.githubusercontent.com/16541548/220542787-e1d51b74-fa05-4d5a-9bf9-2ba3a73bc389.png" />

<br />

18. Click on 'Add Key'

<img width="632" alt="13  Create new Key" src="https://user-images.githubusercontent.com/16541548/220542904-62d13924-085b-4f68-a2b7-30f18b4675bb.png" />

<br />

19. Save the JSON file downloaded and copy its content.
<img width="690" alt="14 Json Create and download" src="https://user-images.githubusercontent.com/16541548/220542943-b577e48a-ab41-4a5e-8090-4e20d60150f1.png" />

<br />

20 . To integrate BigQuery in Glific. Click on the `NGO main account` button(bottom left corner) and find `Settings` and select `BigQuery` from the list.

<img width="405" alt="Screenshot 2024-03-04 at 2 32 00‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/9f92f2c0-207b-46a8-85b7-6434aa1ec4fa" />

<br />

22 . Paste the copied JSON content inside `Goth Credentials` input

23 . Click on is `active` checkmark and click on the `SAVE` button. Then send a message to the bot. BigQuery sync starts when a message is sent from or to the bot after adding credentials.

<img width="691" alt="Screenshot 2024-03-04 at 2 33 04‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/044aee6d-3161-454b-9951-e0619f4e1b96"/>

<br />

24 . Go to BigQuery console or use link [https://console.cloud.google.com/bigquery](https://console.cloud.google.com/bigquery)

<br />

25 . You can see a new Dataset with two tables is automatically created. **Contacts** and **messages** will be populating automatically.

![image](https://user-images.githubusercontent.com/119290547/212646563-427f1f25-c46b-43df-802e-fab94b51ca8e.png)

<br />

You can refer to this small [video](https://drive.google.com/file/d/1uvDHhf5Gop2zRe1nDTy-836bLuTHK2OR/view?usp=sharing)  to know how to setup BigQuery for your organisation


Big Query Schema - [https://github.com/glific/glific/blob/master/lib/glific/third_party/bigquery/bigquery_schema.ex](https://github.com/glific/glific/blob/master/lib/glific/third_party/bigquery/bigquery_schema.ex)


## Export Data in Excel format from Google BigQuery

There are generally 3 ways to export¬†data from Google BigQuery



1. Export data in the data studio and then export the results. Help Article [https://support.google.com/datastudio/answer/7398375?hl=en](https://support.google.com/datastudio/answer/7398375?hl=en)

2.¬†How to send data from Google BigQuery to Google Sheets and Excel

[https://towardsdatascience.com/how-to-send-data-from-google-bigquery-to-google-sheets-and-excel-eb58436bc398](https://towardsdatascience.com/how-to-send-data-from-google-bigquery-to-google-sheets-and-excel-eb58436bc398)

3. Exporting Data tables [https://cloud.google.com/bigquery/docs/exporting-data#console](https://cloud.google.com/bigquery/docs/exporting-data#console)


## Troubleshoot Checklist for BigQuery Data Update failure

1. **Check notification** - Check system logs to see if there is any error.
   1. Click on Notification tab from left pane.
   1. Check if there is any errors or warning related to your google account.

<img width="1437" alt="Screenshot 2024-03-04 at 2 35 31‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/dbc2e6dd-4e6c-4347-8629-5ffb9c6b1c41" />

**Sample error message.**

![image](https://user-images.githubusercontent.com/32592458/212663219-77f39c00-a32f-4c9d-8e06-566a52f63786.png)

2 . Check the **BQ account is active**.


<img width="691" alt="Screenshot 2024-03-04 at 2 33 04‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/044aee6d-3161-454b-9951-e0619f4e1b96"/>

3 . Check if there is any **billing issue at the GCS end**.

a. Go to [https://console.cloud.google.com/](https://console.cloud.google.com/billing/01340A-5AF039-6A970E?project=tides-saas-309509&organizationId=960057738174)

b. Click on `billings` from left pane.

c. Check to see if you have any billing related notification from Google.

![image](https://user-images.githubusercontent.com/32592458/212663277-277eb68b-1f7d-4965-b225-fcc095fab706.png)

4 . If not able to save credentials and it is showing **Account does not have sufficient permissions to insert data to BigQuery** as shown in the image

a. Click on three bars on the left hand side and go to `IAM & Admin` and choose `Service Accounts`.
![image](https://user-images.githubusercontent.com/40158831/218684103-c2dfa7ce-5de8-4bdb-bf8e-24f82601f88f.png)

b. Click on `CREATE SERVICE ACCOUNT` button.

![image](https://user-images.githubusercontent.com/40158831/218684457-fcc494af-a3e2-4d81-8ae6-eb4f2fc71d2c.jpeg)

c. Enter Service account name e.g. Glific and click on `CREATE AND CONTINUE`.

![image](https://user-images.githubusercontent.com/40158831/218684667-d107860d-ecea-4f9b-bde0-9ff1e53a45ec.jpeg)

d. Click on `Select a role`, type `owner`, choose `OWNER` from the list and click on `DONE`.

![image](https://user-images.githubusercontent.com/40158831/218684890-a86e9c60-0e45-4ebe-955a-ad0b4034118e.jpeg)

e. Again click on `DONE`. This will create a new service account.

![image](https://user-images.githubusercontent.com/40158831/218684989-15074eca-7368-48d2-8c06-fef2cba7e3a7.png)

f. Choose the service account created from list of service accounts.

![image](https://user-images.githubusercontent.com/40158831/218685139-b6c64c20-617b-451b-bcee-e359bd9a7296.png)

g. Click on `KEYS`, `ADD KEYS` and then `Create new key`.

![image](https://user-images.githubusercontent.com/40158831/218685537-5ef755a3-76f1-4b6b-b08b-f59538706c49.png)

h. Choose `JSON` as key type and click on `CREATE`.

![image](https://user-images.githubusercontent.com/40158831/218685556-7991f175-97c7-43c9-896d-8b60bc00744a.png)

i. Use the downloaded key and add that as credentials in Bigquery.
> ### **10 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Intermediate`**



## Prerequisites
- [Capturing data for reports & analytics](https://glific.github.io/docs/docs/Product%20Features/Reporting%20&%20Dashboard/Capturing%20Data%20for%20Reports%20&%20Analytics)
- [Data Studio Integration](https://glific.github.io/docs/docs/Product%20Features/Reporting%20&%20Dashboard/DataStudio%20Integration%20for%20Visualizations%20&%20Reports)

## Video Tutorial

<iframe width="800" height="500" src="https://www.youtube.com/embed/sTgquLn4VVM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

## Overview

This document is meant to guide organisations to build custom dashboards either entirely from scratch or build on top of the existing reports provided by Glific.

In order to keep things simple, all steps that will be described below will be in reference to the existing reports but they can be extended to build reports or dashboards from scratch as well.

The existing reports are built keeping in mind some of the general monitoring and evaluation metrics that organisations would like to keep a track of either on a weekly or daily basis.

These reports include information on daily activity status, engagement metrics, frequency of interactions and user information all within different pages of the reports.

The reports can be used as is or customised to the organisation‚Äôs liking by adding more data sources, blending different data views/tables together in existing or new pages of the report.


## What&#39;s being reported in the current reports?  

In the current version of the report (v3.0) you will find the following pages -

**Daily Status :** Gives an overall view of the total number of active contacts and messages sent by the users each day. It also gives a breakdown of the number of active contacts and messages by hour in order to evaluate time-based factors that might be impacting engagement

**Flow Reports :** This page gives a breakdown of the user engagement per flow. The charts included within this report give an overview of the number of times a user has requested a particular activity or flow or provided feedback on an activity.

**Sessions :** The sessions page gives total and average number of sessions (flows) initiated by the user. It also gives a breakdown of the frequency of interactions per user, average time spent on flow per user and the average number of messages sent by the user for each flow.

**Contact Details :** All contact details collected by the organisation can be visualised in this view of the report.

**Field Views (User Details) :** Additional page to visualise contact details that makes use of a stored procedure in Bigquery meant to unnest all the fields level information that the organisation is collecting in their flows and mapping them back to the contact details [Capturing data for reports &amp; analytics](https://glific.github.io/docs/docs/Product%20Features/Reporting%20&%20Dashboard/Capturing%20Data%20for%20Reports%20&%20Analytics)

All the reports above can be filtered as per date, time, flow name, flow label (activity/feedback etc.) and contact details.

# Getting Started :

## Adding template to new report page

Once you have made a copy of the existing reports and made connections to your data sources by following the steps in this document [Integrate DataStudio to create Visualisations &amp; Reports](https://glific.github.io/docs/docs/Product%20Features/Reporting%20&%20Dashboard/DataStudio%20Integration%20for%20Visualizations%20&%20Reports), you are now all set to customise existing pages or add new pages.

In order to add a new page,

1. Navigate to `Pages` on the header 
1. Click on `New Page`  (you can even duplicate an earlier page by clicking on `Duplicate Page` and customise it as per your requirements)

![image](https://user-images.githubusercontent.com/32592458/220824732-c2935bcc-de83-4431-ae97-6f25eaf6bb9e.png)

1. `Rename` the report by clicking on the Page (Number) from the header panel and selecting the 3 dots beside the current report name

![image](https://user-images.githubusercontent.com/32592458/212664979-7e02249b-9cd7-4a43-a35b-2393184c8660.png)

An empty page will be created without the source template. In order to add the source template -

1. Multi-select all the rectangles, texts and filters from the template that you would like to be copied from a previous page
1. Right click on the selection and click the `Make report-level`

![image](https://user-images.githubusercontent.com/32592458/212666345-2e55e194-283a-4f1f-9bec-03a7a0485c81.png)

![image](https://user-images.githubusercontent.com/32592458/212666358-00d05492-60ef-4951-babb-2caf2cbc42b6.png)

You are now ready to add data sources and charts to your new report page.

## Connecting to new data sources from report page

Every report page has a pre-selected data source which can be changed. If you want to select a source from  already connected data sources or if you want to include a new custom query or data source from your BigQuery Console -

1. Click on `Add Data` option available on the header panel

![image](https://user-images.githubusercontent.com/32592458/212666415-634ac468-19d6-4fc9-a38f-436e96697088.png)

1. Select the `Bigquery` connector

![image](https://user-images.githubusercontent.com/32592458/212666443-eac9a5ef-5849-45b5-bb25-357dd9452119.png)

1. Select the **project** that contains your datasets
1. Select the **Glific dataset**
1. Choose from the list of available data sources

![image](https://user-images.githubusercontent.com/32592458/212666464-e996f35a-5483-43b0-b571-bf034771d87a.png)

Or you could also -

1. Add a dummy chart and then click on `Edit Data Source` (pen icon) in the `Data Source` section of the right data pane
1. Select the data source from the list of connected data sources after the BigQuery connector automatically opens to your project

![image](https://user-images.githubusercontent.com/32592458/212666479-85559e22-a1d3-4ebf-a9f1-ac67d2fe3977.png)



## Working with fields, metrics, dimensions and filters

When working with charts, the right data pane gives you options to change **dimension**, **metrics**, **define custom fields** and **add filters** to organise data in a certain way. Here is a complete breakdown of all the available options -

**Fields :** Fields are the columns that appear in your connected dataset

**Date Range Dimension :** As the name suggests, this option lets you specify the `datetime` field within your dataset and can be used to plot time-series charts and graphs. Specifying the date dimension also lets the user further filter as per month, week, day, hour and so on

**Dimension :** Dimensions describe or categorize your data. Adding dimensions to a chart groups the data by those dimensions. Time, flow name, city, student‚Äôs age are all examples of dimensions you could use to group the information in your chart. ¬†Note that any type of data can be a dimension, including a column of unaggregated numbers

**Metrics :** Metrics measure your dimensions. A metric is the result of applying an aggregation to a set of values. That aggregation could come from the underlying data set, or be the result of implicitly or explicitly applying an aggregation function, such as **COUNT()**, **SUM()**, or **AVG()**

**Note about Dimensions and metrics in your data source :** When you connect to your data in Data Studio, you&#39;ll see the list of fields along with their default properties, as shown below. **Dimensions** (unaggregated columns that you can group by) appear as green fields. **Metrics** (aggregated data) appear as blue fields

**Parameters :** Parameters store user-defined data. Unlike dimensions and metrics, which get their information from the underlying data set, parameters get their information from users. Parameters can then be used to customise or personalised your reports and data sources

**Calculated Fields :** Calculated fields let you create new fields derived from your data. Calculated fields appear in the field list with `fx` at the end

**Filters :** There are two types of filters that can be added to the report, one at a page level, also called as a control and the other at a chart level which is available as an option in the right data panel after a chart is added. Both filters work essentially the same way and can be used to visualise only a portion of the data

## Creating calculated fields 

In order to create a calculated field -

1. Click on either dimension or metrics in the right data pane and select `Create Field` at the very bottom of the drop-down list

![image](https://user-images.githubusercontent.com/32592458/212666520-632adeaa-6d7b-4fb2-bd16-d3f5dce93e01.png)

1. In the formula text box, specify the condition using which you want the new field to be created. The formula takes in all SQL functions. Some examples in which this could be used include **HOUR(inserted_at)** to extract only the HOUR information from the datetime column or doing a CASE WHEN to specify ‚ÄúMale‚Äù or ‚ÄúFemale‚Äù instead of a ‚Äú1‚Äù or ‚Äú2‚Äù from the original data source. 

![image](https://user-images.githubusercontent.com/32592458/212666540-f1a6d9b9-15ed-49a4-ae67-e7a85689db4a.png)

1. Provide the calculated field with a name and data type and then select the `Apply` button. 

## 

## Creating Filters

**Creating page-level filters :**

1. Select on `Add a control` option from the top header panel

![image](https://user-images.githubusercontent.com/32592458/212666575-6ae12151-cb46-4d9a-8f45-fb5605fca8c6.png)

1. Select the type of filter you want to add from the page. The available filters include options like sliders to filter numeric data types, checkboxes to select only boolean values or drop down list to filter as per dimensions available in a specific column of the dataset. 

![image](https://user-images.githubusercontent.com/32592458/212666601-56536e26-d721-42fc-9166-589dddcc5246.png)

1. Adjust the shape and position of the filter within your report
1. Select the column using which the data needs to be filtered from the `Control Field` option available in the right data pane. 

![image](https://user-images.githubusercontent.com/32592458/212666646-6655e7fd-5a5c-4d42-8f4b-5a73b1e210bf.png)

1. Make adjustments to the **metric**, **order**, **range** etc. as necessary based on the type of filter selected



**Creating chart-level filters**

1. After adding a chart, scroll to the `Filter` section of the right data pane.

![image](https://user-images.githubusercontent.com/32592458/220824772-c360bfb2-1e44-4473-90e6-caac2de4fceb.png)

1. Click on `Add a filter`
1. Filters are usually of two types - **Include** or **Exclude**. Select whether you want to include or exclude certain dimensions or types of values (NULLs) from your data

![image](https://user-images.githubusercontent.com/32592458/220824788-f04d7b28-204b-4bbb-b05e-0697f6862052.png)

1. Select the field which has the dimension or value that needs to be filtered
1. Select a filtering condition. This can include filtering based on partial or full matching with the column value or filtering null values or values that start with a certain value.

![image](https://user-images.githubusercontent.com/32592458/220824803-c81060a4-c52c-4400-9bed-6b21cb0646a0.png)

1. Type in the keywords for which the filtering condition needs to be applied

## Working with grouped data 

In certain cases, you might be interested in working with averages such as per user per flow average times or with grouped data such as combining contacts and messages tables together and grouping them to visualise the number of messages sent by users.

These manipulations are not directly available in the backend tables and might get a little tricky to work with if you are building custom fields since Data Studio does not support group by functions in the formula box for calculated fields.

In such cases, it is advisable to either select the table visualisations where you can add multiple grouped dimensions and visualise the number of records for such groupings. For example, if you wish to get the number of flows requested by a user per day, you could -

1. Select the **Table with Bars** chart from the `Add A Chart` option in the top header panel

![image](https://user-images.githubusercontent.com/32592458/220824817-e26d4c6e-98b1-4b9f-948e-c9b619ca0029.png)

1. Add dimensions for `Date` and `Phone` in the right data pane to create the groupings 

![image](https://user-images.githubusercontent.com/32592458/220824822-dcce8ae1-c644-48d7-bf54-a43aa19be90a.png)

1. Select the `flow_label` metric and choose the **SUM** aggregation to get the total number of activities requested per user per day

## Creating Views

The other way to deal with averages or with grouped data is to create **views** from backend tables and add them as data sources within your reports. You can create views directly from Data Studio in the following way

1. Click on `Add A Data` option in the top header panel 
1. Select the `Bigquery` connector
1. Click on the `Custom Query` option and then select your **project** and **dataset name**
1. Type or paste your view query in the `Enter Custom Query` text  box
1. Select `Add` after you are done 

The views currently in use include Flat Fields available in your Bigquery Console along with UserSessions and ContactMessages available within Datastudio (Click on `Resource` &gt; `Manage added data sources` in your Datastudio report to view them)

## Managing views/queries - changing names and data types

The default name given to a query or a view when it&#39;s created is **Bigquery**. You might want to give this particular view/query a name in order to manage it across multiple pages of the report.

You can also make data type changes after you have created the view/query if you haven&#39;t already done so while creating it. In order to make name or data type changes -

1. Select the `Resource` option from the header panel of Datastudio 
1. Select the `Manage Added Data Sources`option 

![image](https://user-images.githubusercontent.com/32592458/220824837-d2b79c2c-b282-48ff-be37-a0cd7383bb4e.png)

1. Navigate to the data source that has the name ‚ÄúBigquery‚Äù and click on the `Edit` option beside it

![image](https://user-images.githubusercontent.com/32592458/220824849-6fba000a-134a-4008-a857-151f370e6bb6.png)

1. Double click on the current view/query name at the top of the `edit` box and change the name 

![image](https://user-images.githubusercontent.com/32592458/220824857-b805e438-81bf-483c-9d40-ac36c5e1cab3.png)

1. In order to change the data type, navigate to the field to be changed and select the data type from the drop-down list from either **Number**, **Text**, **Geolocation**, **Boolean** etc

![image](https://user-images.githubusercontent.com/32592458/220824869-b7a0253c-fdca-4ebe-a9dc-f5fcf4f8f57e.png)

1. Click on the `Done` button in the top right corner of the editing box after you have made all the changes 

## Styling the graphs

After you are done adding data sources, creating new views, adding graphs etc. it is time to style them as per your report.

Each graph has its own styling criteria. A **bar graph** may have an option to change the orientation, i.e, vertical or horizontal orientation whereas a **pie chart** gives you an option to select the number of total slices (if the data was numeric).

The styling depends on your use-case and there is no hard and fast rule as to how you would like to present the data.

You may however want to adjust the colors of the graphs/charts based on the template colors you are using. This can be done through the `Color` and `Background and Border` sections within the `Styling` tab.

![image](https://user-images.githubusercontent.com/32592458/220824884-04fb711f-0f1a-4379-8b41-778dfb8a351e.png)



You can also **add**  **labels** to the chart and adjust the **font size** and color of the labels. The other thing you might want to try is making text/orientation changes to the legend of the graph. The changes are automatically saved.

Once you are done styling the pages and the graphs, you have your organisation level reports ready to be viewed or shared.



## Reference Article

- [Configure Dimensions and Metrics](https://support.google.com/datastudio/answer/6402048?hl=en)

- [About Calculated Fields](https://support.google.com/datastudio/answer/6299685?hl=en)

- [Working with Filters](https://support.google.com/datastudio/answer/6291066?hl=en)

- [Configure Chart Components](https://support.google.com/datastudio/answer/6291062?hl=en)
> ### **3 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**


**You can create accounts for yourself and your team to define the level of access each of your staff member has to the Glific account.**

## Onboard new staff member

All staff member need to create their account  to begin using Glific. Take the following create your account:

Send a message to your organization&#39;s WhatsApp chatbot number from your **personal phone number and not the chatbot number**  that you will be creating your account with. You can send &#39;hi&#39; or any other word and then respond to the bot with the option to optin.

**(_Please do not use the chatbot number to create an account on Glific. Your individual user accounts are created using your personal phone numbers._)**

**_*The step to send a message to the chatbot first and opting in is important so you receive an OTP message   to confirm your phone number in the later step._**

1. Send a `hi` to your chatbot from the number you(or the staff) are creating account with.

3. Go to your org specific Glific account link. It will look something like this: https://orgname.tides.coloredcow.com/registration


4. Click on `create a new account`

![image](https://user-images.githubusercontent.com/32592458/212239613-13269f08-30dd-47ec-a911-8de8ae66936f.png)

4. Registration page will open up. Fill up the required details.

    a. Username  _(this can simply be your first name)_

    b. Phone number  _(this is be your_ **_personal whatsapp number_**_)_

    c. Password
    

5. Click on `Continue` button.

![image](https://user-images.githubusercontent.com/32592458/212239634-09356afd-ed43-45d4-9650-072a65795aa2.png)



6.  It will send an OTP message on user&#39;s WhatsAPP number.

![image](https://user-images.githubusercontent.com/32592458/212239647-60f07ae5-c6e1-44f5-ad9b-f762f82ff811.png)

7. After providing correct OTP, user will see a registered successfully message.  Click on `here` link to login

![image](https://user-images.githubusercontent.com/32592458/212239671-f34127d5-b6f8-45ca-b67d-cf31f0d62671.png)

8. You will not be able to login before your admin approves your request. (Important note : If you are the first person creating an account on the system after it has been set up you will automatically be the admin and will be able to log in without approval)

![image](https://user-images.githubusercontent.com/32592458/212239730-f21ccb04-2c29-4ea3-acc4-f1d998e0665f.png)

## 

## Staff management -  Access Approval

9. The admin can access the  `staff management` by going to `Manage` and clicking on `Staff` to give  access to the new staff account.

<img width="1458" alt="Screenshot 2024-03-04 at 4 24 34‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/5e00ce90-cdb7-495c-868a-366ee8d26246" />


10.  Find the user in the list of members. Click on `edit` icon in the that user tab.


<img width="1228" alt="Screenshot 2024-03-04 at 4 25 21‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/a1da06c8-0038-4171-8615-45cae0ce8720" />


11. Select the `role` you want to give to the new user.

<img width="465" alt="Screenshot 2024-03-04 at 4 25 47‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/63e491b9-2948-4a2f-b4c5-5ec658abb509" />


12. Optional: You can also select the collections  which gives the staff the ability to interact only with the contacts from that collection.

<img width="449" alt="Screenshot 2024-03-04 at 4 26 43‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/15350dd6-408a-4e53-baaa-099ea11fc85b" />


13. Click on `save` button.


14. If you want to remove access from a staff member, simply change their access to `none` or remove the user from staff management.

15.  After approval, user can access the platform with their phone number and password.

## User roles

1. **Admin** - Has complete access to all the parts of the platform.
1. **Manager** - Has complete access to the platform except settings and staff management.
1. **Staff** - Has access only to the chat section and their collections. Access can be limited to chatting with all contacts or only to the ones in their assigned collection.
1. **None** - Has No access to the platform. They can‚Äôt login. Can be used to block the access.

You can also check User roles access from the `help` link below Roles filed.

<img width="466" alt="Screenshot 2024-03-04 at 4 27 24‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/04a6cdfd-d741-47bd-9eb9-9045c2153df2" />

> ### **2 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**


**Glific supports multiple languages to communicate with contacts in different languages. It enables global reach, personalization & localization, inclusivity, efficient customer support & satisfaction**

## Create flow

1. Start creating a new flow in the flow editor. Refer [Getting started with communication in Glific](https://glific.github.io/docs/docs/Product%20Features/Others/Getting%20Started%20with%20Glific) to know more about how to create flows.



##  Languages available to communicate



2. Click on the `configure` icon on your new flow.


<img width="1259" alt="Screenshot 2024-02-29 at 5 08 31‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/ba8e3722-1d91-44de-92af-2388bcbd486a" />


3. Verify the languages are available to create a flow.


<img width="286" alt="Screenshot 2024-02-29 at 5 09 06‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/028bf6dd-e151-4adc-9a88-0c2d8f2996ef" />


## Create flow in a different language



4. Click on the `language`  option to add translation of the message for that language.


<img width="284" alt="Screenshot 2024-02-29 at 5 09 47‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/bbe78770-5964-408f-a7da-00e022c951d6" />

5. Click on the message you want add another language content for.


<img width="177" alt="Screenshot 2024-02-29 at 5 13 01‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/3d9a0901-9c81-42fa-ae03-26c51a416324" />



6. Enter the message text in the selected language and click  `OK` button to save it.

<img width="535" alt="Screenshot 2024-02-29 at 5 10 39‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/cb78303a-ec41-4908-b072-d2dab65ec7ed" />



7. Your message is saved. You can repeat the process for all the languages and all the messages.
   
<img width="188" alt="Screenshot 2024-02-29 at 5 11 14‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/9f8b8a9d-62f8-4d4d-b397-a42d5f73b9b1" />




To **add more languages in flow editor** please refer to [Add a new language in the flow editor](https://glific.github.io/docs/docs/Product%20Features/Others/Languages/#add-new-language-in-flow-editor).

## Test the flow in a different language

To test the flows in different languages, the user needs to change the language preference of the contact who is testing. And then execute the flow, which needs to be tested.

There are two ways to change the language.

1 . Type language and send it to BOT (it will execute the language flow ) and change contact language.

2 .  Change the contact language from the user&#39;s profile.

a) Click on the View Contact Profile.

<img width="620" alt="Screenshot 2024-02-29 at 5 17 16‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/7c00cb7c-ecb5-4042-a000-64482ae49f4d" />


b) Change the language from the dropdown.

<img width="641" alt="Screenshot 2024-02-29 at 5 17 52‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/3c6eaa4b-527d-435b-b21e-ed833b1b480d" />



For details, you can refer to the article [https://help.nyaruka.com/en/articles/4207750-changing-the-default-flow-language](https://help.nyaruka.com/en/articles/4207750-changing-the-default-flow-language) published by the **Nyaruka team** for the community. We thank the **Nyaruka team** for publishing it publicly for the community.


## Interface Languages

**Glific by default uses English language for its interface. A staff can change the interface language to other languages if they wish to use other languages.**

<img width="1466" alt="Screenshot 2024-02-29 at 5 19 15‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/7236766b-0194-4daa-912a-988efbc515e3" />

# How to change the language of your interface.

1 . Login in your Glific account.

2 . Click on bottom most button on the left profile `NGO main account` select `My account`icon from the menu.

<img width="559" alt="Screenshot 2024-02-29 at 5 20 06‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/a877601c-286e-4ce1-88fa-dfc1d47490e3" />


4 . On `My Account` page click on the `change interface language` dropdown to select the available languages  for interface.


<img width="679" alt="Screenshot 2024-02-29 at 5 21 35‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/23577cd9-df8e-44e9-a878-be417d6a720e" />


5 .  Interface language is changed in your preferred language.
<img width="1440" alt="Screenshot 2024-02-29 at 5 23 01‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/0340a2b8-656a-4cb9-b6ad-9f9c88b58ae8" />



## Add new Language in Flow Editor

To add new language in Flow editor, add it from the organisation setting screen.

**Steps to add new language in the Flow editor.**

1 .  Click on `settings` icon from bottom left corner.


<img width="804" alt="Screenshot 2024-02-29 at 5 24 12‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/2abd3991-15b6-4b63-9b07-eac89c15d653" />


2 . Click on `Organisation` tab.


3 .  In `supported languages` section click `arrow` icon to open the drop down. Click on the checkbox next to the language you want to add in your flow editor.

<img width="674" alt="Screenshot 2024-02-29 at 5 25 12‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/4f72cb83-95d9-4d7c-a8bc-1c89f618ae5b" />



4 .  Scroll down and click on Save button to save the changes.

5 . Verify the new language added in the flow editor.
> ### **2 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**

Collections is a feature in Glific to keep one set of users in one place and use it to communicate with all users in that collection in one go.

## Video Tutorial


<figure class="video_container">
  <iframe src="https://www.youtube.com/embed/CG6HLbCGW7M?showinfo=0" frameborder="0" allowfullscreen="true" width="800" height="500"> </iframe>
</figure>

<br/>

_The UI of the platform is updated since the recording of the video. The functionalities shown remain the same._

## Create a Collection

1. Click on the `Manage` in the left panel of the Glific screen. Click on `Collections` to access the collections page

<img width="170" alt="Screenshot 2024-03-04 at 3 21 08‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/df6722f8-7097-493a-9822-13f31052bfdd" />

2.  Collections page will open up. Click on the `+Create` to create a collection 

<img width="517" alt="Screenshot 2024-03-04 at 3 22 24‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/44f96275-6957-4f0e-b200-2145b6dd7c12" /> 

## Assign staff to¬†a Collection

3.  Add details of the Collection

    1. `Title`
    1. Description
    1. `Assign staff members` to the collection who will be chatting with the contacts in the collection.

Click on `save` after adding the details.

<img width="488" alt="Screenshot 2024-03-04 at 3 23 22‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/b87ce028-49e8-4cca-8dc0-a9ba76e47307" />

4.  Verify the collection created on the collections page.

<img width="1264" alt="Screenshot 2024-03-04 at 3 23 53‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/85b4f680-4f5d-4bca-bd97-06a84971bcce" />



##

## Add beneficiaries to Collection (Manually)

b. Add contacts to the collection. From `Add contacts`pop up, select the contacts from the dropdown and click on the `Save` button.
<img width="1266" alt="Screenshot 2024-03-04 at 3 25 00‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/4f3de3fc-1ffd-44d6-82ae-47c16d0de9a1" />

<img width="1273" alt="Screenshot 2024-03-04 at 3 25 35‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/c4c3d149-6b3c-4ad8-89b6-f0a0da5669ad" />

## Send a message to the Collection

1.  `Send a message` or `start a flow` with all contacts of a group. Go to `Chats` page and click on `collections` icon from the right hand menu.
   
<img width="1466" alt="Screenshot 2024-03-04 at 3 26 09‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/730b2f3c-50ce-434f-85fa-7e8a0628f7da" />


2 . Click on the collection to which you want to send a message or HSM template.
<img width="1302" alt="Screenshot 2024-03-04 at 3 27 13‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/a0665b24-30ca-4064-8aeb-3edc9f25fa1a" />


3 . Type the message in the Type a message box and Clink on `send` Icon.

<img width="1306" alt="Screenshot 2024-03-04 at 3 27 55‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/6cbaa297-dffd-4e29-af5a-221d5a991af2" />

or

click on the up arrow and go to `templates` button to select the approved HSM template.

<img width="1305" alt="Screenshot 2024-03-04 at 3 28 37‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/5cd940c9-5538-4654-8da0-b2e3770fc4fd" />

4 . Variable input box will open up. Enter the variable and click on `Done` button

<img width="1305" alt="Screenshot 2024-03-04 at 3 29 01‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/e9637837-093d-452f-846b-75f0803c3824" />

5 . Message will appear in message input box. Click on send icon to send the HSM template to all contacts in the selected collection.
<img width="1301" alt="Screenshot 2024-03-04 at 3 29 35‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/7d3714b4-9ac8-4955-aabb-2e76ad535118" />

6 . A contact status message popup will open up. Click on OK, send button to send the message.

<img width="1287" alt="Screenshot 2024-03-04 at 3 30 31‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/f140dd42-a44c-4746-b457-d71fea4f19e2" />

7 . Verify the message sent to the contacts
<img width="973" alt="Screenshot 2024-03-04 at 3 31 05‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/f56f58f6-e072-464f-aec9-228b837a0e9d" />


## Start a flow for the Collection

1 . Click on the `arrow` icon next to the collection name.
<img width="1299" alt="Screenshot 2024-03-04 at 3 31 32‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/b63b6fd7-dea4-4358-bf67-90d2ce592fd5" />


2 . Click on `start a flow` menu item. Select the flow from the drop-down and click on `start` button to start a flow for all the contacts in the collection.

<img width="1284" alt="Screenshot 2024-03-04 at 3 32 15‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/b300f28e-c893-46cf-9524-8dee4877d51e" />


<img width="1053" alt="Screenshot 2024-03-04 at 3 32 33‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/eaeb9961-f517-423c-8047-7312d54b1439" />

There may be a requirement to start a specific flow when a new contact sends any message for the very first time to the BOT.

## Configure New Contact flow

1. Click on `Settings`  icon from the sidebar.


<img width="185" alt="Screenshot 2024-03-05 at 2 19 54‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/1b3a2861-4bee-47f9-842e-72f325528d0d"/>


2. Click on the `Flows`from the left panel.

<img width="684" alt="image" src="https://github.com/glific/docs/assets/143380171/5aa655f8-27be-4b0d-a530-6cb2426b4aa5"/>



3.  Select `New contact flow` **** checkbox. If the `New contact flow` checkbox is unselected, then no flow will execute for the new contact for the very first message.

<img width="425" alt="image" src="https://github.com/glific/docs/assets/143380171/23201b80-ae76-4dd9-ae03-8509649bab35"/>


4.  Select the flow from the dropdown which you want to execute when a new contact sends a message for the very first time.

<img width="424" alt="image" src="https://github.com/glific/docs/assets/143380171/5688328e-a0d4-4700-bb12-c698fbb68ec5"/>



5. Click on the `Save` button


<img width="565" alt="Screenshot 2024-03-07 at 3 38 05‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/a3b1673d-e654-4ed4-bd06-64f31fa9ba1f"/>


There may be a requirement to send automated responses, when contact send any keyword which is not assigned to any flow or send  responses during the non working hours. NGOs can configure **Default flow** in Glific and assign a flow to respond.

## Configure Default flow

1. Click on `Settings` icon from sidebar.

<img width="148" alt="Screenshot 2024-03-07 at 3 24 18‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/381fc394-d388-4168-a743-57f58be55f86"/>




2.  Click on  `Flows` from left panel.

<img width="684" alt="image" src="https://github.com/glific/docs/assets/143380171/5aa655f8-27be-4b0d-a530-6cb2426b4aa5"/>



3.  Select `Default flow` checkbox.

4. Select the flow, which you want to use as default flow.

5. Select the `days` of working from the dropdown

6. Select the `start`and `stop` hours from the clock icon.

## Trigger a flow during non working hours

7. Select the flow which you want to trigger, if user sends any message in out of operations hours.(Hours outside of the hours selected for default flow) .

8. Click on `Save` button activate it.

<img width="420" alt="image" src="https://github.com/glific/docs/assets/143380171/4138f354-7ba3-42a6-9a6e-39dcd5546a36"/>



9.  You can deactivate it any time by unselecting the `Default flow` checkbox.



**Some details about** `Default flow` **flow.**

1. It will not work for new contacts, when they message it for the very first time.
1. If beneficiary enters any keyword of any flow, then that particular flow will execute, not the flow selected in `out of`  `Hours of operation` .
1. The `out of Hours of operation`flow will be executed only once in a day for each contact,
> ### **4 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**

**NGO users can see the contact profile and access history from the Glific interface, when there is a requirement to check the same. It could be used for personalized interactions, data-driven decision making, improving support etc.**

## View Contact profile

1 .  Login to the Glific and click on the chats tab from the left panel.

<img width="195" alt="image" src="https://github.com/glific/docs/assets/122982753/58bcfbe7-b89e-4915-a22d-d25fc24e8269"/>


2 . Search the contact from the name of the contact or phone number from the right panel.

<img width="355" alt="image" src="https://github.com/glific/docs/assets/122982753/9bb542ce-00e0-4acc-b5cf-5921866f7440"/>


3 .  From the contact's top bar click on the down arrow (next to the contact name) and click on `View contact profile` link

<img width="372" alt="image" src="https://github.com/glific/docs/assets/122982753/9fc7c374-2561-4a3f-8f0f-3a1deb66dfc2"/>

4 .  Contact profile page will open up.  You can check the below details of contact.

    i) Name - Contact Name that is shown in chat screen and "View profile-->Details screen" is the one which is set in the flow with `@contact.fields.name` variable, by the contact. 
    If the name is not updated with the `@contact.fiels.name` variable, the name will be picked from `@contact.name` variable (i.e WhatsApp name set by the contact).
 <br/>
    <img width="815" alt="image" src="https://github.com/glific/docs/assets/122982753/d0e5965b-818c-4c11-97ab-21683d523ae5"/>
<br/>
    <img width="848" alt="image" src="https://github.com/glific/docs/assets/122982753/1740d18f-b93e-4548-af52-349f5fb4acb6"/>
<br/>
    ii) Phone number
<br/>
    <img width="759" alt="image" src="https://github.com/glific/docs/assets/122982753/9d4ec6cf-8a3c-47ef-97a5-d4f14f799dd4"/>
<br/>
    iii) Provider status / Optin Staus -If contact is optin and can receive HSM templates
<br/>
    <img width="905" alt="image" src="https://github.com/glific/docs/assets/122982753/69297060-1986-48c5-9a59-679e21a5e5c9"/>
<br/>
    iv) Language - Contact&'s preferred language. NGO users also can change the language and save it to update the  language preference of contact.
<br/>
<img width="737" alt="image" src="https://github.com/glific/docs/assets/122982753/07efa47e-d223-4af6-a1b5-fabc38b9fafc"/>


## Create New Profile

1 . Create a new flow and ask a question, the contact if he/she wants to create a new profile.



![image](https://user-images.githubusercontent.com/32592458/221193585-825ae6f6-066e-4c14-854f-20feedeb4afd.png)



2 .  If contact press 1.  As contact to provide their profile attributes like name and role

![image](https://user-images.githubusercontent.com/32592458/221193608-cc8c2688-cdd0-4df0-aeaf-e7ac90af598a.png)



3 .  Once the contact share the details use the node with the name `manage profile` and add the details to the profile.

![image](https://user-images.githubusercontent.com/32592458/221193626-2bfdb53a-1407-4a39-ab72-401d784169f2.png)



4 .  It will return success or failure. If it returns success add the values. in the contact variables.

![image](https://user-images.githubusercontent.com/32592458/221193656-e1b997a2-353d-4ea7-85e7-2e873a5fc9c3.png)



Output after executing the flow (**Create User**)

![image](https://user-images.githubusercontent.com/32592458/221193678-064ed93b-298c-48dc-ae62-62744412cf6f.png)

## Access Old Profile

To access the old profile or the profile just create.

1 .  Enter option 2  (Switch to the existing user) in the first node created


![image](https://user-images.githubusercontent.com/32592458/221193760-002443f0-67e3-4743-843d-3ec96dcb045c.png)





2 .  Use `@contact.list_profiles` to show all profiles that exist for this phone number.

![image](https://user-images.githubusercontent.com/32592458/221193776-bf597e31-0bb7-4e04-979c-86ef162806f8.png)



3 . Use the `manage profile` node to switch the user profile

![image](https://user-images.githubusercontent.com/32592458/221193803-b0a99b43-a458-496d-924d-8b87e52a71f0.png)

![image](https://user-images.githubusercontent.com/32592458/221193835-0643affb-3b19-4699-ac8e-ef0b50957b37.png)



4 .  **On success**, access the profile contact variables with `@contact.fields.name`

**On Failure** ask the contact to choose the option again.

![image](https://user-images.githubusercontent.com/32592458/221193860-872565dc-cd27-41b8-9a48-b77ae813c543.png)



Output after executing the flow (**Switch User**)

**User profile 1.**

![image](https://user-images.githubusercontent.com/32592458/221193883-6ffdfa66-30f7-4fdd-a012-82a954fe6cf5.png)



**User profile 2**

![image](https://user-images.githubusercontent.com/32592458/221193915-a4cc4645-2e2e-4763-b2fd-f4ab857cc485.png)

## Multiple Contact Profiles with same phone number

### Video Tutorial

<iframe width="800" height="500" src="https://www.youtube.com/embed/vsFs_uFEblE" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<br/>
**Please note- This is a video recorded on old UI**
<br/>


It has been observed in some cases, beneficiaries have one phone number and there is more than one person who needs to have their profile created to access the Chat.

In Glific we have introduced a multiple profile feature, which will help more than one person to create their profiles and use the chatbot to access the information with one phone number.

Below are the steps on how to implement multiple profile features in your flow.

## Advanced Feature Webinar

<iframe width="800" height="500" src="https://www.youtube.com/embed/csOGHfb4g3s" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<br/>
**Please note- This is a video recorded on old UI**

<br/>

## View Contact History

1 .  Click on the `History` button to see the chat/flow history of the contact.

<img width="1261" alt="image" src="https://github.com/glific/docs/assets/122982753/ab4315d0-abb3-4d53-8d3c-f9ad3bd722c4"/>

> ### **1 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Begineer`**

___

**Keywords are used to start a particular flow from a BOT. When beneficiary sends a specific word  which is set as keyword for a flow, that particular flow will start and beneficiary will start getting messages from that flow. Multiple Keywords can be defined with a flow and in different languages. Common keywords used are _Hi_, _Hello_, _Help_, _NGO Org Name_ etc, depending on the purpose of the flow.**

## How to define a keyword

Keywords can be defined at the time of creating a flow and can also be edited at a later stage.

1 . Click on `+ CREATE` button

<img width="1465" alt="Screenshot 2024-03-05 at 4 37 06‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/605ecc92-45ee-4def-9bea-9caec83e1db2"/>



2 . Enter the name of the flow and define keywords. Separate the Keywords with coma &quot;,&quot; to add more than one keyword in a flow.

![image](https://user-images.githubusercontent.com/32592458/219550215-ace85f5c-2f2e-4eb2-b5be-d4cb2d3fd907.png)

## Edit Keywords

Click on `Edit` icon next to the flow listing page to add or edit the keywords. Keywords are shown below the flow name, to know which keywords are assigned to a flow.

<img width="1268" alt="Screenshot 2024-03-05 at 5 32 30‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/a2214963-3da4-440e-aa0d-1bd944247dbe"/>


## Ignore keywords

4 . `Ignore keywords` if checked, is used to restrict beneficiary to enter any other flow from the active (current) flow with use of  keywords of another flow.

![image](https://user-images.githubusercontent.com/32592458/219550245-f57aa62b-7075-44d3-b33e-cbfd5e3a1aca.png)

5 . Click on `Save` button to save the modifications done in keywords
> ### **1 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**

**There may a need to export the flows created and then import it to a new environment. This feature will be required in case there is a need to change the BOT number or another BOT is required and same flow needs to be used in the new BOT.**

## Export the Flow from Existing System

1 .  Click on the `Flows-->Flows` tab from the Left Panel.

<img width="194" alt="image" src="https://github.com/glific/docs/assets/122982753/8b0ba3bc-90ca-4da7-921f-74cf04e7ce50"/>

<br />

2 .  Click on the 3 dots in the line of the flow name which you want to import. Within that, click on `Export` option.

<img width="1289" alt="Screenshot 2024-03-06 at 4 02 20‚ÄØPM" src="https://github.com/glific/docs/assets/122982753/8889c837-51af-420c-a6d2-6bbd4bcef845"/>

<br />

or

It can also be exported from the Flow Editor, if the flow is opened for configuration. Click on 'More' and you will find 'Export flow' option there.

<img width="1292" alt="Screenshot 2024-03-06 at 4 03 42‚ÄØPM" src="https://github.com/glific/docs/assets/122982753/b262cd55-ca70-4373-82bf-caad780701a5"/>

<br />

3 . On clicking the `Export Flow` button, the file explorer pops up. Click on `Save` to save the file on your device. The file will be saved in **JSON** format.

![image](https://user-images.githubusercontent.com/32592458/219550552-54e4fbec-60a2-4db3-b62c-9871d5a909e0.png)


## Importing the Flows 



1 . Click on the `Flows-->Flows` tab from the Left Panel.

<img width="194" alt="image" src="https://github.com/glific/docs/assets/122982753/8b0ba3bc-90ca-4da7-921f-74cf04e7ce50"/>

<br />

2 . From the Flow listing screen, click on `Import Flow` button

<img width="1280" alt="Screenshot 2024-03-06 at 4 05 48‚ÄØPM" src="https://github.com/glific/docs/assets/122982753/b4e2c710-44e6-420b-aa72-e53585290d41"/>

<br />

3 .  It will open the file explorer window to select the flow file.

4 .  Select the file and click on `Open`. The flow will be copied,  created and displayed on the Flow listing page.

![image](https://user-images.githubusercontent.com/32592458/219550603-5872a039-220d-4122-be6e-eb854c95cce5.png)
> ### **2 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**

**You can start communicating with your contacts/ beneficiaries after your Glific account setup is complete.**

## Video Tutorial: Getting started with Automated Chat Flows

<figure class="video_container">
  <iframe src="https://www.youtube.com/embed/KUmiAUOLI2M?showinfo=0" frameborder="0" allowfullscreen="true" width="800" height="500"> </iframe>
   <br/>
**Please note- This video is recorded with old UI**
   <br/>
</figure>

## Create a Flow

1. Login to Glific with your credentials.

<img width="501" alt="image" src="https://github.com/glific/docs/assets/122982753/571990be-c646-4f1e-94f1-0367dc1ae541"/>

<br />

2.  Click on `Flows-->flows` menu from the left panel and then click on `+ CREATE FLOW` button from top right corner

<img width="208" alt="image" src="https://github.com/glific/docs/assets/122982753/5ea7269b-f91f-4314-81da-5009856bbd36"/>
<br />
<br />

<img width="1286" alt="Screenshot 2024-03-06 at 4 19 06‚ÄØPM" src="https://github.com/glific/docs/assets/122982753/bbede205-3018-4c8f-bbdb-a8c68241ec04"/>

<br />

3.  Enter the `Name` of the flow and the `Keywords` with which you want to trigger/start the flow. It is always good to add Description for the flow (which makes it easy for any teammember to understand about the flow) and Tag (to categorize the flows of same categorize).
Click on `Save` button.

<img width="579" alt="image" src="https://github.com/glific/docs/assets/122982753/27287a4a-927d-4fb7-9d1b-ae0c16fdd199"/>


## Configure the Flow

1. You will see your first flow created on the `Flows` tab. Click on the `Configure` icon to start adding messages in the flow.

<img width="1262" alt="Screenshot 2024-03-06 at 4 22 38‚ÄØPM" src="https://github.com/glific/docs/assets/122982753/5c017b33-3ed9-43f1-96db-470637ef01f7"/>

<br />

2. Once the Flow Editor opens up, click on `Create Message` to create your first message in the flow.

<img width="1275" alt="image" src="https://github.com/glific/docs/assets/122982753/db5fc88d-3cc8-4b37-b61b-ad3982b56bb2"/>

<br />

3.  The `Send Message` node will open up. Type your introductory message in the input box. Click on `Ok` button to save it.

<img width="618" alt="image" src="https://github.com/glific/docs/assets/122982753/c6bfa582-2ad5-47e2-9442-5cdc07b62f79"/>

<br />

4.  You will now see a node created in your Flow Editor.

<img width="334" alt="image" src="https://github.com/glific/docs/assets/122982753/366b819a-aaf0-4ae2-be42-467dd34b5fa1"/>

<br />

5.  Click on the **red dot** at the bottom of the node and drag it to create the next node.

<img width="379" alt="image" src="https://github.com/glific/docs/assets/122982753/f30cc898-e287-4858-bbf8-34cf8886d3f4"/>

<br />

6.  You can receive the response back from your contact at this stage and show it back to the contact in a flow.

<img width="580" alt="image" src="https://github.com/glific/docs/assets/122982753/8305b838-c43e-4150-bf52-c079cd23630a"/>

<br />

7. There are many message types that are available for you to build up your communication flow with your contacts.

## Test the flow

12. To test your communication flow, click on `Preview` button on the top right of the flow editor screen.

<img width="1288" alt="Screenshot 2024-03-06 at 4 29 52‚ÄØPM" src="https://github.com/glific/docs/assets/122982753/9275a5a3-f7f8-400b-ac75-af00a55b053d"/>

13.  It will open up a simulator for you to start communicating through the flow.

14.  Reply from the simulator message input box and you will see the

the response back from your flow.

<img width="952" alt="image" src="https://github.com/glific/docs/assets/122982753/782899d4-57c4-4848-bdd1-082725fec98a"/>

15 .  Click on `Publish` button on the top right, to start using it with your contacts, after your test is successful.

<img width="1294" alt="image" src="https://github.com/glific/docs/assets/122982753/e1470bcc-bb63-4f84-af69-49ebcc305c79"/>


- **Publish &amp; Stay** - Will publish the flow and keep the flow open in Flow editor.
- **Publish &amp; GO Back** - will Publish the flow and take you to the flows listing page.
- **Cancel** - Will not publish the flow and keep the flow open for editing

<img width="453" alt="image" src="https://github.com/glific/docs/assets/122982753/5c6b9a54-b985-4251-8570-af3e4565bd13"/>


16 . Note- It will show the `Last published` and `Last saved in draft` date and time of the flow in the flow listing page. Make sure to publish the flow after edits to get the desired results from the flow.

<img width="1282" alt="image" src="https://github.com/glific/docs/assets/122982753/9d04f3cb-a41e-4027-bcd9-573cc2223a7f"/>

## Change Admin in Facebook Business Account 

If needed, one can add new members in the FaceBook business account. Refer the Facebook support article below for more details : [Add People to your Business Manager](https://www.facebook.com/business/help/2169003770027706?id=2190812977867143)

You can also change the role of the person to admin if needed.
Refer the Facebook support article below for more details : [Change someone&#39;s Role in Business Manager](https://www.facebook.com/business/help/254817222048070?id=2190812977867143)


## Reference Articles

[Flows : By TextIt](https://help.textit.com/en/article/sending-messages-with-a-flow-t9sj2w/) <br /> _We thank the **TextIt** team for publishing it openly for the community._

## Tutorial Videos

- [Tutorials on Flows : By RapidPro](https://app.rapidpro.io/video/)

- `Save` and `Publish` the Flows
<figure class="video_container">
  <iframe src="https://www.youtube.com/embed/atAgP3HCo0Q?showinfo=0" frameborder="0" allowfullscreen="true" width="800" height="500"> </iframe>
     <br/>
**Please note- This video is recorded with old UI**
   <br/>
</figure>

<br/>
<br/>

- 'Revert Changes' in Flows

<figure class="video_container">
  <iframe src="https://www.youtube.com/embed/Ef-Lc-18ics?showinfo=0" frameborder="0" allowfullscreen="true" width="800" height="500"> </iframe>
     <br/>
**Please note- This video is recorded with old UI**
   <br/>
</figure>

## Tags
Save as Draft, Revision History, Facebook Admin, Facebook Business Manager


> ### **2 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**


**Glific currently supports the use of `Tags`, which is used for categorizing flows, HSM Templates & Interactive Messages. Tags help you manage your flows/ templates/ interactive messages faster and enables you to filter out and view items belonging to each Tag separately, making the search process easier.**

<br/>

## Tags in Flows 

In the Flow listing page, you will find the option for selecting a Tag from a dropdown list. Tags could be helpful for bundling all flows which are similar to each other.

<img width="442" alt="Screenshot 2024-03-04 at 2 54 09‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/75b71d2d-6689-472a-a3c5-089190530646" />

Tags could be created during the creation of a flow. Please refer the screenshot below :
<img width="468" alt="Screenshot 2024-03-04 at 2 55 42‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/45830d4e-f356-4e90-b281-6960f491b874" />


As you can see, while creating a flow, you can either select a Tag from the dropdown or create a new Tag which indicates the type of Flow. Here since it is a user registration flow, we‚Äôre tagging it as ‚ÄòOnboarding‚Äô. Similarly, other Tags could be used like ‚ÄòSupport‚Äô, ‚ÄòMenu‚Äô for bundling all flows which handle support or which contain menu respectively.

## Tags in HSM Templates

<img width="185" alt="Screenshot 2024-03-04 at 2 57 02‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/97a5573c-371a-424a-9eac-f613b77c2d28" />

Tags could also be useful in HSM Templates, for bundling all similar template messages. 
As you can see in the screenshot above, the Tag option could be found just above the `Submit for Approval` option.

Similar to what we saw in `Tags in Flows`, during Template message creation, Tags could either be created or selected from the available set of options. It can also be ignored if not required.

<br/>

## Tags in Interactive Messages


Tags can also be used in Interactive Messages. It will particularly be useful for categorizing interactive messages which has some common attributes. This makes finding them at a later stage useful. 


<img width="404" alt="Screenshot 2024-03-04 at 3 02 13‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/e50533cb-e6b5-45dd-85d9-3cd31b09959f" />

Tags could either be selected from a dropdown or a new Tag could be created altogether while creating an interactive message. 

## Note
It is important to note that selecting or creating tags are not mandatory during creation of a Flow, Template or Interactive Message. It is an additional feature in case you‚Äôve large number of flows/ templates/ interactive messages & managing them becomes cumbersome. 
## Send and receive messages

At the most basic level you can send and receive messages to your user community.

## Rich media attachments

You can use stickers, images, videos(youtube link or attached in message), document, audio. You would need to host the media files on platforms like Google Cloud Storage and then provide link as an attachment on Glific.

## Record and send audio messages

You can upload an audio file on GCS and add the link in a message or you can also directly record the message from the Glific chat interface and send to the users.

## Multiple languages

You can enable different regional languages and plan the message content to support those languages. See More

## Flows - conversation builder

1. [**Design Conversations**](https://glific.github.io/docs/docs/Onboarding/Glific%20Onboarding%20Toolkit) - You can set up messages to be sent to the users and plan the next messages based on their responses. You can also take a lot of other actions based on users&#39; responses as mentioned below.
1. [**Send message to a staff**](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Send%20a%20staff%20member%20a%20message) - If you feel that your staff needs to be notified of something while a contact is in the middle of the flow.
1. **Terminate flow** - if a user is in a flow and you want to send a manual message you can terminate the active flow
1. [**Label a message**](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Label%20the%20incoming%20message) - if you want to track some metrics, labels are your good friends. For example you want to see how many started a flow and how many completed the flow, you can label the first message as `Flow stared` and last message at `Flow completed`.
1. [**Wait for the next message**](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Wait%20for%20the%20contact%20to%20respond) - you can add pauses in between messages to make it look like a more natural conversation.
1. [**Split conversation paths**](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Split%20By/Custom%20Expression) - you can send different contacts down different conversation paths based on multiple conditions for example, the collection they belong to and an option they selected.
1. [**Webhooks**](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Call%20a%20webhook) - use these when you want to interact with an external system to pull or push data from Glific.

## Block contacts

If you don&#39;t want to see a particular contact in the chat list maybe because they sent inappropriate messages or spammed the chatbot, you can block and remove them from the list.

## Simulator

The simulator can help you test the conversation flows without spending additional costs of testing it on your actual phones.

## [Advanced Search](https://glific.github.io/docs/docs/Product%20Features/Searches/#advanced-search)

As you interact with a large number of contacts you might want to search them for more than 1 parameter such as if there&#39;s a label assigned to the message, if some team member is managing it, or just looking up within a date range. You can also save this search for quick reference later on. Saving this search allows you to grow that search result over time. For example you want to view all the messages labeled `Flow complete` and belong to the `Jharkhand` collection.

## [HSM templates](https://glific.github.io/docs/docs/Product%20Features/Templates)

WhatsApp allows you to nudge your users if they have not messaged the chatbot within 24-hours. For this you need to get an HSM template message approved before you can send it out. Glific offers the interface to submit this message for approval. You can use these templates as a single message or within a flow. Templates also allow you to use buttons to redirect the user to a website link or call you at the press of a button.

## [Interactive messages](https://glific.github.io/docs/docs/Product%20Features/Interactive%20Messages)

Messages can also have clickable actions for upto 10 options. For upto 3 options you can use buttons, but for more than 3 and upto 10 you need to use the list option. These are a good replacement when you want to get users to respond to move the conversation flow forward.

## [Time based scheduling (triggers)](https://glific.github.io/docs/docs/Product%20Features/Triggers)

When you want to send a flow or message to a user at a specific time, you can schedule those messages in advance. You can simply set up a trigger and forget about it üòÑ. This scheduled messages can be recurring periodically or can be sent one time - upto your program.

## [Default messaging](https://glific.github.io/docs/docs/Product%20Features/Others/New%20Contact,%20Default%20flow%20Out%20of%20office%20hours%20notifications/#configure-default-flow)

There will be cases when your contacts will not be in any flows you&#39;ve defined on Glific or they might send a message that doesn&#39;t match any keywords you&#39;ve planned for. In those cases, this default flow will get triggers so that you have the opportunity to bring the user into one of your desired conversation flows.

## [Staff management (roles &amp; permissions)](https://glific.github.io/docs/docs/Product%20Features/Others/Staff%20Management)

As Glific is a cloud based program, you and your team can work together from anywhere. Your team members can create their own Glific login and use the platform. Different team members can be given different access.

## [Collections](https://glific.github.io/docs/docs/Product%20Features/Others/Collections)

Whenever you want to categorise your users based on a certain data point such as their location, grade, language preference, or any other category specific to your program, you can put them in a collection. This allows you to send targeted messages to all the contacts in a collection at once. You can move contacts in and out of the collections as per your use case.

## [Optin Management](https://glific.github.io/docs/docs/Product%20Features/Flows/Others/Configure%20Optin%20&%20Optout%20preferences%20in%20Glific/)

WhatsApp requires you to get legit optin from the contacts else you run into the chance of getting your number blocked. You can save their optin status within glific and send them nudge messages. Or if the contacts no longer want to receive a message you can opt them out.

## [Contact history](https://glific.github.io/docs/docs/Product%20Features/Others/Contact%20Profile%20&%20History/)

You can view how &amp; when a contact moved from one flow to the other, how &amp; when they were added or removed to a collection or any other contact related activity on Glific. You can check this information in the contact profile along with all the other contact related information.

## [Multiple profiles](https://glific.github.io/docs/docs/Product%20Features/Others/Contact%20Profile%20&%20History/#multiple-contact-profiles-with-same-phone-number)

With this feature, one contact(i.e. WhatsApp number), can have multiple user profiles associated with the contact. For example, 2 or 3 children in a household using the same phone to access the chatbot. In the default case, one contact will have one profile. If you have used this feature and users have created multiple profiles, then they can easily switch profiles to continue from their last interaction. When a contact starts using the chatbot, in case multiple profiles exist, you can ask the user to select the right profile. The data collection happens at a contact level and not at a profile level - this is something we still need to figure out.

## [Maps visualisation](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Wait%20for%20the%20contact%20to%20respond/#15-has-location)

You can use the default location feature of WhatsApp to get the user&#39;s locations and then plot them on the map. This can enable you to check the density of an occurrence in a region for ex, if you want to see how many people reported potholes or garbage in their location.

## [A/B Testing](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Split%20By/Random%20Chance%20for%20AB%20Tests)

Glific NGOs have reached a stage where they want to run tests with their flows and find the most optimum method to deliver their content and engage with users. Managing A/B tests right now isn‚Äôt easy and so we‚Äôre building the right support for A/B tests.

## Speech Recognition

When using voices is crucial for your programs, you can use speech recognition features to get users to respond with a voice note and understanding their responses. Glific uses external integrations to accomplish this hence not readily available. If you share your usecase with us, we can help you with this.

## [Notifications](https://glific.github.io/docs/docs/Product%20Features/Notifications)

Glific provides warnings and critical alerts whenever errors and issues arise such as message not sent, template message got rejected etc‚Ä¶ You can access notifications from the sidebar.

# Integrations

## [Google Sheets](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Link%20Google%20Sheets)

Many education orgs need to continuously create new content for the chat flows while keeping the same conversation experience. So while the content order remains same, the content itself changes over time. This often needs a standard Glific flow where the content can be pulled from a google sheet which stores the dynamic content. This way you won&#39;t have to make new Glific flows each time you have to deliver content.

## [Access data with BigQuery](https://glific.github.io/docs/docs/Product%20Features/Reporting%20&%20Dashboard/BigQuery%20Setup%20and%20link%20with%20Glific)

All the conversation program data resides in BigQuery which is an additional tool required when using Glific. Glific only stores the data for a couple of months and then removes it. So your data only resides on BigQuery in the long run.

## [NLP with Dialogflow](https://glific.github.io/docs/docs/Integrations/Dialogflow%20for%20Natural%20Language%20Processing/)

If you have a use case there your users are typing a wide variety of unexpected responses that can&#39;t be handled by the options in Glific, then you can also use Dialogflow&#39;s NLP feature to respond to your users. You can group those unexpected responses by categories and prepare the responses for those categories. Dialogflow will fuzzy match the message and send relevant response to the contact. To use NLP you must ensure that your chatbot is being used at a sufficiently large scale like with more than 3-5K contacts.

## [Exotel for calling](https://glific.github.io/docs/docs/Integrations/Setting%20up%20Exotel/)

If you want to include a functionality to call the user or receive a call from them at some point in the conversation flow on WhatsApp, then you can use Glific&#39;s Exotel integration to take relevant action for example based on a call, redirect them to the optin or any other flow or update their contact information.

## CRM or Tracker

A tracker aims to collect information about the individual users as per their journey on the chatbot. The tracker stores all information such as basic demographics, content they access, response to quizzes, points earned, progress or advancement across levels, most active time, drop off point and time and more. You can adapt the tracker as per your program design. As a result of the tracker, all of these will be possible:

- Personalized learning journeys and recommendations
- Learner‚Äôs profile even for shared contacts
- Send report cards
- Manage points and badges
- Improved analytics

What information would you want to collect from the users? - that would be the first step to an effective tracker. The needs of every NGO in terms of data points would be different, can the tracker structure be determined based on the information collected during the contact registration.

# Upcoming features

## Internal dashboard

So far NGOs have been using BigQuery and Data Studio to build their reporting dashboards but not all NGOs find that very convenient to use. Basic reports within the Glific interface are preferred. Now with enough evidence and report templates, we will be building a dashboard within Glific interface.

## Template reports advancement

We will work on advancements in data collected through conversation flows. This upgrade will allow Glific to collect more information in an automated way so as to reduce human error and chance of generating rich data dashboards.
> ### **2 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**

**Interactive Messages are used by NGOs to create engaging and dynamic conversations with their beneficiaries. This feature helps NGOs to go beyond simple text-based notifications and include interactive elements like buttons, quick replies, list menus etc. It enhances the user experience through guided interactions and helps the NGOs collect cleaner data.**
___
## Video Tutorial

<figure class="video_container">
  <iframe src="https://www.youtube.com/embed/4jFG4jCHcKI?showinfo=0" frameborder="0" allowfullscreen="true" width="800" height="500"> </iframe>
</figure>

<br />
<br />
This video is recorded with the old Glific UI
<br />

## Create Interactive Messages

1 . Login to Glific.

2 . From left menu list click on Quick tools and within it select 'Interactive msg` tab

<img width="198" alt="Screenshot 2024-03-15 at 10 20 33‚ÄØPM" src="https://github.com/glific/docs/assets/122982753/8fb89c14-f85c-48bd-b020-96760e566955"/>


3 . Click on `+Create` button on top right

<img width="1261" alt="Screenshot 2024-03-15 at 10 22 05‚ÄØPM" src="https://github.com/glific/docs/assets/122982753/0a6defdb-58c6-4433-af80-31e96252e3a0"/>


4 . Once the 'Add a new Interactive message' page opens, enter the below details- 

1) **Type** - Select the type of Interactive message you want to create

   <img width="499" alt="image" src="https://github.com/glific/docs/assets/122982753/eb9888d4-b346-4f57-9c31-dc2e1d6073b9"/>


&nbsp; &nbsp; &nbsp; **a) Reply buttons -** choose this option, when you wamt to give upto 3 choices to the user


&nbsp; &nbsp; &nbsp; **b) List Message -** Choose this option, when numbers of choices given to user are more than 3 (but upto 10) 


&nbsp; &nbsp; &nbsp; **c) Location Request -** Choose this option, when you want to request location from user through interactive message (button)


2) **Title** - Title of the interactive message for easy search in future (If you check the box below it, it will also be visible on top of the message for your user)

3) **Message** - The message content you want to send to the user

4) **Footer** - Add the message which you want to act like a subtext

5) The section next to Footer will differ based on the type of Interactive message selected.

&nbsp; &nbsp; &nbsp; **a) Reply buttons -**

&nbsp; &nbsp; i)  Enter the Text of first button option.

&nbsp; &nbsp; ii) Click on **+ symbol** and add text of the next button (and + again for 3rd button)

<img width="475" alt="Screenshot 2024-03-15 at 10 38 43‚ÄØPM" src="https://github.com/glific/docs/assets/122982753/043aa3da-c03c-4f75-bc53-4012142fe25d"/>

&nbsp; &nbsp; iii) Select the `Attachment Type` if you want to include an attachment.

&nbsp; &nbsp; iv) Enter `Attachment URL` to specify the URL of the attachment you want to include

&nbsp; &nbsp; &nbsp; **b) List message -**

i) Enter `List Header`- this is the text that will appear on the list button (see preview on right tp understand better)

<img width="475" alt="image" src="https://github.com/glific/docs/assets/122982753/efa23881-f6b8-4913-a036-937f9c38c65a"/>

ii) Enter Title of List  1 (you can see in the preview below how list titles and list items will be presented to the users)

iii) Enter Title of List 1 item

iv) Enter List Item description.

v) Click on `Add list item` option to add another list item

<img width="466" alt="Screenshot 2024-03-15 at 10 47 08‚ÄØPM" src="https://github.com/glific/docs/assets/122982753/5cf5d18b-e0ba-4425-b276-d5dab81a3093"/>


vi) Click on `Add list` option to add another list.

<img width="467" alt="Screenshot 2024-03-15 at 10 47 48‚ÄØPM" src="https://github.com/glific/docs/assets/122982753/96111a2d-98eb-4628-93b1-d70278bc3d66"/>


vii) Select the `Attachment Type` if you want to include an attachment.

viii) Enter `Attachment URL` to specify the URL of the attachment you want to include

&nbsp; &nbsp; &nbsp; **c) Location request -**

Add the message you want to send along with the 'Send Location' button

<img width="495" alt="image" src="https://github.com/glific/docs/assets/122982753/86d63427-dd8f-4a79-8e80-e5909d55b6e3"/>

6) **Tag** - Create/ Select a tag so that it is easy to categorize/ search in future

___
## Use Interactive Messages in Flow editor

1 .  Create a flow.

2 . While adding a new node, select `Send the contact an interactive message` action type.

3 . Use dropdown to select the interactive message that you had previously created.

4 . Click `Ok`.

![image](https://user-images.githubusercontent.com/32592458/218256081-178edb48-d4c4-46e5-9222-3adf40abbff8.png)

<br />

**Sample flow with Interactive Messages.**

![image](https://user-images.githubusercontent.com/32592458/218256086-bad2e657-459b-4dbb-8f3a-8fe700543d8d.png)

<br />

**Output on chat - how it looks post execution.**

![image](https://user-images.githubusercontent.com/32592458/218256096-676546e4-a8ce-4c76-b2c1-188520f0e82a.png)



![image](https://user-images.githubusercontent.com/32592458/218256104-fb6504c6-341a-4cd8-a0b6-ab4ce2f99c0f.png)

___
## Use Interactive Messages in different languages.

Please follow below steps to create Interactive Messages in different languages.

1 . Click on the `Edit icon` to open the interactive message you have to create in default  language.

![image](https://user-images.githubusercontent.com/32592458/218256115-878b9bd9-cb2a-4442-9b9c-a61668f778d5.png)

<br />

2 . Click on the language link from top right to add content in the specific language. In this example we are taking **Hindi** as a language



![image](https://user-images.githubusercontent.com/32592458/218256126-38597d6c-c55f-4a85-a197-2bf6b5c2fa39.png)

<br />

3 .  Enter the translated text in the fields

&nbsp; a) Title

&nbsp; b) Message

&nbsp; c) Reply button / List buttons details

![image](https://user-images.githubusercontent.com/32592458/218256130-29cab0ae-d517-4e40-880d-1ae154bc5f9b.png)



4 . Click on `SAVE` button.

![image](https://user-images.githubusercontent.com/32592458/218256133-0c585e0c-3ef0-46f3-9b47-f57aebd7ad61.png)



5 . The language specific interactive message will execute automatically for the contacts who has set  that specific language in their profile.

![image](https://user-images.githubusercontent.com/32592458/218256138-0ad16016-e48a-4b86-845f-2f8c668338ec.png)

![image](https://user-images.githubusercontent.com/32592458/219548841-af768dbb-b6dd-46c3-b285-a9641190f0aa.png)


___
## Reference Article

[Sending Interactive Messages - Meta Developer Docs](https://developers.facebook.com/docs/whatsapp/guides/interactive-messages)

___
## **Note ** 

> * Interactive messages once created either in the form of Quick replies or List, **cannot be changed**.

> * Markdown characters (*, \_ , i) are NOT allowed in Header and Buttons of interactive messages. It throws error &quot;**_Character policy violated_**&quot; (refer the screenshot below)

![image](https://user-images.githubusercontent.com/32592458/218256077-dc53759d-3d33-44b7-aa45-47c681d3477f.png)

<br />

> * **Emojis are NOT allowed** in the title field of interactive messages. Please avoid using emojis in the title field.
    ![image](https://user-images.githubusercontent.com/32592458/219548873-07c2d646-9ea3-48d9-ab97-3b50461053d6.png)

<br />

> * If emojis are used in buttons/responses OF Interactive Messages, please make sure to copy and paste the whole string along with emojis from interactive messages and paste it on `Wait for response`. You need to use `has only the phrase` option in `wait for response` to match the whole string for valid response.

![image](https://user-images.githubusercontent.com/32592458/219548863-077700e4-a2d8-473e-adbe-2a6adc0c59bd.png)

<br />

> * A maximum number of Quick Replies and List items are allowed by WhatsApp in the Interactive messages.

&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; **Quick Replies** - Maximum 3 Quick replies are allowed.

![image](https://user-images.githubusercontent.com/32592458/219548890-2ad7ec04-63c7-42bc-b86e-5c655141515e.png)

<br />

&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; **List items -** Maximum of 10 List items are allowed.

![image](https://user-images.githubusercontent.com/32592458/219548906-a675eab0-67d2-427a-98bc-838fb800b415.png)




> ### **2 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**
Speed Sends is a functionality in Glific to create a message or save the messages and reuse it in future chats.

## Create Speed Sends

1. Create a Speed Sends message. Go to `Quick tools`, find `Speed Sends` click on `+Create`

<img width="1445" alt="Screenshot 2024-02-29 at 1 22 27‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/bfa05e33-b5ab-4ebb-acf0-50f72a9ea7d9" />


2.  Fill in the details of the Speed Sends message.

    1. Select the language from the `Language Selection` tab in the top right corner to save the message in your preferred language.
    1. Type the title of the message in `Title` input field.
    1. Enter the exact message you want to send to users in the `Message` field.
    1. Select the type of attachment if you wish to attach any file with the message in `Attachment Type` field.
    1. Provide the URL of the message in the `Attachment URL` field.
 
<img width="552" alt="Screenshot 2024-03-04 at 2 29 04‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/daa77a08-91b7-4555-97bc-bfb89a067534" />



3. Click `Save` button to save the Speed send message.



4.  Go to the `Chats` window, to test the message you just saved.



5.  Click on the contact to whom you want to send the message.



6.  Click on up arrow given in the left of `Type a message` field.  From the pop up select `Speed Sends`.

<img width="993" alt="Screenshot 2024-03-04 at 2 45 05‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/d2663fe5-1f98-4422-8484-9f785ae1ee80" />



7. Click on the message you want to send.
<img width="993" alt="Screenshot 2024-03-04 at 2 48 05‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/cfac8d2e-3806-4521-a0df-d9b768da2610" />




8.  The message will be shown in the  `Type a message` field. Click on `Send` icon to send the message. You can edit the message, attach any file with the message, or simply remove it completely.

<img width="993" alt="Screenshot 2024-03-04 at 2 48 50‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/5d379492-3405-4520-8e8d-9ab72c4dcca5" />



## Save Speed Sends
1.  You can save any existing messages from chat from the little dropdown arrow shown next to the message. It will be saved in the Speed Sends list.

<img width="530" alt="Screenshot 2024-03-04 at 2 42 07‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/1979e9be-b117-4f02-805f-951c863d446e" />



2. Enter the title of the message and click on `Save` button.
<img width="429" alt="Screenshot 2024-03-04 at 2 41 30‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/a758345e-7c38-4dfd-9607-ce8b07009f5d" />


3. Verify the message saved in Speed sends

<img width="1289" alt="Screenshot 2024-03-04 at 2 42 52‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/4c759cfd-e762-4daf-b098-f40d159cc912" />
### **4 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**

**Glific provides search functionality to NGO staff to find contacts from a large set of contacts list.**
___

## Search contacts

1. Login to Glific and click on the `chats` menu from left panel.


<img width="200" alt="Screenshot 2024-03-04 at 1 26 51‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/c9dde783-262d-44f5-b95a-3a5c2eac793f"/>

2. You will find `search` option on the right side on the chats screen.

<img width="378" alt="Screenshot 2024-03-04 at 1 30 55‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/40ebf168-76ec-45a8-9eeb-3d96b880c63b"/>


3. You can type the `name` of the contact, `phone` number, any `message keyword` , or even message `tags`, that you feel is related to the contacts you want to search for.

4. Click on `X` icon to remove your search results.

<img width="1196" alt="image" src="https://github.com/glific/docs/assets/143380171/6d9ba85a-99d5-4e4c-aeae-d5a0232758b9"/>



<img width="376" alt="Screenshot 2024-03-04 at 1 42 26‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/4306e691-f5b9-4f9b-8e1b-fd22203f9e2b"/>


___
## Advanced Search

5. You can apply more parameters to refine your searches such as Keyword, tags, groups, staff and date etc... Click on `Advanced search` icon to get more options.


<img width="373" alt="Screenshot 2024-03-04 at 2 20 17‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/baa29cc8-163c-45d6-b8e6-b4cfcbda5cc7"/>



<img width="449" alt="image" src="https://github.com/glific/docs/assets/143380171/e3cd7685-34cc-4d88-8d02-870e048e8e5e"/>


6. Select the relevant options and Click on `Search` button.

<img width="460" alt="image" src="https://github.com/glific/docs/assets/143380171/d654e4d0-dfde-4945-a9bb-53686766491a"/>


7. Search results will be shown in the contacts list panel under search section. It will broadly show under Tags, Massages, Contacts.

<img width="373" alt="image" src="https://github.com/glific/docs/assets/143380171/8d813adf-05b2-484c-85a3-7eac35bd4e5f"/>


___
## Saved Searches

8. You can also save the search results to quickly access it in future. The saved searches are visible above the search box. Refer [Dynamic search for contacts in Glific](https://glific.github.io/docs/docs/Product%20Features/Dynamic%20search%20for%20contacts%20in%20Glific/) to know more about saving searches.



<img width="366" alt="Screenshot 2024-03-04 at 2 32 22‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/e5b5cac2-2d3b-45bf-8fd9-c859a01be40b"/>


___
# Dynamic Search

Search functionality in Glific provides you to search the contact not only on the basis of the name or phone number, but you can configure the search criteria and use it for future use.
___
## Default Searches

1. **All** - Shows all contacts.
1. **Not Replied** - Shows contacts list whose messages were read but not replied to yet.
1. **Not Responded** - Shows contacts who have not responded yet to the messages.

___
## Create new Search Criteria

1. After login click on the `Quick tools`and then on `searches` menu from the left panel.


<img width="198" alt="Screenshot 2024-03-04 at 2 36 29‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/9114054e-a282-4662-83d4-7e654c24b406"/>



2. Click on `+Create` button to create new search criteria.



<img width="989" alt="Screenshot 2024-03-04 at 2 44 02‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/cdfd5954-7ac0-4009-8019-9cdaeb2e812b"/>



3. Add the details of the search criteria in `Add A New Search` page.

    1. `Title` - Title of the search criteria you want to save with.
    1. `Description` - Description of the search criteria.
    1. `Name,Label,Keyword` - Any keyword you want to assign with search criteria.
    1. `Includes labels` - Select already created Tags from the dropdown to add them to this search criteria.
    1. `Includes Collection` - Select created Groups from the dropdown to add them to this search criteria.
    1. `Includes Staff`  - Select staff members from the dropdown to add them to this search criteria.
    1. `Date Range` - Select the date range, to search the contacts chatted within the specified date range. Use expression - You can use date expression for dynamic dates like ‚ÄòLast 2 days‚Äô instead two days between two fixed dates.

<img width="339" alt="image" src="https://github.com/glific/docs/assets/143380171/5959b42c-02d4-414d-b7d2-98b10f0ae3ac"/>


<img width="458" alt="image" src="https://github.com/glific/docs/assets/143380171/35eca667-948f-4c59-89d0-9f10c6434fa6"/>

4. Click on `Save` button.

![image](https://user-images.githubusercontent.com/32592458/212641785-7e858e13-3c17-49a6-9979-27a93a710961.png)


5. Verify the new create search in the list of searches for future use.


<img width="970" alt="Screenshot 2024-03-04 at 2 56 53‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/194d37fd-c054-40cb-bb96-204c46082695"/>


6. Click on the `Edit` icon or the ` Three Dots > More > Delete` icon to edit or remove the search


<img width="907" alt="Screenshot 2024-03-04 at 3 10 12‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/cb2d723c-f1f8-40f2-bb79-bc8e5355246a"/>



7.  To view Saved Searched click on `Searches` link from right pannel

<img width="323" alt="image" src="https://github.com/glific/docs/assets/143380171/595842b8-5730-4a8b-b6ce-50c2cc9bac23"/>



8. It will show the links to saved searches. Click on any of the saved searches it will show the list of contact which matched the criteria.

<img width="324" alt="image" src="https://github.com/glific/docs/assets/143380171/27d833c4-000b-4304-bf2f-699f68a7f684"/>

> ### **1 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**


___
## Notifications for System Errors

**Notifications for System Errors refer to the messages sent by the Whatsapp Business API to notify NGOs about any errors or issues encountered during the message delivery process. Check the notifications tab to know if there&#39;s any error while executing the flow or any other parts of the application.**

1 . Click on `Notifications`  tab from the `Left Panel`.

<img width="158" alt="Screenshot 2024-02-29 at 4 50 42‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/acf722be-1d42-488b-9e9c-b9af3dfbfb61" />


<br />

2 . Notifications page will open up with the list of errors and warnings thrown while executing the system, like executing the flows, GCS errors, Gupshup verification etc.

<img width="1279" alt="Screenshot 2024-02-29 at 4 51 42‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/3ec19223-01b1-4b69-bf1a-a7cd45e8b384" />

<br />

3 .  Click on the `Arrow` icon on top of the table headers to sort the list based on time.

<img width="1233" alt="Screenshot 2024-02-29 at 4 53 19‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/d1cbe952-9215-49dd-b04f-717c3c53dd84" />

<br />

4 . Click on `Critical` checkbox to view the Critical errors or click on `Warning` checkbox to view the warning errors. Critical errors need more urgent attention than the warnings, so you may want to keep a tab on those.
<img width="1281" alt="Screenshot 2024-02-29 at 4 55 26‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/53502999-a935-4734-bb6f-588f0d1e1f44" />


5 . Click on the `Right Arrow` icon in the log to go to the flow or message or the section of the application which is linked to the error.
<img width="1272" alt="Screenshot 2024-02-29 at 5 02 23‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/4ae8b890-c818-4a15-9710-af92178cfbf3" />

> ### **6 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**

**HSM (Highly Structured Message) templates are pre-approved messages by Whatsapp which are used to send to the users when their session window is closed (i.e after 24hours of inactive conversation). These templates ensure compliance with WhatsApp's guidelines and allow NGO's to send notifications, customer support messages and alerts with placeholders for personalized information.**
___
## Prerequisites
- [Flow Variables](https://glific.github.io/docs/docs/category/flow-variables)
- [Glific Simulator](https://glific.github.io/docs/docs/Product%20Features/Others/All%20product%20features/#simulator)
___
## Video Tutorial


<iframe width="800" height="500" src="https://www.youtube.com/embed/K_d3kYzg_Ec" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<br />
**Please note- **This video is recorded with old UI


## HSM Template Creation & Approval Submission

1. Login to Glific and click on the `Quick tools-->Templates` option from left panel

<img width="213" alt="image" src="https://github.com/glific/docs/assets/122982753/5038931a-5b99-4642-addb-3fb9c452c4fb"/>
<br />
2. Click on `+ CREATE` button from the top right corner of Templates page.

<img width="1275" alt="Screenshot 2024-03-06 at 2 47 56‚ÄØPM" src="https://github.com/glific/docs/assets/122982753/41ae94bf-8bea-4473-ac9b-f6f8638ca94a"/>
<br />
<br />

3. `Add A New HSM Template` page opens up.

<img width="1290" alt="image" src="https://github.com/glific/docs/assets/122982753/91f1e60a-1075-4f6c-b863-177f55901549"/>
<br />
<br />

4. Fill in the following details in the form.
   1. `Is Active` the check box is by default checked. Keep it checked.
   1. `Language` - Select the language from the dropdown you want in your HSM template message.
   1. `Title` - Enter the name you want for your HSM Template as it would appear in Glific (It should be what use case does this template serves eg. OTP, Optin, Activity Preference).
   1. `Message` - Type the message you want to send to users in this HSM template. You can use Variables and interactive actions in your message. Follow the syntax below in your message.
      Variable format - **{{1}}**
      Button format - **[Button text, Value]** (where value can be **URL** or **phone number**)
   1. `Sample message` - Replace the variables in the message content with actual values to show a complete message.
   1. `Category` - Select the most relevant category from the dropdown. Ex. Utility, Authentication & Marketing etc‚Ä¶
       (for more info please follow : https://developers.facebook.com/docs/whatsapp/updates-to-pricing/new-template-guidelines)
   3. `Element Name` - The name of a template that is unique for a WABAs namespace. Ex. support, backend ops, marketing, etc.

___
## Buttons in HSM Template

You can use `Add Buttons` checkbox to use buttons in HSM templates.

<img width="467" alt="image" src="https://github.com/glific/docs/assets/122982753/2fa202d1-5d6c-4f3c-b3dc-bbf2231bba95"/>
<br />
**Note:-** Phone numbers without country code (for example Exotel numbers) will be added in HSM as an `Call to actions` option. As a workaround, you can add these numbers in the body of the message.

<img width="518" alt="image" src="https://github.com/glific/docs/assets/122982753/ef4b3792-4d95-4c71-bb75-418e90653806"/>

![image](https://user-images.githubusercontent.com/32592458/212646161-fd0cf852-8e80-4b93-94d0-6d8f2eba5fd2.png)
<br />

### How to use Dynamic URLs in Buttons

Add a variable like {{1}} at the end of the URL and add it to the **Call to Action** option

<img width="484" alt="image" src="https://github.com/glific/docs/assets/122982753/6f730ad0-0e98-41b0-a4be-36d9d5d3ea9b"/>

<br />

___
## Attachments in HSM Template

The below fields (Attachment Type & URL) are optional. it needs to be filled only if an attachment is required to be sent in the HSM template to the beneficiary.

The attachment URL is the sample URL, the exact attachment URL could be added while [configuring the HSM template in the flow](https://glific.github.io/docs/docs/Flows/Flow%20Actions/How%20to%20use%20HSM%20template%20messages%20in%20your%20flows/).

    1. `Attachment Type` - Select the attachment type if you wish to send an attachment in your HSM template message Ex. Image, Audio, Video, etc...
    2. `Attachment URL`- Paste the attachment URL ( public URL) from the GCS bucket. Refer [How to upload files on GCS?](https://glific.github.io/docs/docs/Integrations/How%20to%20upload%20files%20on%20GCS/) to copy public URL from GCS
<br />
Notice a simulator available in the form, as you will fill in the details of the HSM template, it will start previewing the message. Simulator helps you to get an idea about how the message will look like when the contact receives it.

<img width="365" alt="image" src="https://github.com/glific/docs/assets/122982753/b9aee8df-29bd-41cf-bdcb-1742ffabd6c7"/>
<br />
1.  As discussed above, click on `SUBMIT FOR APPROVAL` button to send the HSM template for approval.

<img width="468" alt="Screenshot 2024-03-06 at 2 57 02‚ÄØPM" src="https://github.com/glific/docs/assets/122982753/a2c7928f-0b97-4231-bb25-48afa8a50796"/>
<br />

2.  Generally it takes a maximum of 48 hours to get approval from WhatsApp. Once you get your message approved, you can start sending it to your contacts. Verify that the `Status` of your message has turned **Approved** from the `Templates` page

<img width="1243" alt="image" src="https://github.com/glific/docs/assets/122982753/e14e89c0-b8fe-439d-9a84-03679790d858"/>
<br />

___
## How to use HSM Templates in your flows

Common messages used in flow are session messages, which are open to send only within the 24 hours of users sending a message. If beneficiary responds within 24 hours, the session remains active. After 24 hours NGO users cannot send messages on chat bot to the beneficiary, until they send some message from their WhatsApp.

Remaining hours of session messages expiry can be checked from contact list under search section in left pane.

<img width="346" alt="image" src="https://github.com/glific/docs/assets/122982753/7d324148-21c7-4619-a40b-b166556bd2db"/>

WhatsApp provides HSM templates which can be sent after the 24 hours. These templates needs to be approved from WhatsApp before they can be used in the conversation. Please refer [HSM Templates](https://glific.github.io/docs/docs/Product%20Features/HSM%20Templates/) to know more how to create HSM templates in Glific.

You can use approved HSM templates in your flow, to send to multiple users automatically.

1 . Select `Send Message` action type in the node.

2 . Click on `WhatsApp` tab

![image](https://user-images.githubusercontent.com/32592458/218255870-dea659b0-421f-4383-a65f-9dbdd500eb00.png)

3 . Select the HSM template you want to send from the dropdown list. Refer [HSM Templates](https://glific.github.io/docs/docs/Product%20Features/HSM%20Templates/) to know more about how to create HSM templates.

![image](https://user-images.githubusercontent.com/32592458/218255877-26f48828-88d1-497c-96c3-f4f339d5a529.png)

4 . Select the `variable` names to replace in the HSM template.

![image](https://user-images.githubusercontent.com/32592458/218255890-c2071b37-0312-457c-ae32-297d88a2a18e.png)

5 . Click on `Ok` button.

6 . Now when the flow will be executed this HSM template message will be send to the contact and will not expire in 24 hours.

![image](https://user-images.githubusercontent.com/32592458/218255903-8e46afe9-8228-4aed-b18a-70f6c4a14a0b.png)

___
## Sending HSM Template to Contacts

Go to `Chat` window and to the particular contact to whom you want to send message. Click on upward arrow in the message box and click on the `Templates` tab there. You will see the message in the list of approved template messages. Select the message and send it to your contact.

<img width="931" alt="image" src="https://github.com/glific/docs/assets/122982753/7e946b65-3fde-4635-bfa1-1ca9df1f22f6"/>
<br />

___
## Multi-lingual HSM templates

Glific has added a support to apply HSM messages for multiple templates by obtaining approval under the same element name.
When the templates are already approved, simply add it in the default language, and other languages will be automatically tagged since the element name remains consistent.

 
**Example**

1. Create a template in English and get it approved.
1. Create a template in another language like - Hindi. Use the same title.
1. Now when adding the template in flow, you can add English template in default language flow. If contact selects a different language (Hindi), then the Hindi version of HSM will be send to the contact. It chooses the language specific HSM automatically based on the selection of language by the end-user.

**English**

<img width="519" alt="image" src="https://github.com/glific/docs/assets/122982753/9dd09ff5-61f4-46d9-a43f-fe5c04ac0711"/>

**Hindi**

<img width="499" alt="image" src="https://github.com/glific/docs/assets/122982753/1caa0cca-ad18-439a-9204-59658600e5b5"/>

___
## Bulk Apply HSM Templates

Multiple templates can also be applied by using Bulk Apply HSM templates using Google Sheet

1. Open this sample [Google Sheet](https://docs.google.com/spreadsheets/d/1x04wI9palh1Ag11TrdBbUj9pnyNOw8-I4834qN3idik/edit#gid=0)

2. Click on `File` and then `Make a copy` to create a copy of the sheet
   ![image](https://user-images.githubusercontent.com/40158831/218453349-087e3e8a-bc55-4ce2-9b8a-301a8c0fbefe.jpeg)
   

3. Fill in details for templates in rows. Here's what each column represent in the sheet

   1. `Language:` Select the language from the dropdown you want in your HSM template message.
      `Title:` Enter the name you want for your HSM Template as it would appear in Glific (It should be what use case does this template serve eg. OTP, Optin, Activity Preference).
   1. `Message:` Type the message you want to send to users in this HSM template. You can use Variables and interactive actions in your message. Follow the syntax below in your message.
      1. Variable format - **{{1}}**
      1. Button format - **[Button text, Value]** (where value can be **URL** or **phone number**)
   1. `Sample Message:` Replace the variables in the message content with actual values to show a complete message.
   1. `Element Name:` The name of a template that is unique for a WABAs namespace.
   1. `Category:` The category of HSM template. Values can be either UTILITY, MARKETING or AUTHENTICATION.
   1. `Attachment Type:` The Attachment type of template can be either image, video or document
   1. `Attachment URL:` The Attachment URL should be public URL of a file that follows these facebook [guidelines](https://developers.facebook.com/docs/whatsapp/on-premises/reference/media)
   1. `Has Buttons:` If the template has buttons, change the value from dropdown to `TRUE` else `FALSE`
   1. `Button Type:` Button Type can be either `CALL_TO_ACTION` or `QUICK_REPLY`
   1. `CTA Button 1 Type:` When button type is `CALL_TO_ACTION` this can be either `Phone Number` or `URL`
   1. `CTA Button 1 Title:` Text that would appear in button e.g. `Call us here`
   1. `CTA Button 1 Value:` Value of button e.g. Phone number
   1. `CTA Button 2 Type:` When button type is `CALL_TO_ACTION` this can be either `Phone Number` or `URL`
   1. `CTA Button 2 Title:` Text that would appear in button e.g. `Visit us here`
   1. `CTA Button 2 Value:` Value of button e.g. `https://glific.org/`
   1. `Quick Reply 1 Title:` Add Text that would appear on first button when button type is `QUICK_REPLY`
   1. `Quick Reply 2 Title:` Add Text that would appear on second button when button type is `QUICK_REPLY`
   1. `Quick Reply 3 Title:` Add Text that would appear on third button when button type is `QUICK_REPLY`

4. Click on `File` -> `Download` -> `Comma Separated Values(.csv)` to download sheet in csv format

![image](https://user-images.githubusercontent.com/40158831/218453739-24972a87-534b-4535-a785-76ce4722fee3.jpeg)
<br />

5. Go to `Templates` screen, click on `BULK APPLY` and choose the downloaded csv file.

<img width="1278" alt="Screenshot 2024-03-06 at 3 08 02‚ÄØPM" src="https://github.com/glific/docs/assets/122982753/4511bd3a-806a-4b5c-8e5b-e68719fe86f2"/>
<br />

6. Templates will be applied and will create a new CSV file with the status of each template.

![image](https://user-images.githubusercontent.com/40158831/218454345-d0e80605-335f-4078-8782-613a96873cae.jpeg)

___
## HSM templates limit

By default, there is a **limit of 250 HSM templates per phone number**. If incase more HSM templates are required, then you need to submit a request to WhatsApp to increase the limit.
<br />
___
## Suggestions to get the HSM template approved

1. **Avoid doing** - Hi, here are the activities for today. We hope you complete them by the end of the day and submit them.
1. **Instead do** - Hi @nameofperson, following are the activities we have assigned for you and we hope you can complete them and submit them by the end of the day. Thank you.
1. Keeping the **_messages personal and interactive_** with an old beneficiary helps in the approval of the HSM template.
1. GCS **_attachments link should be public_** and working for the beneficiary to access it.
1. **_Use absolute URL_** in HSM text. Short URLs don&#39;t work and the template got rejected with an error message &quot;Invalid format&quot;
1. **Emojis are not allowed** in HSM buttons. If you add emojis the template will be rejected.
1. **GIFs are not allowed** in HSM attachments. If you add Gifs as an attachment, it will be rejected.
<br />


## Sync the HSM messages from Gupshup- 

1. Sometimes it takes time to sync from Gupshup to Glific. To sync it instantly sync, click on `Sync HSM` at the top of the page, 

<img width="1290" alt="image" src="https://github.com/glific/docs/assets/122982753/5c3459a8-8f59-443d-a0f7-94c08d562c34"/>
<br />


## How to check the reason for HSM rejection.

1 . Log in to Gupshup ([https://www.gupshup.io/](https://www.gupshup.io/)).
<br />

2 . Click on the `setting` Icon of your app.

![image](https://user-images.githubusercontent.com/32592458/212646256-0c2b8344-fd51-4799-9864-ba3bdd7aa782.png)
<br />

3 . Click on `manage templates` button .

![image](https://user-images.githubusercontent.com/32592458/212646283-dd377e27-519d-428f-8cdd-9355b53a9480.png)
<br />

4 . Scroll down to the template you want to check. on the right top corner, check the section `Rejected by WhatsApp`.

![image](https://user-images.githubusercontent.com/32592458/212646394-dbc4f9ef-3014-4f8d-807f-fc97064bf37f.png)
<br />

If there are further any queries about the template getting rejected. Please check the below link to know some of the possible reasons why the HSM template must have gotten rejected.

[https://developers.facebook.com/docs/whatsapp/message-templates/guidelines/](https://developers.facebook.com/docs/whatsapp/message-templates/guidelines/)

**Note** - The HSM templates need to be in one language. Do not mix the languages in one template (Ex. words of both English and Hindi language should not be in one HSM template).
___

## Tags

HSM, HSM Messages, Template, Template Messages, Bulk Messages, Bulk HSM Upload, Bulk Applying of HSM Messages
There may be a need to keep a counter in a flow, to keep track of how many times an action is performed or for other purposes.

One can create a variable (refer to [Flow variables vs Contact variables](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Variables/Flow%20variables%20vs%20Contact%20variables) document to know more about how variables are created in a flow.)and increment it with expression.

1 .  Initialize the variable with an update contact node.

![image](https://user-images.githubusercontent.com/32592458/219549880-09d87622-c9af-47ae-a805-444ebad0b59a.png)



2 . Use the update contact node to create a variable and in the result section add 1 to increment the counter.

In this example, a variable **counter** is created and in the result section, it is incremented by 1. (  `<%= @contact.fields.counter+ 1 %>`)

![image](https://user-images.githubusercontent.com/32592458/219549894-df6cc95b-ceb0-4a14-bd84-5d6e02ac99a7.png)



The value of the variable counter can be fetched anywhere with syntax `@contact.fields.counter`

Split By expression node to check how many times the counter has been incremented.

![image](https://user-images.githubusercontent.com/32592458/219549910-66d9af32-4f00-48d8-8809-d72b5b2d0f4f.png)

Then in the flow, you can use it anywhere where you want to repeat things. One of the common use cases is when you nudge the users in case of no response.



![image](https://user-images.githubusercontent.com/32592458/219549928-b51c2294-8b4c-4412-ba35-48c6bb13140f.png)
> ### **1 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;`Intermediate`**

___

**Below is the list of default contact variables which can be used without defining it explicitly.**

## Default variables

Values for below variables are by default updated when contact is created in the system.

- `**name**` -  Can access the value of it in flow, referencing it by `@contact.name`
- `**phone**` - Can access the value of it in flow, referencing it by `@contact.phone`
- `**id**` - Can access the value of it in flow, referencing it by`@contact.id`

Below variable values will be updated once the user provides the response in the flow.

- **language** - Can access the value of it in flow by `@contact.language`
> ### **2 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;`Intermediate`**

___
**There are two types of variable substitution you can use in flow editors :**

1. Flow level (`@results`)
1. Contact level (`@contact`)

Going by the basic definition`@results`can be used only on a particular flow and`@contact`variables can be used in any flow. Let‚Äôs see some use cases.

You may want to store the value/input received from contacts and then use it as a variable especially when sending a message/flow to a large scale of users ex. Hi `@contact.name`.

These variables can be used on a flow

or

can be fetched and used in another workflow.

- To use the variable value in the **same workflow** use _@results.field.input_ in `Results` field in `Wait for response` node or use it in `send message` node to view the value in the chat flow.
- To use the variable value in **another workflow** use _@contact.field.fieldname_ in any other work flow in `send message` node to view the value in the that chat flow.

Example use case: Suppose in the Registration workflow where you get a contact to register with your NGO, you ask for basic contact details for registration.

![image](https://user-images.githubusercontent.com/32592458/219549246-2b433c68-3785-406f-8db7-d5b7faac5fe5.png)



## Registration Flow

Sample workflow to get graduate students to register for advanced classes.

![image](https://user-images.githubusercontent.com/32592458/219549260-7fd2c7e9-1a79-4e99-a820-4bbfa593e5f2.png)



In this example, the contact information has been captured in the below variables (note the ‚Äòwait for response‚Äô blocks). This will show the value of the variables entered by contact in the flow.

- `@results.contact_name.input`
- `@results.contact_email.input`
- `@results.college_name.input`
- `@results.college_year.input`

If you want to show the category of the variable, then you can use `category` in place of `input`

- `@results.contact_name.category`
- `@results.contact_email.category`
- `@results.college_name.category`
- `@results.college_year.category`

![image](https://user-images.githubusercontent.com/32592458/219549272-4dc805c2-06ea-4a68-915d-621b148cf15c.png)



## Survey Flow

The second workflow has been created to get the feedback of the students who have attended the classes.

In this workflow, the feedback and sending the responses back to the user who has participated in the survey has been captured. The contact information which was saved in the Registration workflow can also be fetched here and used in the responses.

Contact information is fetched with the below syntax for required variables,

- `@contact.fields.contactname`
- `@contact.fields.email`
- `@contact.fields.collegename`
- `@contact.fields.collegeyear`

![image](https://user-images.githubusercontent.com/32592458/219549290-fdc21f0b-1fc7-4df8-92d0-3d998fdbae32.png)
In Glific, one flow can be linked to another flow. The main flow in this case is the parent flow and the linked on is the child flow.

Variables defined in Parent flow can be accessed in child flow and vice versa.

In below example, two flows are created.  We will see how to access variables across flows.

1. Parent 
1. Child

## Access variable in child flow, which was defined in parent flow

Parent flow has variable defined with name **state**

1 .  Create a flow (parent).

![image](https://user-images.githubusercontent.com/32592458/219549692-b9b5735d-922f-4bc3-9b4d-493cd84d7104.png)



2 . Define a variable. In this example the variable name is **state**

![image](https://user-images.githubusercontent.com/32592458/219549706-72093f4e-4a7b-4a4f-99c8-8218018f5d50.png)



3 . Call another flow (child)

![image](https://user-images.githubusercontent.com/32592458/219549721-6d9d8cdf-b1af-49a0-a6b4-26c0d298c89e.png)

4 . Access variable created in parent flow.

Syntax to access any variable of parent flow is _@results.parent.variablename_ like in this example the variable name is **state** . The syntax will be **_@results.parent.state.input_**

![image](https://user-images.githubusercontent.com/32592458/219549735-a89536fb-7187-4ad1-a6a1-f005181a5343.png)



## Access variable in parent flow , which was defined in child flow.



1 .  Define a variable in child flow. In this example the variable name is **City**

![image](https://user-images.githubusercontent.com/32592458/219549749-27a91865-83f0-48da-886d-c4e5e2c4081f.png)



2 . Access the variable in parent flow.

Syntax to access any variable of child flow is _@results.child.variablename_ like in this example the variable name is **city** . The syntax will be

**_@results.child.city.input_**

![image](https://user-images.githubusercontent.com/32592458/219549766-f7d925cf-09ac-4d35-9ae1-c9b508d2f8c1.png)



**Your Parent and Child flows will look like this**

**Parent Flow**

![image](https://user-images.githubusercontent.com/32592458/219549782-97347216-eba5-47a9-a6a6-c3df1b4b1ef6.png)



**Child Flow**

![image](https://user-images.githubusercontent.com/32592458/219549799-7dbb76b1-f309-469e-9a64-5eed90261fb6.png)



**Flow results will look like**

![image](https://user-images.githubusercontent.com/32592458/219549815-42074db1-9540-4fda-afcd-88339441b013.png)
> ### **2 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**

___

**To know which all variables are created by you in flows, please check the **View contact variables** link at the bottom of the flows screen.**

## View Contact Variables

1 . Login in your Glific account.

2 . Click on `Flows` link from left menu list and go to `Contact variables`

<img width="1462" alt="Screenshot 2024-03-04 at 3 39 09‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/f529c42b-1d99-4a0b-a5f8-bd9204775a61"/>



4 . `Contact variable` page will open up with the list of variables created in your account.


___
## Variable Details

1 . Each variable will show below details

a. **Variable Name :** Shows name of the variable with complete syntax to  use in flow.

Ex. **_age_group_** variable is shown as **_@contact.fields.age_group_**

b. **Input Name :** Shows the name by which variable is saved in the BigQuery

c. **Short Name :** Shows the short name of the variable.


___
## Variable Actions

1 . Click on `edit` icon next to Input name or short name to edit it.


<img width="1288" alt="Screenshot 2024-03-04 at 3 40 52‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/1cb5fdbc-520f-4b48-ac35-d620aa0b466d" />


2 . After edit click on `green tick` icon to save it.

<img width="496" alt="Screenshot 2024-03-04 at 3 41 24‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/c44131d0-e2c1-4031-bc9b-ed70a14210c5" />


3 . Click on three dots on the right and select `delete` to delete the variable form the system.


<img width="1278" alt="Screenshot 2024-03-04 at 3 41 58‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/62bc8654-eeea-43d2-b3a2-d6262dfb9b5e" />

4 . Read the pop up carefully before selecting an option to proceed with

<img width="449" alt="Screenshot 2024-03-04 at 3 42 51‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/ef809c81-1fff-42fa-b383-d0ee682861ca" />

___
## Search Contact Variables

1 . On top right corner find the search input box.


2 . Enter the **Variable Name**, **input name** or **short name** to search the contact variable.


3 . Click on `search` icon to get the search result.

<img width="1262" alt="Screenshot 2024-03-04 at 3 44 31‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/849bbe69-3e2d-466a-aee7-e72575e6df1d" />



___
## Add new Contact Variable

1 . Click on `Create` button on top right corner.


2 . Enter Input name and Short name of the variable.

<img width="466" alt="Screenshot 2024-03-04 at 3 46 14‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/ac561b05-0c4d-4c26-a235-971a348c4ed5" />


3.  Click on `Save` button. You will get confirmation message.


4 .Verify the new variable created in the list of variables.

<img width="1278" alt="Screenshot 2024-03-04 at 3 46 53‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/de853fc9-41d9-42a6-8a44-57ee913f05da" />

> ### **2 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**

___
**There may be a requirement to  send automated messages other than the regular flows they&#39;re accessing or manual interaction happening with them. Such as when you want to keep sending weekly/bi-monthly activities but also have the interact with the bot on a daily basis. For this, you can plan your activities as a background flow while other flows remain as it is.**

So, you can create that flow and mark it as  `Run this flow in the background`

Note: Background flow cannot have `wait for response` node, as this flow will execute in the background and may conflict with other flows hence, you shouldn&#39;t  expect any response from user for those.

If you need a flow with user responses, then create a normal flow and uncheck `Run this flow in the background`



## **Create Background flow**

1 . Create a flow.

2 . Configure it with messages the way you want.

3 . Save it.

4 . Go to the edit screen for that flow.

<img width="1209" alt="Screenshot 2024-03-04 at 4 05 04‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/4074aa00-299d-447f-88b5-072afcc15208" />


5 .  Mark the check box `Run this flow in the background`


<img width="448" alt="Screenshot 2024-03-04 at 4 05 32‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/78ffef15-1997-4248-a427-f469d85a3fa7" />


6 . Save it.

### **Background flows can be used :**

- to share some messages to number of contacts from collection.
- to share any information periodically with beneficiaries combined with triggers.
- to update specific states of beneficiaries in the system. (Ex. Update district of all  beneficiaries who are in one collection.)
### **2 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;`Intermediate`**

---

1. **Is the flow published?** If the desired result not showing while executing the flow. Make sure you have published the flow after modifying it.
1. **Check messages in all language**. If you are getting messages which you are not expecting. Please check if different messages are saved in other languages and check which language preference is user is having which you are using for testing the flow.
1. **Variable not defined properly.** If variables are not defined properly the flow will not give expected results. Refer [Flow level variable Vs Contact level variable](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Variables/Flow%20variables%20vs%20Contact%20variables/) for details about how to use variables in flows.
1. **Linked flow is not published.** The flow will not execute if any other flow is called from a flow and the other flow is not published.
1. **Web hook errors.** The flow will not give desired results if there is any error in the web hook call. Refer [How to check Webhook Logs in Glific?](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Call%20a%20webhook/#checking-webhook-logs) to know more about web hook logs.
1. **Flow should start with a Send a Message** - Flow should start with a message, so that it gives related message. Starting a flow with `Wait for response` action type will confuse if the flow has started or not.
1. **Ignore Keyword is checked or not? -** Check if `Ignore Keyword` is checked for the flow, which is currently executing for the contact. If Ignore Keyword is checked, then it will not allow to start another flow, if contact type any other keyword.
1. **Flow should be active** - Check if flow is inactive. Click on isActive check box and save to activate the flow.
   
<img width="491" alt="Screenshot 2024-03-06 at 1 14 28‚ÄØPM" src="https://github.com/glific/docs/assets/122982753/ba79de26-da01-4154-878a-8d113675fd62"/>

9. **Node** **placement**- There should be only single first node at the top in flow editor. All other node should be below that.

**Correct** **placement**

<img width="562" alt="image" src="https://github.com/glific/docs/assets/122982753/50d876b0-b195-44a9-9bf8-f190582a46ba"/>

**Incorrect placement**

<img width="561" alt="image" src="https://github.com/glific/docs/assets/122982753/82037741-9502-450e-8146-889931816ef4"/>

10 . **Ignore keywords** - Check if contact is already in a flow, which has `ignore keywords`implemented. If contact tries to strat flow with the keyword, in this case, it will not start the flow.

11 . **OptedOut** - check if a contact is not opted out. An easy test is to ask the contact to type optin and send it to the BOT (**Note, Your optin flow should always have optin keyword set to it**). See if it starts working.

Also, make sure, that the default optin message from the Gupshup portal is disabled.

12 . **Session Window -** Check if contacts are in the session window, to start a flow with them, if not make sure the flow is started with HSM (with an expected response). The same is true if the flow is started for a collection.

---

## Errors while creating Flow : This session will show you a few errors/ warnings you might get on Glific and reason for it.

<img width="925" alt="image5" src="https://user-images.githubusercontent.com/132430123/257415086-012cbfe4-26e6-4409-a0a6-5ffeb4a35c4c.png" />

1. `Could not find Sub Flow: Help Workflow` - The subflow was created and exists no more.

2. `The next message after a long wait for time should be an HSM template` - After `Wait for time`, it should be an HSM message. The same error will be shown when you tick `Continue when there is no response` checkbox and the delay set is 1 day or more.

3. `Could not find Contact: SaaS Admin`- When staff member added to Send Broadcast node is deleted but in the node it is not updated

4. `Could not find Sub Flow: Out of Office Workflow` - The subflow was created and no more exists.

5. `Could not find Group: Default Group` - When collection added to Add to Collection node is deleted but in the node it not updated

6. `Could not find Contact: NGO Staff` - The user created in the platform is deleted and no more exist in the platform

7. `Could not parse Group` - This looks similar to when collection added to Add to Collectionnode is deleted but in the node it is not updated.

8. `Your flow has dangling nodes` - There are some nodes that are not connected to any other node in the flow.

9. `Missing translations` - This error appears when translations are not added to all nodes (where at least one node has it). It's crucial to fix this to avoid confusing multilingual messages, and the message points out which node lacks translation.

<img width="443" alt="image" src="https://github.com/glific/docs/assets/122982753/b2244890-f01e-4ddd-89ea-fcaab0e5f283"/>

10. `Node Error Warning` - This error shows up if the node following an Interactive message isn't a `Wait for response`. The flow won't move forward for users without allowing them to respond after an Interactive message. Even though Glific automatically adds a `Wait for response` node after the Interactive message, manual removal of this can trigger the error.

<img width="440" alt="image" src="https://github.com/glific/docs/assets/122982753/36ad6863-e3f5-4c07-a1a3-84863bb83318"/>

11. `Trigger warning` - This warning arises if the flow's first node is a 'Send message' without an HSM template. Without this, messages to users not in the 24-hour session window might fail. Therefore, the first message in a flow should be an HSM message.

<img width="576" alt="image" src="https://github.com/glific/docs/assets/122982753/ffe050e6-8085-47e1-96e9-7ab15e7ca829"/>

12. `Media Template warning` - This warning indicates selecting a media attachment in an HSM template message but failing to attach an Image URL in the flow.

<img width="605" alt="image" src="https://github.com/glific/docs/assets/122982753/1393af27-b069-4d2c-b80f-61cbb6d45b7a"/>

---

## Logs to know if any errors are thrown while executing the flow

Refer [Notifications for system errors](https://glific.github.io/docs/docs/Product%20Features/Notifications#notifications-for-system-errors)
> ### **2 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**

___
**There may be a situation, where you want to identify which keyword started a flow or wanted to capture the keyword/sentence contact has sent to start a flow.**


You can use `flow_keyword` variables to get the information in the flow.

The syntax will be `@results.flow_keyword.input`

or you can use a `category` to get the whole sentence which contact has entered to start a flow.

The syntax will be `@results.flow_keyword.category`

For Example: Let's say you have a flow with multiple keywords like **key1, key2, key3** etc and you want to know what keyword actually triggred the flow. 

![image](https://user-images.githubusercontent.com/32592458/219549978-e6a49c55-346b-442d-bb45-62dd7b42e3e4.png)


![image](https://user-images.githubusercontent.com/32592458/219549992-62f0046b-f98c-45be-9e91-a12101444f15.png)



Note: If a staff member (User) initiates the flow for a contact from the dashboard, then @results.flow_keyword.category will either be null or return @results.flow_keyword.category as value.
While creating a program you might have a requirement to capture multiple answers for a single question. This requirement doesn&#39;t work with interactive messages but you can still use regular text to accomplish this.



For multiple answers, it&#39;s always better to add a note and an input example that will help users to know how to answer in the correct way. For example,

![image](https://user-images.githubusercontent.com/32592458/220826281-76ac0b42-35c1-49d3-8783-e3f62f3bde6f.png)



And the Wait For Response can be something like this

![image](https://user-images.githubusercontent.com/32592458/220826296-6cd90fe4-4f03-4eb5-8c1f-3f498316f7e4.png)



Your message flow will look something like this

![image](https://user-images.githubusercontent.com/32592458/220826307-aba044ec-1550-40ac-8add-e63bdeca3698.png)





## For Conditional Flow



If you want to create a conditional flow with multiple answers, you can create your program like this.



![image](https://user-images.githubusercontent.com/32592458/220826317-aacff5e4-ff75-4918-afe5-4765ec98d66c.png)



You can set the Wait For Response like this,

![image](https://user-images.githubusercontent.com/32592458/220826324-c19102ba-7cb9-457a-8434-15645628b409.png)



Your message flow will look like this

![image](https://user-images.githubusercontent.com/32592458/220826333-c172be29-8509-4445-b2bb-3da05ec99de4.png)
# Opt-in & Opt-out Flows

> ### **2 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;`Intermediate`**


**When any new beneficiary sends a message for the very first time,  the beneficiary can get an Optin message  to give their consent to receive the messages from the BOT. Likewise, the beneficiary also has the freedom to Optout from receiving anymore messages from a Whatsapp Chatbot.**

___
## Video Tutorial

<iframe width="800" height="500" src="https://www.youtube.com/embed/aVpAGV110D8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

<iframe width="800" height="500" src="https://www.youtube.com/embed/GHz-GClqZyE" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

In Glific NGOs can configure the `optin` and `optout` process in flows.

Glific uses `settings` variable to update the beneficiary&#39;s profile details in the system.

___
## Configure Opt-in and Opt-out in Flows

1 . Create new flow or use the existing flow in the system with name optin and optout.

2 . Craft a message to let the user respond to their optin preference.

![image](https://user-images.githubusercontent.com/32592458/218255930-26c3e106-17b3-4418-ad85-beb2f6b4bbe1.png)



3 . Get the response form the user.

![image](https://user-images.githubusercontent.com/32592458/218255933-0821f56a-7592-42a2-9308-5418f413ceb7.png)


___
## Opt-in preferences update

4 . On confirmation update the opt-in preferences for the beneficiary.

![image](https://user-images.githubusercontent.com/32592458/218255936-35f5a294-6bed-4a78-84db-7c2915b8af26.png)

___
## Opt-out preferences update

5 .  Create a flow for opt-out or use the existing flow in the system. Keywords for Optout flow could be  **optout**, **stop.** _(You can recommend us if you have better suggestions for the keywords)_

6 .  When beneficiary sends    **optout** or **stop**  keyword to BOT, Opt-out preferences will be set for the beneficiary.

7 . Yon need use **optout** value to update the `settings` variable .

![image](https://user-images.githubusercontent.com/32592458/218255941-ac0b6802-04b4-4c0d-8ab0-1b7f4c6cd4d5.png)



**Note** - Make sure to use optin as keyword of this flow. optin is a special keyword which will execute the flow to get contact&#39;s optin even if they are optedout

![image](https://user-images.githubusercontent.com/32592458/218255946-7a630532-d781-46a1-83e7-3eaf4bd15d6b.png)


___
## Sample Opt-in Flow

![image](https://user-images.githubusercontent.com/32592458/218255951-bddb16af-9d0c-40b4-ade7-facb564290c5.png)


___
## Reference Article

- [Get Opt-in for WhatsApp](https://developers.facebook.com/docs/whatsapp/overview/getting-opt-in/)

___
## Tags
- Optin
- Optout> ### **2 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;`Intermediate`**

---

**Allows Glific to auto translate content in the default language of flow editor, and have the translations populated in in the other languages enabled in the Glific instance.**

_The feature is in beta version and can be enabled/ disabled for any given organization‚Äôs Glific instance upon request in the [discord](https://discord.gg/CAUgdQsZAd) channel or via writing to spoc from the Glific team._

**Overview**

1. Create flow in default language
2. Have translations auto populated for all the languages selected in your Glific instance
3. Have the flow exported as CSV (with or without translations) to be proofread and corrected by language experts
4. Import translations as CSV
5. The process (automatic translations -> export translations -> import translations) chain can be used as a whole or in parts depending on your needs

**How it works**

1. Find top bar, go to `More` and find `Translate` button is in the flow editor
   
<img width="1314" alt="Screenshot 2024-03-04 at 4 17 12‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/6a70ea75-d40c-4a9d-919a-a6d18fc0536f" />


2. There are 4 options to get Translations
  
<img width="436" alt="Screenshot 2024-03-04 at 4 17 59‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/558e2974-c280-40ad-9cfd-1e6b2a4449d6" />

- `Automatic translation`: takes the content in the default language flow and adds translations in all the langauges enabled within the the flow. This changes the flow, publishing the after this step will modify the flow to have translations done 

- `Export with auto translate`: takes the content in the default language flow, adds the translations in the languages enabled and exports the flow and content as a CSV, for further proof reading/ correction work to be done by language experts. The flow is not changed, and the CSV containing translated content has to be uploaded via `import translation` for the translations to reflect in the flow. 

- `Export translations`: Exports the content present into CSV format. This can be used to add translations manually, and then import the CSV with translated content in the flow directly. Or to just export the already available translations of the flow for further proofreading and corrections.

<img width="732" alt="Screenshot 2024-01-29 at 5 20 30‚ÄØPM" src="https://github.com/mahajantejas/docs/assets/141305477/71d7bdc9-952f-4a43-866e-664ab30cdfce" />

- `Import translation`: This enables importing of the proofread and corrected content as a CSV and have the content in the given Glific flow updated.

**Things to watch out**

1. This is not instantaneous and will take some buffering time (5-7 mins) depending on the number of languages, the number of send message nodes and the amount of content in them
2. The default language flow has to be in English 
3. Only content present in `send contact a message` nodes from the flow are translated, which means at present - content in `‚Äúinteractive messages‚Äù`, `wait for response` nodes, are not translated.
4. For flows with high number of nodes, the translations may not happen completely in the first shot, doing it a second time will translate the remaining nodes
5. Exported CSVs of the flows without translations, can be auto translated, proof read and imported
6. While importing translations
- Do not change the formatting of the exported CSV
- Do not edit anything in the fields action, UUID, language codes 
- Uploading CSV with Blank/ Empty cells where translations are expected to be erases the translations in the given nodes (if the translations are already present)
7. In case automatic translations fail, which may happen for flows that contain large text messages (more than 200 words in the same node). In such cases, `export without translations` and then create translations using `=googletranslate` formula then `import translation`

<img width="737" alt="Screenshot 2024-01-29 at 5 20 41‚ÄØPM" src="https://github.com/mahajantejas/docs/assets/141305477/aa4b9057-3cbd-47ca-966c-d2fbf5549b06" />

**When it will not work**

1. Incase there is multilingual content flows in the default language 
2. Incase default flow is in a language other than English
3. Incase there are multiple `send contact a message` nodes with more than 200 words of text
4. Incase there are loads of active languages in the given flow
5. Incase of low connectivity
   
**Under the hood**

1. The translation is being done by GPT3.5 model. Glific is using this via Open AI API keys acquired and for the initial phase bearing the cost of token being exchanged. 
2. The system is designed in a way that in future, other translation engines ex- Google translate etc can be plugged in to replace the GPT3.5 model.
3. Requirement [docs](https://docs.google.com/document/d/1_bxakmNM3QQf--OxU3tRGmAsxy9MV56tsjrH3wLbPPo/edit#heading=h.719pbrrwuvy9) 
4. Showcase [ppt](https://docs.google.com/presentation/d/1gZDkBm9ybS2rZi2MX4vV6espf_3qMWRgM9YD5_JQ7Og/edit?usp=sharing)

> ### **3 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**
___

## Flow Listing Page
You will be taken to the `Flow Listing Page` on clicking the `Flows` tab in the Left Panel. All the Flows created will be listed here. 

## Flow Listing Page Buttons

1. **Configure -** The CTA buttons in `Flow Editor page` on clicking `Configure` are as follows :
    - **Save as Draft** : This lets you save a draft of the flow you just configured. This lets you save the progress whenever you make changes to a flow before publishing it. This will be helpful for testing out the changes you make in a flow.

    - **Publish** : By publishing a flow, you will be able to make a flow public. Anyone who prompts your chatbot with the correct keyword will be able to access your flow.

    - **Preview** : The Preview feature displays a Flow Simulator with the Whatsapp Interface. It shows the flow from the eyes of an end user and you'll be able to understand how the various nodes look like in Whatsapp. This feature enables you to test out your flows without needing to do it from your Whatsapp app in mobile or web.

    - **Revision History** : Version Control in Glific is enabled through Revision History. It creates a list of versions based on the changes you've made to a flow. If in case you end up having a faulty flow, you will always be able to go back and revert it to the last working version/ any version of your liking.

    - **Reset Flow Counts** : The reset flow counts will refresh the node and the  tracking of how many times a node was triggered for users.


2. **Make a copy** : This will help you to duplicate a particular flow.
3. **Export & Import Flow** : This feature will help you when you want to transfer some flow from one particular BOT to another. Read more details [here](https://glific.github.io/docs/docs/Product%20Features/Others/Import%20&%20Export%20Flows/)

4. **Edit** :
    - **Name & Keywords** : Assign any unique name and keyword to the flow.

    - **Ignore Keywords** :Once it is enabled, this feature restricts beneficiaries from entering any other flow apart from the active one, using keywords from another flow. You can read more about this [here](https://glific.github.io/docs/docs/Product%20Features/Others/Keywords/#ignore-keywords)


    - **is active?** : It is crucial to activate the flow.

    - **is pinned?** : will pin your flow so that it appears at the top of the Flow section for easy visibility

    - **Run this flow in the background + Background Flows** : Sometimes, you might need to send automated messages alongside the usual flows or manual interactions. For instance, you may want to send weekly or bi-monthly updates while also allowing daily interactions with the bot. In such cases, you can plan these activities separately in the background while keeping the other flows unchanged.
Read more [here](https://glific.github.io/docs/docs/Product%20Features/Flows/Others/Background%20Flows/)

    
6. **Delete** : The delete option will completely remove/ erase that particular flow from the flow list


## Create Flow :

 After selecting `+ Create Flow` you will be directed to the page where you can add a new flow.

<img width="622" alt="image" src="https://github.com/glific/docs/assets/143380171/756cfb56-8119-4eab-9e5e-b6f266785743"/>


The filter option  feature toward the left side under Flows heading will help to check the Active and Inactive Flows.

The upwards arrow will give the information on the descending order of the flows created, last published.
> ### **3 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Advanced`**
___

**Glific introduces multiple profiles, enabling efficient and personalized engagement with beneficiaries where a single phone number is used by multiple end users.  In this way, by segregating a single contact at the profile level, NGOs can significantly increase the impact of their work.**

___
## Sample Use Case

To achieve the multiple profiles feature, We added a new node called` Manage profile` with two choices at the flow level.

1. `Create Profile` creates a new profile for contact.
1. `Switch Profile` allows you to change between profiles.


# Create Profile
1.  Here's a sample flow with minimal configuration for creating a profile in Glific

![8](https://github.com/glific/docs/assets/90472056/e9d125d5-73fd-4c94-8ed8-00362ba9e1e7)

2. The initial node is the `Send Message` node, where the contact is prompted to provide their details such as name, role, or age to create the profile

![2](https://github.com/glific/docs/assets/90472056/5cb5141a-8452-4966-a57b-f788e4617973)

3. The second node is the `Wait for Response` node with the result name `demo_username`. The response from the contact will be saved in this result and can be referenced as `@results.demo_username`.

![3](https://github.com/glific/docs/assets/90472056/ae24afad-bf49-4066-a2aa-c977d54b2f88)

4. The third node is the `Interactive Message`, the user is presented with options to select their role, in the below sample case we have given the option to choose the role as student or teacher.
![4](https://github.com/glific/docs/assets/90472056/7eb71142-f078-4712-a555-303811b46b00)

5. Using the user information provided, the `Manage profile` node will create a user profile, and the relevant data will be saved in the result variables, accessible as `@results.demo_username` and `@results.demo_role` for future reference.

![5](https://github.com/glific/docs/assets/90472056/50632c81-d701-4e3f-8462-de5e8135d539)

6. Finally, the `Update Contact` node will update the contact with the relevant contact variables.

![6](https://github.com/glific/docs/assets/90472056/3352a26c-d473-4411-baff-c02273bd3bf8)

7. Upon profile creation, a message will be sent using the `Send Message` node, notifying the contact that "your user profile has been successfully created!"

![7](https://github.com/glific/docs/assets/90472056/f8df2640-bd4d-462d-8989-da706060669d)

___

# Switch Profile

1.  Here's a sample flow with minimal configuration for the switch Profile profile in Glific

![A](https://github.com/glific/docs/assets/90472056/a28c9453-948e-4399-a205-8414e7bb84ee)

2. The first node is the `Send Message` facilitates users in switching between different profiles by using the `@contact.list_profiles` to display all available user profiles.

![B](https://github.com/glific/docs/assets/90472056/858acf8d-a009-4a2e-9a31-9ac253337cb4)

Here's how the contacts will look like:

![photo](https://github.com/glific/docs/assets/90472056/8aa0ac0a-b002-4d42-a29b-353ef53a2e1d)

3.  The second node is the `Wait for Response` node where each profile will be numbered based on when they were created, first, second, third, and so on. The response from the contact will be saved in the result and can be referenced as `@results.profile_index`

![c](https://github.com/glific/docs/assets/90472056/ecac5c43-188b-4fa1-bab9-fa17b1aaf444)

4. We'll use the `Manage Profile` node to switch the user profile based on their response, using the `@results.profile_index`.

![photo](https://github.com/glific/docs/assets/90472056/67a91eff-ee57-4965-94c4-ab9d25b20ef4)

5. Once the switch is completed successfully, a message will be sent to the contacts using the `Send Message` node, notifying them that their profile has been successfully switched to` @contact.fields.demo_username`.

![e](https://github.com/glific/docs/assets/90472056/505e664a-282b-450b-a654-daf6241bc512)

___


**Tags**

Multiple profiles, create profile, switch profile, manage profile, update contact, Interactive Message> ### **2 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**
___

**Glific has some predefined variables to use. Organisations can also define their custom variables when needed. It is recommended not to have many custom variables defined. Anything under 20 is good number of custom variables.**

___
## Prerequisites
- [Predefined Contact Variables](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Variables/Predefined%20Contact%20Variables%20in%20Glific)
- [Flow & Contact Variables](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Variables/Flow%20variables%20vs%20Contact%20variables)

___
## Video Tutorial

<iframe width="800" height="500" src="https://www.youtube.com/embed/Y2KWDO7SfnI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

___
## Define Custom Variables

1 . Create or edit a flow.

![image](https://user-images.githubusercontent.com/32592458/219549357-fdac2a44-b638-49fc-b023-6b5bf9e6bff4.png)

2 . In `Wait for response` node define the variable name in `result name` section. In this example variable name is  **schoolname .**

**_(Note: Please use variable name in lowercase and it should be without any space in between two words. You can use underscore &quot;_&quot; if you want to put in the name)._**

![image](https://user-images.githubusercontent.com/32592458/219549375-5c7a340a-0ffd-49fd-920c-a180feef6ab2.png)

___
## Update the Contact 

1 . Next to `wait for response` node and another `update contact`node.

2 .  Enter variable name in `Select what to update` section.

We suggest to keep the variable name same to avoid any confusion. You can keep this name different also. **_Note - The value in the update contact will be save with this variable name._**

3 . Enter the syntax of the variable name defined in `wait for response`  section .  It should be written as **@results.variable name**. Like in this example it will be  `@results.schoolname`

4 . If you would like to store the category instead of the value, you can use **@results.variable name.category**. Like in this example it will be `@results.schoolname.category`

![image](https://user-images.githubusercontent.com/32592458/219549389-2d64835d-8671-4b04-94ce-5c9a53a61c39.png)

___
## Access Contact Update Variables

1 .  To access the updates value in the contact details you can use syntax `@contact.fields.schoolname`in the next node.

![image](https://user-images.githubusercontent.com/32592458/219549402-c53a79b1-a9f7-43fb-955c-64476b386f2f.png)



2 . Execute the flow and verify the updated value shown in the chat or simulator screen.

![image](https://user-images.githubusercontent.com/32592458/219549411-46e5b788-28b8-4b13-bf74-1a833cbcd53f.png)

___
## Tags
- Custom Variables <br />
- Update Contact <br />
- Defining Custom Variables### **3 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**

___

## Send the contact a message

It sends the message to the contact in the flow. You can also add variables in the content of the message to publish the value in the message. 
<br />

Refer [Flow level & Contact level variables](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Variables/Flow%20variables%20vs%20Contact%20variables) to know more about how to use variables in flow.

<img width="644" alt="image" src="https://github.com/glific/docs/assets/143380171/6da80418-254e-4dc9-9d4b-eac1f8c65025"/>


___
## Send media files in a Message

Glific users can **upload the media files directly from their computer**

or

**[Upload the files on GCS](https://glific.github.io/docs/docs/Onboarding/GCS%20Setup/Upload%20files%20on%20GCS)** and use the URL as attachment in multiple flow.

## Upload the media files directly from your computer.

1 . Open a flow from where you want to send the file as an attachment.

2 . Create a `Send message` Note.

3 . Click on `attachment` tab.


<img width="644" alt="Screenshot 2024-03-05 at 1 38 48‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/79a904b7-b24b-40af-ad1e-7da489a3cd07"/>


4 . Choose **upload attachment** option from dropdown


<img width="644" alt="Screenshot 2024-03-05 at 2 05 02‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/d9686a98-3521-452d-908c-1e91cd2aef68"/>



5 . Computer folders window will open up. Choose the file you want to upload.

**_Note :_** _WhatsApp business API_ **_doesn&#39;t support .gif files_** _to be send as messages. Use .jpeg or .png to send as an attachment. For more details please refer_ [https://developers.facebook.com/docs/whatsapp/api/media/](https://developers.facebook.com/docs/whatsapp/api/media/)

6 . After successful upload, option to **download** and **remove** the attachment will be shown.

7 . Click on `ok` button to save the attachment in the node.

![image](https://user-images.githubusercontent.com/32592458/218255061-1cea068d-c206-44b7-ba2a-217e1e61d687.png)

##

8 . Test the flow to verify the attachment sent with the message.

![image](https://user-images.githubusercontent.com/32592458/218255067-5df94168-f97a-456b-a73d-8a8231e74821.png)

**Note :-** To give a name to the attachment, Enter the name in the send message box. Other wise the attachment will be names ad NULL.

___
## Upload media file in GCS

1. Upload the file you want to send to the contact. Refer to the [integration with the GCS](https://glific.github.io/docs/docs/Onboarding/GCS%20Setup/Upload%20files%20on%20GCS/#upload-media-files-in-the-gcs-bucket) article for detailed steps.

![image](https://user-images.githubusercontent.com/32592458/218255076-94608d82-8ee0-4baf-9324-de902bbd1e33.png)

2. Copy the public URL of the image uploaded.

![image](https://user-images.githubusercontent.com/32592458/218255079-a502b011-d960-4236-8645-d619b8da1806.png)
___
## Send media file with dynamic file names

**Note** - _It will require a developers assistance to use this feature. Please check with your tech team or consult Glific team, if you wish to use this feature._

**Use case** :- `Expression` option is used in attachment, when there is a requirement to send media files with dynamic names.

For an example: The requirement is to send the map on the basis of the city contact belongs to.

1 . Upload map files of all cities in the GCS.

2 . Use the expression to pass the contact&#39;s city name in the attachment .

Syntax- `<%= "@results.city_name" %>.`

3 . In a flow, city map will be send as per the contact&#39;s city

Use `Expression` option from the dropdown, if media files name are needed to send with dynamic name.

<img width="646" alt="Screenshot 2024-03-05 at 2 08 43‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/00867879-fa27-4a09-9c42-604425960d83"/>

The value of expression will be a variable and the syntax used in is `<%= "@results.fieldname" %>`

![image](https://user-images.githubusercontent.com/32592458/218255093-f78abcd6-7502-4ab7-9db4-deca30c1a4dc.png)
___
## Attach the media file in a message

1.  While editing a flow, select `Send a message` node.

2.  Click on the `Attachments` tab.


<img width="644" alt="Screenshot 2024-03-05 at 1 38 48‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/96241266-864d-4963-a3c5-5aa467c0a64d"/>

3.  Select the relevant media file option from the dropdown and paste the URL copied from GCS.

**Note:** _google drive URLs will_ **_not_** _work in this attachment_


<img width="650" alt="Screenshot 2024-03-05 at 2 15 23‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/b469ff3d-4abf-49ca-acef-c871693353a0"/>


![image](https://user-images.githubusercontent.com/32592458/218255111-7fc55f48-74a4-4f49-b126-97bd4e694179.png)

4 . Click `ok` to save.
___
## Test the media message in the simulator

1.  Run the simulator with the `preview` button(bottom right) on the flow editor screen. Select the required response and you will see the media file in the simulator.

![image](https://user-images.githubusercontent.com/32592458/218255115-c412b26f-f9ad-46c8-a40b-2b3192e86674.png)

**Note:-** Need to **add some text in the send message node**, otherwise the attachment will not be sent through flows

![image](https://user-images.githubusercontent.com/16541548/210726298-2a705406-f00a-42fd-9826-56b8e5cac4ab.png)
___
## Size of image

Please use images of less than **5 MB**. It is the maximum size limit currently.

Maximum size limit

1. image file=&gt; **5.120 MB**
1. Video file =&gt; **16.384 MB**
1. Audio file =&gt; **16.384 MB**
1. Document file =&gt; **102.400 MB**
1. Sticker file =&gt; **0.09 MB**
___
## File Formats works

Please check the list of file formats that work in the below document. [https://developers.facebook.com/docs/whatsapp/on-premises/reference/media](https://developers.facebook.com/docs/whatsapp/on-premises/reference/media)

**Note: Stickers** - .webp ( **_Note:- Animated stickers are not allowed by WhatsApp_**).

WhatsApp supports stickers with a **dimension of 512\*512 px** only. It needs to be exactly the same.

![image](https://user-images.githubusercontent.com/32592458/218255148-973143ab-a092-47d9-984a-662da9e418b6.png)

___
## Store media files using GCS Integration

Go to your Google Cloud storage GCS account ([https://console.cloud.google.com/apis/credentials/serviceaccountkey](https://console.cloud.google.com/apis/credentials/serviceaccountkey)) to generate project API keys.

If you don&#39;t have an account in GCS please refer to [Create an account in Google Cloud Storage (GCS)](https://cloud.google.com/storage/docs/quickstart-console) to set up a new account in Google Cloud storage GCS?.

Below screens may get change by Google. Refer below article from google for more details. [https://cloud.google.com/iam/docs/creating-managing-service-account-keys](https://cloud.google.com/iam/docs/creating-managing-service-account-keys)

1 . At top Bar enter Service account. Select `Service account` from the drop down.

![image](https://user-images.githubusercontent.com/32592458/218255188-c6dc7c0a-843f-4e8e-b9fd-443744bebf26.png)

2 .  Click on `+Create Service account` link from top bar.

![image](https://user-images.githubusercontent.com/32592458/218255191-f3b0c425-878b-4874-9447-776b61e23f76.png)

3 . Enter the details.

    a) Serive account name

    b)Service account id auto filled.

    c) Description.

4 . Click on `Done`.

![image](https://user-images.githubusercontent.com/32592458/218255192-70bec877-205c-4c32-a895-3dfdd35d85af.png)



5 . Click on `Add Key` button.

![image](https://user-images.githubusercontent.com/32592458/218255199-d4d1c0dd-5fb8-4617-a825-bd8dde5d167a.png)



6 . Select `json` and click on `create` button.

![image](https://user-images.githubusercontent.com/32592458/218255204-8598019b-23bf-4ebe-b895-94cfa2a45a9a.png)

___
## Save the JSON in Glific to integrate

1. Save the JSON file downloaded and copy its content.
2. Login to your Glific account. Go to the `setting` option in Glific and click on **Google Cloud Storage**.

 <img width="185" alt="Screenshot 2024-03-05 at 2 19 54‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/b00ff5a1-c8fd-4e7f-a6dc-aed5ed4c9b15"/>



3. Click on the `is_active` check.

<img width="920" alt="Screenshot 2024-03-05 at 2 21 28‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/34d275f1-20f8-4401-b483-f919f1e01265"/>





4. Fill in the details from the downloaded JSON file.

    1. Paste the copied JSON content inside Goth Credentials input.
    1. Project Email as `client_email` in the JSON file.
    1. **_&quot;client_email&quot;: &quot;xxx@xxx.iam.gserviceaccount.com&quot;,_**  
    1. Bucket as the **bucket name** of the newly created bucket in the GCS dashboard

![image](https://user-images.githubusercontent.com/32592458/218255222-24334f6f-d437-4705-97c6-707e25528446.png)



5. Click on `Save` button

6. Once Credentials are set up, all media files will be synced in a bucket inside the uploads directory.

7. Now all the media files you will receive from the beneficiary contact (Via WhatsApp), will save in the Google cloud bucket in **uploads** folder.


![image](https://user-images.githubusercontent.com/32592458/218255243-9e5d9e3e-648e-43ac-8952-8b98d59339ce.png)

![image](https://user-images.githubusercontent.com/32592458/218255247-f5887a21-328b-4217-ac62-2d37a61f8d5f.png)
> ### **1 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Begineer`**

___
---

**On the basis of the response of the contact, you can save the contact in a collection which you have created earlier. This feature can be used for categorizing the various incoming contacts into separate buckets based on their divergent attributes**

---
## Prerequisites
- [Flows](https://glific.github.io/docs/docs/category/flows)
- [Collections](https://glific.github.io/docs/docs/Product%20Features/Others/Collections)

---
## Add Contacts to a Collection

1. Select `Add to Collection` type from the node. Select the collection in which contact needs to be added.


<img width="578" alt="image" src="https://github.com/glific/docs/assets/143380171/cf781020-0c71-4523-a91a-c82c13d5d844"/>



<img width="661" alt="image" src="https://github.com/glific/docs/assets/143380171/ee9daa0e-2d86-48c7-9e77-b878c6aad30b"/>



2.  Execute the flow.



<img width="1332" alt="image" src="https://github.com/glific/docs/assets/143380171/7372b655-ea8a-466b-85fd-dc8da8ef8628"/>



3. Verify the contact is added to the collection. Click on `Manage` menu from the left panel and then click `Collections`,`View Details` from the collection tile.

<img width="145" alt="Screenshot 2024-03-05 at 4 03 19‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/f6ad0fff-9af2-4437-a320-56a5ed94e02c"/>


<img width="1011" alt="image" src="https://github.com/glific/docs/assets/143380171/f3625904-d442-4d48-918e-0a6bff427fa0"/>

4. Once you click on `View Details` from the collection tile you will be able to find how many contacts are present in the collection.

<img width="1023" alt="image" src="https://github.com/glific/docs/assets/143380171/90dcb765-ab85-4acd-958c-9f99e252a7e9"/>

---
## Remove the contact from a Collection

**You can view how & when a contact was added or removed to a collection or any other contact related activity on Glific. You can check this information in the contact profile along with all the other contact related information.**

---
## Tags 
- Add beneficiaries to a Collection (automatically from a flow)

- Adding contacts to a collection
### **3 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**
___

In Glific, NGO users can create flows and communicate with their beneficiaries in a bot like experience using flows. Flows have different types of actions to send a message to beneficiary(ies) and receive responses from them.

## Video Tutorial : Collecting responses from Contacts

<figure class="video_container">
  <iframe src="https://www.youtube.com/embed/DnByQwiavmY?showinfo=0" frameborder="0" allowfullscreen="true" width="800" height="500"> </iframe>
  <br />
  **Please node-** This video is recorded with old UI
  
</figure>

___

Select action type from the dropdown in the node. Given below are the list of response types available to use. Anything else given in the response type defined will not be accepted as a valid response.

![image](https://user-images.githubusercontent.com/32592458/218254937-dbc26546-b91f-42a5-b819-6f8fdc70159c.png)





## 1. has any of the words

To accept the input if the words matches any of the words defined in the response criteria. you can add multiple words comma separated in response criteria. If user will respond any other word from the list it will be treated as valid response. For example : **Yes, Y, Ya, Yup** all of it will pass the criteria of the response in below response type.

![image](https://user-images.githubusercontent.com/32592458/218254942-31ac02f5-b6b0-4511-bc12-97ebd98fc898.png)

___

## 2. has all of the words 

To accept the input if the input matches exactly what is defined in the response criteria.
___

## 3. has a phrase 

To accept the input if the input  is present in the  response criteria.
___

## 4. has only the phrase

To accept the input if the input matches exactly what is defined in the response criteria.
___

## 5. has a number 

To accept the input if the response is in numeric. This will accept any number as a valid response. Any non numeric input will be treated as invalid response.

![image](https://user-images.githubusercontent.com/32592458/218254950-b354623d-580c-4990-926c-672a2c9dff6b.png)
___

## 6. has a number between

To accept the input if the number is in between the range defined in the response criteria. This option will accept numbers only given in the range. any number out of range will be treated as invalid response.

![image](https://user-images.githubusercontent.com/32592458/218254952-3a2feba6-e3dd-4791-99fe-5cbe3480b59d.png)
___

## 7. has a number equal to

To accept the input if the number matches with the number defined in the response criteria. This will accept only the number given in the criteria as a valid response. Any other response will be treated as invalid response.

![image](https://user-images.githubusercontent.com/32592458/218254958-be7e760c-f753-4bd4-9fa1-5fa615c5920d.png)
___

## 8. has a phone number
To accept the input if the response is a valid phone number. It accepts mobile and landline numbers

- 10 digit Mobile number (**XXXXXXXXXX )**
- 10 digit Mobile number with 0 prefix (**0XXXXXXXXXX),** 
- 10 digit Mobile number with country code prefix (**+91 XXXXXXXXXX),** 
- landline number with (**XXX XXXXXXX**)
- landline number with 0 and state code **(0XXX XXXXXXX)**
- landline number with with country code prefix **(+91 XXX XXXXXXX)**



![image](https://user-images.githubusercontent.com/32592458/218254963-bb1cfb6e-1aad-4295-bb90-9d38aadcfe28.png)
___

## 9. has an email 

To accept the input if the response is an email address.

Valid emails

- abc@xyz.xx
- abc@xyz.xxx
- abc@xyz

![image](https://user-images.githubusercontent.com/32592458/218254966-4d0bd078-6a63-486a-8cec-2fc48bfcb0f7.png)
___

## 10. has media 

### Video Tutorial

<iframe width="800" height="500" src="https://www.youtube.com/embed/p8oQYvK8oIo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

<br />
**Please node-** This video is recorded with old UI


To accept the input if the response is a media file (**jpeg, png, mp4**).
<br />

![image](https://user-images.githubusercontent.com/32592458/218254975-359f741d-8133-439b-a697-c9271917fd6e.png)

You can use `Has Media` in your flow editor to receive and store media files in Glific. You can also receive the caption of the media file from the flow.

![image](https://user-images.githubusercontent.com/32592458/218255764-ddd56402-200f-4e3c-af97-d8997dcbb416.png)



Create a variable to store the media file received from the contact. For example `picture`

![image](https://user-images.githubusercontent.com/32592458/218255772-a8905985-ff62-4093-bfed-87d1f51e7589.png)

Now you can save or use the media file URL received and its caption.

In this example, the syntax will be.

- for media file URL `@results.picture.url`
- for media file caption `@results.picture.caption`

![image](https://user-images.githubusercontent.com/32592458/218255777-a8b9b9be-0c3c-4467-850a-e7d7a764ecfc.png)



It will be shown in the chat window like the below example.

![image](https://user-images.githubusercontent.com/32592458/218255784-7ec98d78-65a0-4171-a7c0-2da35038cc58.png)
___

## 11. has audio

To accept the input if the response is an audio file (**mp4 audio files**).

![image](https://user-images.githubusercontent.com/32592458/218254980-a2bbe201-24bd-4cf4-b06b-af6d92539768.png)
___

## 12. has video 

To accept the input if the response is a video file (**mp4 video files**).

![image](https://user-images.githubusercontent.com/32592458/218254982-e8624839-416c-4137-8111-855f92c54388.png)
___

## 13. has image 

To accept the input if the response is an image file (**jpeg, png**).



![image](https://user-images.githubusercontent.com/32592458/218254988-c7006429-79b2-4964-938d-49ff44f88e50.png)
___

## 14. has file 

To accept the input if the response is a  file ( **pdf,doc**).

![image](https://user-images.githubusercontent.com/32592458/218254994-334b0228-3f20-478b-ac1f-a4e80e67f2ff.png)
___

## 15. has location 

### Video Tutorial

<iframe width="800" height="500" src="https://www.youtube.com/embed/p8oQYvK8oIo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<br />
<br />
**Please node-** This video is recorded with old UI
<br />
To accept the input if the response is a location.



![image](https://user-images.githubusercontent.com/32592458/218255000-100d7faa-a3e3-4d67-95a5-9297c62371ab.png)



Select the check box `Continue when there is no response` if you want to take some decision on **No response** in the flow.  Select the wait time form the dropdown.

![image](https://user-images.githubusercontent.com/32592458/218255003-115d31c4-5c1a-4a84-9822-91cc633fccab.png)



- **Response criteria** - fields next to the response type is to enter the response criteria.

- **Category as** - is the field to give name/category to the response.

- **Result Name** - is the field to define the variable name for the response received from beneficiaries

![image](https://user-images.githubusercontent.com/32592458/218255008-1a9f3ccb-4437-4ff4-96fd-34c1ad2249ac.png)



Click `Ok` button to save the `Wait for response` action type.

You can get the value of location with `Has Location` in contact response and save it in the form of longitude and latitude.

![image](https://user-images.githubusercontent.com/32592458/218255393-6a1db5f2-3bb8-46b5-8bf0-76fabdae86e0.png)



The user will send the location from WhatsApp in the user response. The value will be store in a variable. For example  `location`

![image](https://user-images.githubusercontent.com/32592458/218255395-3e77b653-dd98-41cd-b3e6-9f879c374854.png)



Now you can save or use the location details received in longitude and latitude forms in your flow like other variables.

- `@results.location.longitude`
- `@results.location.latitude`

![image](https://user-images.githubusercontent.com/32592458/218255404-7be59292-e076-4a20-855c-2340c887f2df.png)



It will be shown on the chat window in a flow.

![image](https://user-images.githubusercontent.com/32592458/218255411-a5dbcce6-7eeb-4677-9568-e133226cc702.png)
___

## 16. No response used as a Nudge

<figure class="video_container">
  <iframe src="https://www.youtube.com/embed/3iLzlzDrVA8?showinfo=0" frameborder="0" allowfullscreen="true" width="800" height="500"> </iframe>
   <br />
  **Please node-** This video is recorded with old UI
  
</figure>
> ### **1 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**

___

**The `Wait for result` node is used to get results from webhook results. If there is a delay in the response from webhook, then it will wait to get the result according to the time set in `Wait for result.` Earlier, the flow used to break if there was a delay in the response from the webhook. But now, it will not break and will wait for the result from the webhook. Resume flow API is used to make this feature, which will queue the request. If there is no webhook, then `Wait for result` will work as `Wait for time`**

![image](https://user-images.githubusercontent.com/32592458/218254915-246fc560-c516-40c4-a29b-0d9a5ad69b21.png)> ### **3 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Advanced`**
___

**Webhook calls are used to communicate with third-party applications within flows. They allow NGOs to receive and handle incoming messages, delivery receipts and other events from WhatsApp in a seamless and automated manner.**

___
## Using Webhooks in Glific

Please have a look at the steps to call Webhooks in Glific.

1. Receive the response from a contact in a variable.

![image](https://user-images.githubusercontent.com/32592458/212661318-ed2b2fa8-2f4a-4b6b-a2f3-7c00b8aa36d2.png)

2. Call Webhook in a node.
    1. Choose to `Call a webhook` in the dropdown in node action.
    1. Choose `POST` in response type.
    1. Enter the `URL` where you want a Webhook connection.
    1. Click on the `Post Body` tab.
    1. Enter the variables which you want to pass through the webhook.

```
{
  "contact": "@contact",
  "results": "@results",
  "Emp_name": "Mohit"
  "Emp_age": "@results.age.input"
}
```

![image](https://user-images.githubusercontent.com/32592458/212661350-bf2ce325-4fbf-4882-b947-10f7eb660f3f.png)



![image](https://user-images.githubusercontent.com/32592458/212661387-ebb6e6c4-b675-4a26-ada3-d816f39c1f70.png)

3. Click `OK` to save the changes


___
# Use webhook response in the flows

1. Let&#39;s say you make a webhook call (by using the above steps) and you want to use the response variable in the flow. 

![image](https://user-images.githubusercontent.com/32592458/212661423-cdbd967e-d435-48b3-982f-fe59cf08f51a.png)



For example, if you send a response like a below object

```
{
"success_message" : "You are onboarded.",
"status_code": 200
}
```

> Please note that your webhook should always return a JSON object (not an array). 

Then you can use that response as **@results.mywebhook.success_message** Or if you want to use any other variable then it will be **@results.mywebhook.*YOUR_RESPONSE_OBJECT_KEY**

![image](https://user-images.githubusercontent.com/32592458/212661557-e5e73775-1c71-4ea9-b2f2-81cf809db3ba.png)



Here my webhook is a custom name you defined on your webhook node and **success_message**  is the key of the response object you send back in a webhook call.

___
## Checking Webhook Logs

Once the webhook setup is complete. You can test it by executing the flow in Glific. There may a case, the webhook is not set up correctly and there are some errors in Webhook calls.

Glific has **Webhook Logs** from where you can check the status of a Webhook call and see if it returned some errors.

1. Access `Webhook logs` under the `Flows` option from left panel.

<img width="221" alt="Screenshot 2024-03-06 at 3 13 42‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/179b8f35-1f72-499b-8271-9488d0eedbac" />


1. Webhook logs page will show the results of your webhook calls with the below details
    1. `Time`  - Time of the webhook call.
    1. `URL` - The URL which is used in webhook call.
    1. `Status` - Success / Error
    1. `Status Code`- Status code returned from the webhook call. 
    1. `Error` - Error is an error returned. NULL in the case of success
    1. `Method` - GET / POST
    1. `Request Header` - Request header of the webhook call
    1. `Request JSON` - JSON of the webhook call
    1. `Response JSON` - JSON response received from the webhook call.

<img width="1451" alt="Screenshot 2024-03-06 at 3 12 51‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/d7f9dffe-2294-42e3-9b93-8bc3bfa38c38" />

1. You can click on the data received in the logs to copy or view the full response.

![image](https://user-images.githubusercontent.com/32592458/212661790-0d79be95-c208-4e49-9f4c-5ff56c1b1a65.png)

1. `View` will open up the response received in a pop-up window. You can check or copy the text to know more details of the response.

![image](https://user-images.githubusercontent.com/32592458/212661806-2bdf38df-5791-492e-9c4f-a6c3fc7e919b.png)
___

## Reference Article

- [Glific Webhooks](https://glific.github.io/slate/#webhooks)

- [Code examples to use Webhooks in Glific](https://github.com/glific/recipes)
> ### **3 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Advanced`**
___

**Support tickets streamline the process of submitting queries and assigning staff members for each query. This provides a convenient system for organizing and managing inquiries in a more efficient way.**

___
## Sample Use Case.

 1. Here's a sample flow with minimal configuration for using the ticketing system in Glific

<img width="1450" alt="Screenshot 2024-02-29 at 2 22 35‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/a53532ce-f053-4e08-932d-56af800bdc29"/>

__

2. The first node is the `Send Message` node, which prompts the contact to share his query so a new ticket can be opened

_<img width="1466" alt="Screenshot 2024-02-29 at 2 23 25‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/b415848c-3913-4538-b43e-9784cef9726b"/>

___

3. The second node is the `Wait for Response` node with the result name `ticket`. The response from the contact will be saved in this result and can be referenced as `@results.ticket`.


<img width="1467" alt="Screenshot 2024-02-29 at 2 24 16‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/ff889a3f-e549-47ed-9120-47a0a4714440"/>

___

4. The third node is `Open ticket` node which is used to create a new ticket from flow
    1. Choose `Open a ticket with a human agent` from the dropdown in node action.
    1. There we can add the labels like `registration`, `help`, `activity` to help in streamlining open tickets based on labels
    1. Choose the appropriate `staff member` to resolve that query.
    1. At last is the ticket body, here we are using the `@results.ticket` from the previous step(step 1)
       
    
<img width="1467" alt="Screenshot 2024-02-29 at 2 25 49‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/2bc9e6d2-12c2-47d4-aaa1-acd22028946b"/>

___

5. Click `OK` to save the changes


6. Publish the flow and test the flow



# View Support Ticket Inquiries

1. To view `support tickets`, navigate to the `Support Tickets` section by hovering over `Flows` in the left panel and selecting it. In this screen, you can see all the tickets, their status, and assigned staff members. Here's how the page would look like:
   
<img width="1452" alt="Screenshot 2024-02-29 at 2 26 50‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/21a23b27-5e0e-4c3d-ac0f-5078904f4e71"/>

There are seven columns in the Tickets screen namely:

`ID:` All the tickets are mapped to a unique ID, which is the first column in the ‚ÄòTickets‚Äô page. This ID could be used for referring to tickets easily and is particularly useful when there are multiple team members working with the ticketing system. Sorting of tickets could be done using 'ID' by clicking the arrow towards its right-side.

`CREATED AT:` It is a time stamp represenrting the ticket creation date & time. Sorting of tickets could be done using 'Created At' by clicking the arrow towards its right-side.

`ISSUE:` Displays the posted queries. Sorting of tickets could be done using 'Issue' by clicking the arrow towards its right-side.

`OPENED BY:` Indicates who opened the ticket.

`TOPIC:` The topic of a ticket provides essential insight into it's subject matter and purpose.

`STATUS:` Shows whether the ticket is `open` or `closed`.

`ASSIGNED TO:` Specifies the staff member assigned to the ticket.

`ACTIONS:` Provides options to add remarks, change the assignee or status of the ticket. Actions also include a 'Send message' which can be used for navigating to the exact point in chat where the ticket was created. This enables you to easily navigate to the part of the conversation where the ticket creation happened. This helps in avoiding the manual scroll required for identifying the exact location of the chat where the query was raised by a user. It also helps with more context regarding the intent of the user for raising the query.

<img width="1470" alt="Screenshot 2024-02-29 at 2 27 50‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/b43b39d6-d505-4976-aea3-4832253991a2"/>


___

## Ticket Management

### Export Support Tickets
- Export the support tickets created by clicking on the ‚ÄòExport‚Äô option in the top right of the Ticket Listing page
  
<img width="1466" alt="Screenshot 2024-02-29 at 2 28 49‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/08f98eab-76bf-44e8-83ab-deb557aae043"/>


- Select the ‚ÄòDate Range‚Äô for which you want to see the tickets
  
<img width="457" alt="image" src="https://github.com/glific/docs/assets/143380171/ce93ce68-31d6-4e6c-9054-ef91b242a8b1"/>



- The export file in csv format is downloaded to your local storage and it can be used for analyzing the tickets offline. The exported file has the following data points - body of the ticket, status, topic, inserted_at, opened_by and assigned_to
  
<img width="690" alt="3" src="https://gist.github.com/assets/132430123/5b9c2468-b698-43c5-be10-f1d7ad3fe9f6"/>


### Bulk Update
- Updating the status of the tickets could be updated together or in bulk by using the ‚ÄòBulk Update‚Äô option on the top right corner of ‚ÄòTickets‚Äô page

<img width="1410" alt="image" src="https://github.com/glific/docs/assets/143380171/50804083-ac04-46eb-a6d5-9d8530ed12e1"/>

- On clicking ‚ÄòBulk Update‚Äô, a pop-up with a drop-down of existing ‚ÄòTopics‚Äô is displayed
  
<img width="1457" alt="Screenshot 2024-02-29 at 2 29 49‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/73446c3a-2d50-47d4-8b34-7d09ff213aeb"/>


- You can close all the tickets from a particular ‚ÄòTopic‚Äô together by clicking on the ‚ÄòClose Tickets‚Äô button. This will be particularly useful when you deal with tickets from a particular topic together and reduces the manual effort required for opening every ticket and closing them one by one.
  
<img width="466" alt="Screenshot 2024-02-29 at 2 30 39‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/59912002-0ee2-4461-beed-a927abca18d0"/>


### Search & Filter

Searching for an individual ticket or group of tickets can be done using : 
a. Body of the ticket
b. Phone number of the user
c. Name of the user

This search could be used for easily segregating tickets based on a user or the type of  query. By searching using a phone number or name, you will be able to view all the tickets raised by a particular user. Likewise, by searching for a particular keyword inside the body, you will be able to view all the tickets which have the same keyword. In this way, the support person will be able to handle similar queries & queries from the same user together. The enhanced search also enables the support person to prioritize/ de-prioritize the tickets based on a user or query type.

### Add Remarks

Once a ticket is created, users can make edits by utilizing the `Add Remark` option. These features allow for easy ticket management and efficient resolution.

<img width="567" alt="image" src="https://github.com/glific/docs/assets/143380171/554f2688-426b-4019-9552-b351ebbe0f6c"/>



___

## Tags

Support ticket, Open a ticket with a human agent, Ticketing System, Ticket inquiries, Flow.
> Refer : [Interactive Messages](https://glific.github.io/docs/docs/Product%20Features/Interactive%20Messages)> ### **1 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  `Beginner`**

**Wait for time flow action is used to send a message after a specified time gap. This feature is used to ensure that messages are send within a time interval. For instance, an activity is assigned to a student and the Glific Bot checks with the student whether it is complete in one hour.**

**If the wait time is not selected, then it will put a gap of 5 seconds by default.**

![image](https://user-images.githubusercontent.com/32592458/218254842-329a718e-5606-475b-b1b6-36270af2350a.png)> ### **1 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**
___

**Labelling the incoming message flow action is used to categorize the messages into separate buckets. This helps you capture data points which can be used for creating reports, analytics etc.** 

## Video Tutorial

<iframe width="800" height="500" src="https://www.youtube.com/embed/Y2KWDO7SfnI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

<br />
<br />

**For instance, if someone chooses English as their preferred language, you can label their message as 'English' and then generate charts for how many people chose English.**

![image](https://user-images.githubusercontent.com/32592458/218254849-f5049dcb-4c84-4250-b235-efec35a43360.png)> ### **1 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Intermediate`**
___

**Enter another flow is used to start with a different flow for the user inside the present flow. It can used by nesting different flows inside the main one, to avoid complications, easier trouble shooting and to maintain modularity.**

## Tutorial Video 

<iframe width="800" height="500" src="https://www.youtube.com/embed/AViBJDEQEeI" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>> ### **3 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**
___

**There are several types of actions available in Glific. You can select it from the node dropdown in the Flow Configure page to select the desired action type.**

![image](https://user-images.githubusercontent.com/32592458/218254809-98cd5c22-db91-4fe0-a31b-5551be087d0a.png)
___

1. **[Send contact a message](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Send%20the%20contact%20a%20message)** - It sends the message to the contact in the flow. You can also add variables in the content of the message to publish the value in the message. Refer [Flow level &amp; Contact level variables](https://glific.github.io/docs/docs/Flows/Flow%20Variables/Flow%20variables%20vs%20Contact%20variables/) to know more about how to use variables in flow.

![image](https://user-images.githubusercontent.com/32592458/218254828-66a5d970-b108-4fdb-bca2-94b5cb00b9de.png)
___

2 . **[Wait for contact to respond](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Wait%20for%20the%20contact%20to%20respond)** - Get an input from contact and use it in your flow. Many option available for response type. Input send by contact will be saved in the variable under `Result Name` field. For more details refer [Contact response type](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Send%20the%20contact%20an%20interactive%20message)

![image](https://user-images.githubusercontent.com/32592458/218254838-842fa88a-6498-4e2e-909f-690e63cabbeb.png)
___

3 . **[Wait for time](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Wait%20for%20time)** - Send a message after a specified time gap. If the wait time is not selected, then it will put a gap of 5 seconds by default.

![image](https://user-images.githubusercontent.com/32592458/218254842-329a718e-5606-475b-b1b6-36270af2350a.png)
___

4 . **[Send a staff member a message](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Send%20a%20staff%20member%20a%20message)** - Send a message to staff member (other than the contact with whom current flow communication is in process) in the flow. For details refer [Send message to a staff member](https://glific.github.io/docs/docs/Flows/Flow%20Actions/Send%20message%20to%20a%20staff%20member/)

![image](https://user-images.githubusercontent.com/32592458/218254845-9f2d9439-cdbe-4a6a-bb7b-a3979cbddf0d.png)
___
5 . **[Label the incoming message](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Label%20the%20incoming%20message)** - To label the message received in the flow. This helps you generate data point and generate analytics. Ex. if someone chooses English as their preferred language you can label their message English and then generate chart for how many people selected English.

![image](https://user-images.githubusercontent.com/32592458/218254849-f5049dcb-4c84-4250-b235-efec35a43360.png)
___
6 . **[Add the contact to a Collection](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Add%20or%20Remove%20the%20contact%20to%20a%20collection)** - To add the contact (who is communicating in the flow) in a Collection already created.

![image](https://user-images.githubusercontent.com/32592458/218254853-92a41e65-04b3-454b-9b68-c59b01059181.png)
___
7 . **[Remove the contact from a Collection](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Add%20or%20Remove%20the%20contact%20to%20a%20collection)** - To remove any contact from a Collection.

![image](https://user-images.githubusercontent.com/32592458/218254859-2319fcc8-b20c-48e4-8b91-bc0d91566efc.png)
___
8 . **[Update the contact](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Update%20the%20contact) -** To save the contact details in the DB.

![image](https://user-images.githubusercontent.com/32592458/218254866-45b33197-cb90-41ff-8a06-64f05eacb654.png)
___
9 . **[Call a Webhook](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Call%20a%20webhook)** - To send or receive data to a 3rd party web application. Refer [How to use Webhooks in Glific](https://glific.github.io/docs/docs/Integrations/How%20to%20use%20Webhooks%20in%20Glific/) to know more about how to use a webhook in Glific.

![image](https://user-images.githubusercontent.com/32592458/218254875-8f7c1d57-abdb-49c9-a7a1-a3961c34f1e8.png)
___
10 . **[Enter another flow](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Enter%20another%20flow)** - to call another flow with in a flow.

![image](https://user-images.githubusercontent.com/32592458/218254882-58f96b9c-8b67-4ef7-93c0-9d47c8e4da55.png)
___

11 . **[Split by custom expression](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Split%20By/Custom%20Expression)** - To take a decision in a flow based on the response submitted by contact.

![image](https://user-images.githubusercontent.com/32592458/218254886-5a4489ec-5f2e-4d37-aafa-46a2f02aa626.png)

___
12 . **[Split by a result in the flow](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Split%20By/Result%20in%20the%20Flow)** - To take a design in the flow based on the result of user response.

![image](https://user-images.githubusercontent.com/32592458/218254893-5c96109c-1039-4bd5-bbf5-1b634f1c9528.png)
___
13 . **[Split by collection membership](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Split%20By/Collection%20Membership).** - This node is used to identify if the contact is a member of a particular collection. In the below example, it is checking if the contact is a member of the English collection.

![image](https://user-images.githubusercontent.com/32592458/218254903-b911e5bc-a95e-44be-ac30-3c06a5bf9b96.png)
___
14 . **[Split by contact field](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Split%20By/Contact%20Field).** - This node is used to make a decision in the flow based on the value of a contact variable.

![image](https://user-images.githubusercontent.com/32592458/218254909-ec862a4a-be66-4a03-9904-00bd3830e2cd.png)
___
15 . **[Wait for result](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Wait%20for%20result)** - This node is used to get results from webhook results. If there is a delay in the response from webhook, then it will wait to get the result according to the time set in `wait for result.` Earlier, the flow used to break if there was a delay in the response from the webhook. But now, it will not break and will wait for the result from the webhook. Resume flow API is used to make this feature, which will queue the request. If there is no webhook, then `wait for result` will work as `wait for time`

![image](https://user-images.githubusercontent.com/32592458/218254915-246fc560-c516-40c4-a29b-0d9a5ad69b21.png)
___
16 . **[Start Somebody else in the flow](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Start%20somebody%20else%20in%20a%20flow)** - This node is used to start interacting with new user or a collection in the middle of the flow. 

![image](https://user-images.githubusercontent.com/130072273/235684494-ba8d1178-1b81-43a2-90ed-c8978d7a9c6e.png)

___

17 . **Open Ticket** - This node is used to ask questions and assign them to the appropriate project team member. It simplifies the process of posting queries and directing them to the right person.

![image](https://github.com/glific/docs/assets/90472056/fd103c5e-3903-4556-9c1d-2ed6b1b55c05)

To more about action types, you can refer to [this article](https://help.nyaruka.com/en/article/actions-3pbdyd/) published by the **Nyaruka Team**. We thank the **Nyaruka team** for publishing it for the community.
> ### **10 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Intermediate`**

___

## Video Tutorial


<iframe width="800" height="500" src="https://www.youtube.com/embed/tdFPJg1aLXU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>


_Please note: Glific has a new UI, so the visuals from the video will not match the present UI, but the functionality and buttons will remain the same_
___

## Add Readable Google Sheet

1 . Log in to your Glific account.

2 . Click on `Flows` from the left panel and find `Google sheets`

4 . Click on `+Create` button to add a sheet to read from

<img width="1468" alt="Screenshot 2024-02-29 at 1 35 52‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/d0605089-b71e-41ba-85c2-593dabf49b40" />


5 . Add the `Sheet URL` and `Name` of the sheet which you want to integrate. Check the `Read` checkbox and Click on the`Save` button. Follow next steps to get the URL

<img width="413" alt="Screenshot 2024-02-29 at 1 38 46‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/2612f184-eb99-4e02-aca9-6b4c1adbec16"/>

6. Open the Google sheet and click on share button on the right hand side to update the sheet permission to at least `Anyone with the link` can `View`

![image](https://user-images.githubusercontent.com/32592458/219550695-58224a6f-4312-4981-b518-1dd6de639e3a.png)

6 . Copy the URL

![image](https://user-images.githubusercontent.com/32592458/219550711-8471dcf3-974c-459d-a486-b77b841742d0.png)

[Sample File](https://slabstatic.com/prod/uploads/8k89m6if/posts/attachments/WeGHho64-fOYi438oxhwhZFl.xlsx)

7. Paste the copied URL in the Google Sheet Integration screen in Glific and click on `SAVE` button

8. You can click on the link button to open the added sheet

<img width="1298" alt="Screenshot 2024-02-29 at 1 42 44‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/1a1d5fcf-5d18-4ffe-bfa8-22f0ffabc5d3" />

- `It is important to note that the first cell in the Sheet should be named as 'Key' for the Read function to work.`
___

## Configuring Readable Google Sheet in the Flow

9 . Create a new flow and open it for editing

10. Use `link Google sheet` node

1. Select `Link google Sheet`

2. In the second drop-down select the sheet

3. In `Select row` add any variable that uniquely defines the `Key` column of the linked Google sheet

<img width="505" alt="Screenshot 2024-02-29 at 1 47 48‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/f15cce2a-7882-4f83-901e-48b7d7bba09d" />

_As per above example, the sheet `Daily Acitivity` is used to read the content from, and the variable `@calendar.current_date` being passed from Glific to the Google sheet is being used as the search key to identify the relevant row to send the content from_ 

4. Click on `OK` 

5. Use column header like below and access the relevant column of the identified row.

`@results.sheet.col_nameA`

![image](https://user-images.githubusercontent.com/32592458/219550825-82831f46-a239-4600-b95e-bf0533f0565b.png)
___

## Send template messages using Google Sheets

Template messages could be sent using Google Sheets using `Read Google Sheets`. This is generally useful when different template messages need to be scheduled & sent regularly to the beneficiaries. 
Let us dive in a bit deeper by looking at the steps involved : 

1. Create the template messages that you'd like to send via Google Sheets using the normal method. Refer [Creating Template Messages](https://glific.github.io/docs/docs/Product%20Features/Templates/#hsm-template-creation--approval-submission)

2. Once the template is created, make note of the UUID of the template messages you need to share using Google Sheets. Refer the screenshot below :
 
<img width="1280" alt="Screenshot 2024-02-29 at 1 58 09‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/502a5e35-86dc-4770-819e-9c6d3292c526"/>

3. Create a Google Sheet with two headers, `Key` and `template_uuid` as shown below. Usually the `key` column will be having dates on which the individual templates need to be sent.
   <img width="730" alt="Screenshot 2023-09-15 at 1 25 33 PM" src="https://user-images.githubusercontent.com/132430123/268214931-e64e1019-ee86-49cc-8ec0-10d1d816d56d.png"/>
4. Now let us setup the flow. The flow starts with a `Link Google Sheets` node which has the Google Sheets we created linked. This is how the node looks like :
   
![Screenshot 2023-09-15 at 1 50 48 PM](https://user-images.githubusercontent.com/132430123/268221544-0320cd68-1fbd-42fb-9d98-fd3740acfe18.png)

As you can see, the row input field is given an expression `@calendar.current_date` which tries to match the current date value with a `Key` value. If a match is found, then that row is chosen.

5. In the next step, `Send contact a message` is used and an expression is given in place of the template selection drop-down. The expression reads `<%= Glific.Clients.ColoredCow.send_template("@results.sheet.template_uuid", ["@contact.name"]) %>`
   
![Screenshot 2023-09-15 at 1 56 54 PM](https://user-images.githubusercontent.com/132430123/268223071-9f2730b9-9364-46fc-b062-1bbd39c102f9.png)
   
In this expression, the `template_uuid` matching the row in the given date gets send to the user. The expression also passes the value of the contact's name. You can pass multiple variables in this expression, if the template message demands it, using comma separation.

In this way, you can use Google Sheets for sending template messages. With the use of [Triggers](https://glific.github.io/docs/docs/Product%20Features/Triggers/) you'll be able to schedule different template messages for specific dates using Google Sheets, enabling you to do it in a single flow, instead of creating separate flows for separate templates. This is particularly useful, when you plan to share a set of instructions/ advisory/ content in a scheduled manner in specific dates & let's you use dynamic content for the same.

## Send Interactive Messages using Google Sheets

Glific enables you to send interactive messages using Google Sheets. This is particularly helpful when you need the options within the interactive messages to be dynamic. 
This lets you use the same interactive message for creating multiple dynamic list of options to choose from for the beneficiary.

Let's dive in a bit deeper to see how it works.

1. Create a Google Sheet with the list of options you wish to have in the interactive message in a row as shown below. In this example, we want the values given in row 2 i.e `key` value as 1 to be used as the options in the interactive message we're going to create. These values could be updated in real-time to change the options inside the interactive message or you can add more rows to have different interactive messages too. 
<img width="1394" alt="Screenshot 2023-09-19 at 2 12 47 PM" src="https://user-images.githubusercontent.com/132430123/268894514-d5c4dd36-8f86-46a0-adb9-8688b1d1d791.png"/>

2. Add the above created Google Sheet on the Glific. Please find the steps to do that [here](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Link%20Google%20Sheets/#add-readable-google-sheet)

3. Now create a sample `Interactive Message` with a list message (can do similarly for button options too).
- Please note the first option needs to be entered as shown below with some sample data. This is to ensure the interactive message is created and saved. The list or options will be rewritten by the values on the sheet, hence the rest of the options could be left empty. 
  
<img width="1294" alt="Screenshot 2024-02-29 at 2 08 50‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/e5c8b2b4-c33f-4360-9f6d-ff14a76c12f3"/>

3. Now since we have the Google Sheets linked & the interactive message created, let's create a sample flow to understand how it works :
<img width="738" alt="Screenshot 2023-09-19 at 11 51 38 AM" src="https://user-images.githubusercontent.com/132430123/268859289-c3af33c5-8bc2-4eb0-96ff-d2d8aa4cba01.png"/>

4. As you can see, the flow starts with a Link Google Sheets node, where the readable google sheets from which the options to be fetched inside the interactive message is added. This is how the Google Sheets node is configured :
<img width="628" alt="Screenshot 2023-09-19 at 11 53 27 AM" src="https://user-images.githubusercontent.com/132430123/268859658-2780aa59-e56c-4b7d-aecf-9b55ff47496e.png"/>

- In the node above, the sheet we created have been linked & the corresponding action is marked as `Read` since the options for `Interactive Message` are being read from the Google Sheets.
- Here 1 is added in `Select row` field, as the values for the interactive message are present on the row with the key value as 1 and it is stored under the variable name `sheet`
- Instead of 1, you can also use dynamic values like [flow variables or contact variables](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Variables/Flow%20variables%20vs%20Contact%20variables), functions like @calendar.current_date etc.


5. The next node consists of `Send contact an interactive message` node and this is how it is configured
<img width="611" alt="Screenshot 2023-09-19 at 2 14 22 PM" src="https://user-images.githubusercontent.com/132430123/268894962-90c136b4-3775-426d-9962-269e7407feba.png"/>

- The interactive message we've created is chosen from the dropdown.
- The dynamic fields checkbox is selected which enables us to use dynamic values inside the interactive message.
- In the input field box with `number of variables`, the number of options in the interactive message needs to be entered. Here we've given 8, since we need 8 options in the list sent (as also shown on google sheets).
- The `id` and `variable` values need to be filled. The id could be any unique value for referencing & variable value is being fetched from the linked Google Sheet.
- The variable names are filled as `@results.sheet.course1`, `@results.sheet.course2` and so on representing each row value from the row we've chosen to read from.

6. Now since the flow is configured, let's test the flow
<img width="286" alt="Screenshot 2023-09-19 at 12 07 16 PM" src="https://user-images.githubusercontent.com/132430123/268862637-8919962e-840e-47dd-9865-919dd902b483.png"/>

As you can see on the preview above, the list of options we had given in the Google Sheets are shown as a list of options inside the Interactive Message.

- Sending interactive messages using Google Sheets could avoid the redundancy of creating multiple interactive messages when the list of options needs to be updated (some option needs to be added or removed) or multiple interactive messages to be used.
- It can also be used for handling situations where the list of options is more than 10 by using 'More' as the tenth option and having a separate list of options in the next row.

## Add Writable Google Sheet

### Enable Google Sheet APIs and Add Credentials

1. Use [this](https://console.developers.google.com/start/api?id=sheets.googleapis.com) wizard to create or select a project in the Google Developers Console. This will automatically turn on the API. Click Continue, then Go to credentials.

2. On the `Add credentials to your project` page, create a **Service account key**.

3. Select your project name as the service account and choose JSON as the key format. Download the generated JSON file containing the credentials.

4. Go to your Glific account, click on `NGO main account`, click `Settings` and find the menu for `Google Sheet`.

<img width="992" alt="Screenshot 2024-02-29 at 2 13 36‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/c19a50b3-3c7b-4491-bd30-b906403d0ec5"/>

Paste the service account credentials in the provided field, and click on the `Save` button.



### Link Writable Google Sheet in Glific

5. Go to the `Google Sheet` screen as mentioned in the above steps.

6. Click on the `+Create` button to add a sheet to write to.
<img width="1468" alt="Screenshot 2024-02-29 at 1 35 52‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/ba552bd6-8bb8-47d4-bf04-974afc74dfd6" />


7. Add the Sheet URL and Name of the sheet you want to integrate. Check the `Write` from drop down and click on the Save button. Refer the following steps to ensure the google sheet has right permission before you get the URL.

<img width="466" alt="Screenshot 2024-02-29 at 2 19 43‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/e85d0288-8751-4160-9a2c-11bff43f53fa"/>

9. Open the Google Sheet you want to write data on and click on the share button on the right-hand side. Update the sheet permissions and add the Service Account Identifier (The client email on the service account) as a user invited in the spreadsheet's Collaboration Settings with `Editor` permission.

<img width="1200" alt="Screenshot 2023-05-18 at 11 23 49 PM" src="https://github.com/glific/docs/assets/40158831/feb09bd0-1d91-43ac-a289-ac813c2a2d4a"></img>

9. Copy the URL.

<img width="1200" alt="Screenshot 2023-05-18 at 11 22 26 PM" src="https://github.com/glific/docs/assets/40158831/2518951e-9fb1-4740-9dbb-8a4766c3bf55"></img>

10. Paste the copied URL in the Google Sheet Integration screen in Glific and click on the `SAVE` button.

<img width="461" alt="Screenshot 2024-02-29 at 2 21 32‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/01491060-e219-4615-ad79-27781e6f85a1"/>

### Configuring Writable Google Sheet in the Flow

12. Import the below sample flow  from the Flow screen and click on `setting` icon to configure it.

**Sample Flow**

[Write to Google Sheet.json](https://raw.githubusercontent.com/glific/docs/main/docs/3.%20Flows/3.%20Flow%20Features/write_to_sheet.json)


13. Here's how the imported flow would look like

<img width="589" alt="Screenshot 2024-02-29 at 2 40 13‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/2edeafc6-19fa-4241-9224-6dafdde84519" />


14. The first node is the `Send Message` node, which asks the contact for input to be added to the sheet.

15. The second node is the `Wait for Response` node with the result name sheet_input. The response from the contact will be saved in this result and can be referenced as `@results.sheet_input`.

16. The third node is the `Link Google sheet` node, used to add the user-entered text into the Google sheet. Click on this node to configure it.

<img width="490" alt="Screenshot 2024-02-29 at 2 34 22‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/387be98f-0c4f-4ee0-b79f-38b27f8ff3cf"/>

17. Under Action, select `Write` from the dropdown menu.

![Screenshot6](https://github.com/glific/docs/assets/130072273/9a29141e-8a68-49f1-91d2-ae5a19e895f5)

18. Select the sheet from the dropdown that was added in step above i.e. Sample Sheet


<img width="488" alt="Screenshot 2024-02-29 at 2 35 02‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/2ed740f2-e187-482c-9066-e0e5c97576ae"/>

19. Specify the Sheet range from which you would like to enter the data in the Google sheet. For example, Sheet1!A10:D will add data from row 10 of column A in subsheet Sheet1 up to column D. This means that four data values will be added in 20.

![Screenshot8](https://github.com/glific/docs/assets/130072273/9964a3cb-969a-4807-ac70-ea3d94a1a50e)


20. Enter the data to be written in the Google sheet under Input data to update in sheet. You can use values like @results.sheet_input, @contact.name, @contact.fields.age, etc.


<img width="496" alt="Screenshot 2024-02-29 at 2 35 43‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/f1d9505e-6a3f-40ea-ae58-789b3eabefaf" />

21. After configuring the flow, click on the `Preview` button located on the top right side of the screen to run the flow in the simulator.

23. In the simulator, you will see the first message from the `Send Message` node, which prompts you to enter text.

24. Type the desired text that you want to see in the sheet, and then press Enter.

<img width="845" alt="Screenshot 2024-02-29 at 2 36 46‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/c6d482ce-1419-4dc6-bbcd-2ecdf846dc6b" />

25. This will move the flow forward, and the data will be written to the Google Sheet.

26. Open the Google Sheet to check the newly inserted data.
<img width="1200" alt="Screenshot 2023-05-18 at 11 58 31 PM" src="https://github.com/glific/docs/assets/40158831/bfa12d80-9038-4c2a-919a-ce425bd2ffee"></img>
___

## Note

- This functionality can be used to write upto 30 columns in google sheets
- To handle blank cells in between the Google Sheet use [Split by Expression](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Split%20By/Custom%20Expression/)

___
## Advanced Feature Webinar

<iframe width="800" height="500" src="https://www.youtube.com/embed/weYvWUizopc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
> ### **1 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;`Intermediate`**

___

**There may be situations where you would want to show different responses on the basis of some attribute of contact (which is saved in contact variables by `Update Contact` questions type). You can use the `Split by Contact Field` option to make that happen.**

![image](https://user-images.githubusercontent.com/32592458/219549080-9f39a23b-1ffe-4099-b084-4297f900d54f.png)

___

## Sample Use Case
Suppose you want to take a decision on the basis of the age group a contact belongs to. You need to save the age of the contact in the contact variable before using that in `split by a contact field`

1. Ask contact about their age group.

![image](https://user-images.githubusercontent.com/32592458/219549093-2a4f976a-d11e-4bc1-aa1e-8a5d5d392618.png)



![image](https://user-images.githubusercontent.com/32592458/219549102-3ce07d48-1d2c-4359-8c46-f0ae07498a3f.png)

<br />

2. Save the response with `update contact`

![image](https://user-images.githubusercontent.com/32592458/219549116-2f105a54-4f33-4382-9975-aa5aca753be9.png)

<br />

3. Select the contact variable from `if the contact's`dropdown and use the response to make a decision in your flow with `split by a contact field`

![image](https://user-images.githubusercontent.com/32592458/219549124-c4710996-8de9-4756-81c9-7cd532e35d03.png)



![image](https://user-images.githubusercontent.com/32592458/219549135-596a851d-98f1-480d-ac14-6f060bf7ae6b.png)



![image](https://user-images.githubusercontent.com/32592458/219549149-60af8d19-0070-4c8f-8cc3-bfce693b825b.png)
> ### **1 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;`Intermediate`**

___
**Split By Collection is used in flows, if there is a need to take a decision on the basis of which collection a contact belongs to.**

In the below example, we are taking decision in the flow on the basis of which language use has  preferred to use in Glifc.

Let&#39;s say there are two languages to select for contacts (English and Hindi).

1 .   Create a flow

2 .  Ask for the language preferences.

3 . Add contact to the language specific collection.

4 . Do different actions on the basis of which collection a contact belongs to.

i) Select `Split by Collection Membership`  question type.



![image](https://user-images.githubusercontent.com/32592458/220824217-321c5f5b-ac4b-4c64-91af-9f02250d0e42.png)



ii) Select the collections you want to split on

![image](https://user-images.githubusercontent.com/32592458/220824230-cdc3288a-bd38-41d5-a4c8-b8cd153ea856.png)



iii) Node will look like this.

![image](https://user-images.githubusercontent.com/32592458/220824238-2993cc5f-41b7-4488-83b5-aa7ad135d408.png)


___
## Sample Flow

![image](https://user-images.githubusercontent.com/32592458/220824248-f5042d1e-5dd6-4502-93cc-36a74e50c220.png)


___
## Execution Results

![image](https://user-images.githubusercontent.com/32592458/220824277-7901972c-ddc7-486c-89c2-176b0b9210d6.png)
> ### **2 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Intermediate`**

___

## Splitting Responses based on Contact choices or Attribute values

There may be situations wherein a flow you would want to send different responses to different contacts based on their choices.

You can use the `Split by a custom expression` option to make that happen.

`Split by a custom expression` uses a coding syntax to match the response received or profile attribute.

The syntax will be like `<%= if (Variable name  == 'String' / number ), do: 1, else: 0 %>`
___

## Custom Expressions cheatsheet
1. Get today's date in IST
`<%= Timex.today("Asia/Kolkata") |> Date.to_string() %>

2. Get today's date and time in IST
`<%= DateTime.now!("Asia/Kolkata") |> DateTime.to_string() %>`

3. **String concatenation function**

   Put two variables in the results field in the update contact node.
**_@results.Var1 @results.Var2_**
<img width="640" alt="Screenshot 2023-08-30 at 12 26 12 PM" src="https://github.com/glific/docs/assets/16541548/7e6ab494-27ad-4dd7-91ed-ba790ac60bc6" />


## Syntax Examples

1. Syntax to **check if contact belongs to collection 1 or collection 2**

`<%=¬†if "collection 1" in @contact.in_groups, do: 1, else: if "collection 2" in @contact.in_groups, do: 2, else: 3 %>`

![image](https://user-images.githubusercontent.com/32592458/218255349-c0ac6af4-24b3-4ca5-b9c9-46bfb0230b5f.png)





2 . Syntax to **check if the contact is registered** or not.

`<%=¬†if "@contact.fields.is_registered" == "1" , do: 1, else:¬†0 %>`



3 . Syntax to **check if the contact has opted-in** or not.

`<%= if @contact.optin_status == true, do: 1, else: 2%>`

![image](https://user-images.githubusercontent.com/32592458/218255356-a3df6b26-30a5-4d55-92cc-720397efa908.png)



Any variable that is created and saved for contact can be used to make decisions in Split by custom expression syntax

To use Split by expression needs a bit of coding to write the correct syntax. If you have exact requirements for what needs to be done and needs assistance, please ping us on discord, we will share the correct syntax for the requirement.
___

## Advanced Feature Webinar

<iframe width="800" height="500" src="https://www.youtube.com/embed/nl7n6l_LLec" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
> ### **1 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Intermediate`**

___


**There may be situations where you would want to show different responses to different flow results. You can use the `Split by a flow result` option to Splitting the results on the basis of user responses.**



## Sample Use Case
 Suppose you have asked a question from the user and based on the result, you want to send the user different responses. `Split by flow result`will help you send different messages for their responses.

1. Get a response from the user in the flow.

![image](https://user-images.githubusercontent.com/32592458/218255306-c7b82881-a450-4fe3-b82d-69363e0b70d6.png)



![image](https://user-images.githubusercontent.com/32592458/218255312-f914f08f-e8a8-4b8a-ba2f-e67975885a7e.png)



2.  Now based on the user response result, show them different options.

![image](https://user-images.githubusercontent.com/32592458/218255316-aa3045db-d370-4993-bc06-0568bb3a11ac.png)



3.  In this example if the user choose &quot;Blue&quot;, then the user will see the message of blue color or if the user chooses &quot;Green&quot; then the user will see the message of Green color

![image](https://user-images.githubusercontent.com/32592458/218255318-3b9930c8-b35c-4728-bed0-471f4f17d458.png)
___

## Advanced Feature Webinar

<iframe width="800" height="500" src="https://www.youtube.com/embed/nl7n6l_LLec" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>> ### **4 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Advanced`**

___

**Split by random chance refers to a technique used to divide a group of users randomly into different segments or subsets for testing or targeting purposes. It involves assigning users to different segments based on a random selection process, ensuring that each user has an equal chance of being placed in any segment. Split By Random Chance is used in flows when we want to test different user journeys/experiences against each other. This could be a registration process, a video, an informative image, a quiz, etc.**

## Video Tutorial

<iframe width="800" height="500" src="https://www.youtube.com/embed/dME_-mi_8-Y" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

___

<br/>
<br/>

In the below example, we are testing the effectiveness of different "Introduction to Glific" videos against each other and checking which one leads to the most positive responses from users. 

Lets say there are 3 videos we want to test against each other:

1. Create the flow with the Split by random chance node and add a separate video in each bucket/branch, label each video sent.
2. Ask the user if they want to learn more after sending them the video.
3. Add labels for the positive responses. (and for negative responses, if relevant for your analysis)
4. Analyse the data to see which video is performing best and make changes to your default flow.

So here, at the end of the test, we will measure how many users got each video, and then how many users wanted to know more after watching a given video. The video with the highest success rate (#Wanted to know more/#Recieved video) is the video we will choose to use in the future. 

We may additionally choose to interview some of our sampled users, to learn whether they watched the video or not and their reasons for giving a positive response before making our final decision.

___
## Steps for using Split by Random Chance

i) Select `Split by Random Chance` question type.

<img width="655" alt="Img1_AB" src="https://user-images.githubusercontent.com/119285990/222385641-2f0ad29d-e97e-48fd-bd63-5c4fda8723e9.png"/>

ii) Select the collections you want to split on

<img width="656" alt="Img2_AB" src="https://user-images.githubusercontent.com/119285990/222385645-f05496d0-f770-43dc-9627-5f5e3fb43383.png"/>


iii) The node will look like this.

<img width="404" alt="Img3_AB" src="https://user-images.githubusercontent.com/119285990/222385654-16b3bd54-f9e8-4433-9b48-92148f08a959.png"/>

___
## Sample Flow

<img width="574" alt="Img4_AB" src="https://user-images.githubusercontent.com/119285990/222385662-265231e2-0ae0-413c-90e6-6b3a68cedf0c.png"/>

___
## Execution Results
Different users will randomly be sent into different flow branches and see different videos in this flow. Each image represents a different user journey as per the shared example.

<img width="262" alt="Img5 1_AB" src="https://user-images.githubusercontent.com/119285990/222385635-dd58ce12-4977-4b0d-818c-5a5ccbd82a6a.png"/>
<img width="261" alt="Img5 2_AB" src="https://user-images.githubusercontent.com/119285990/222385612-d04055a6-897f-48ab-8742-7881174b5dda.png"/>
<img width="263" alt="Img5 3_AB" src="https://user-images.githubusercontent.com/119285990/222385664-09ac38fa-46c5-4b84-a8db-f3d70e5a2410.png"/>

___
##  Additional Info
1. Ensure that you add users who have enter/ pass through the split randomly node to a collection and use the [split by collection node](https://glific.github.io/docs/docs/Product%20Features/Flows/Flow%20Actions/Split%20By/Collection%20Membership) at the beginning of your flow to ensure that these users cannot re-enter the test as this will skew you data results. Refer to the sample flow image to see an illustraation of this.
2. Read more about how to conduct A/B tests on [this blog](https://glific.org/a-b-testing-your-flows-using-the-split-randomly-node/) and read about how Antarang has used this functionality to improve their registration process [here](https://glific.org/antarang-foundation-ab-tests-their-user-registration-process-using-the-split-randomly-node/)
___
## Advanced Feature Webinar

<iframe width="800" height="500" src="https://www.youtube.com/embed/kwb2zRej358" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>> ### **2 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**
___

**You can use the `Send Broadcast` action type to send a message notification to staff members on their  WhatsApp number at any time during a flow. If there is a use case where staff members needs to be notified about an event, then  `Send Broadcast` action type is available in Glific.**

**Note: -** _Staff members cannot be in active session all the time._ **_Always use_** [**_HSM Templates_**](https://glific.github.io/docs/docs/Product%20Features/Templates) **_in Send broadcast_** _action type, to avoid issues in executing the flow._

 Here&#39;s how to use it

1 .  Create a flow.

2 .  Any time during the flow, when it is required to notify a staff members. Create a new node and select `Send a staff member a message` action type from the drop down.

![image](https://user-images.githubusercontent.com/32592458/218255820-773adace-d230-490f-ab45-0812b916f986.png)



3 .  Select the staff members from the dropdown to whom message notification needs to be sent.

![image](https://user-images.githubusercontent.com/32592458/218255826-8a0ef2ad-3d63-4f48-8a6e-b5fb5040b615.png)


4 .  Enter the message you want to send .

![image](https://user-images.githubusercontent.com/32592458/218255832-cf0a70a3-2a8c-410d-86f9-8df1da0106b5.png)

5 .  Click on `ok` to save it.

Execute the flow to test it. Staff member will get a message on their registered WhatsApp number.

![image](https://user-images.githubusercontent.com/32592458/218255838-9e6ad9bb-4edb-473c-a566-cedb0bc3b935.png)
> ### **5 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Advanced`**
___

**Use the Start somebody else in a flow action to start a separate contact or collection in a flow when a contact reaches this step.**

**This feature enables whatsapp to whatsapp chatbot flow triggers. For example:  A teacher could use whatsapp to start a quiz or activity chatbot flow for multiple students, or a field worker could receive a whatsapp alert when a beneficiary has a query or concern.**

___

## Video Tutorial


<iframe width="800" height="500" src="https://www.youtube.com/embed/Swwbp0rPS_8" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

___
## Sample Flow

![Screenshot2](https://github.com/glific/docs/assets/130072273/e6a94582-5250-4da7-a0c2-0db73f200222)

___
## Using Start somebody else in a flow 


1. Hover over the red dot at the bottom of the node and drag it to create the next node.

![Screenshot3](https://github.com/glific/docs/assets/130072273/ac15431b-0b62-4678-8de2-8dc1f15090da)
<br />


2. Create that step by adding a new node and select **Start somebody else in a flow** from the dropdown menu.

![Screenshot4](https://github.com/glific/docs/assets/130072273/50111775-34d0-4697-a709-8ce26a141512)
<br />


3. Select **Select recipients manually** option from the dropdown. 

![Screenshot5](https://github.com/glific/docs/assets/130072273/f72f7cac-447b-4b4b-ab2d-7698743570d0)
<br />


4. From the dropdown of  **Select who should be started in the flow** select the contact or the collection whom you want to start the flow with. 

![Screenshot6](https://github.com/glific/docs/assets/130072273/a209c9aa-8e38-4348-b028-db72faf75257)
<br />


5. From the dropdown **select the flow** which you want to initiate from that step.

![Screenshot7](https://github.com/glific/docs/assets/130072273/161d19cc-944c-4d7c-9b79-94b69ef832bb)
<br />


6. Click on **Advanced** tab on top right corner. 

![Screenshot8](https://github.com/glific/docs/assets/130072273/673b91e5-174b-46e9-bac7-5d6175690064)
<br />


7. Check the box If you want to skip the contact who is currently in the flow & continue with newly added contacts or collection.

![Screenshot9](https://github.com/glific/docs/assets/130072273/e7b4fb22-95fa-4a7c-9f2f-99f6ee727934)
<br />

___
## Advanced Feature Webinar

<iframe width="800" height="500" src="https://www.youtube.com/embed/HgFRY7C2om0" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>

###**3 minute read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**


**Chats**: This section on the left side is highlighted, indicating that the user is currently viewing the chat interface.

<img width="1460" alt="Screenshot 2024-02-29 at 12 08 29‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/2c58a14c-307c-4179-8286-670e603692a4"/>

**Chat Window**: The central part of the interface shows an ongoing conversation with a particular contact. 

<img width="370" alt="Screenshot 2024-02-29 at 12 21 44‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/5535b55c-a1ea-42b9-b057-ce651d494966"/>

**Contacts**: On the right side, there is a section titled 'Contacts' listing different contacts who have been interacted.
The 1st highlighted part in the image enables you to search conversations by name, keyword, label, staff, collection name, and date range. This feature helps streamline your search process and refine results based on specific criteria.


<img width="447" alt="image" src="https://github.com/glific/docs/assets/143380171/d576198f-c3ca-4755-a2bb-5a59c22dfc9d"/>
<img width="433" alt="image" src="https://github.com/glific/docs/assets/143380171/1d061a58-dcff-4384-9d65-a63ee64c7b60"/>

The second highlighted part in the image provides insights into the status of contacts, indicating the number who have opted in, opted out, and other relevant metrics. 

All - Shows all contacts. 
Not Replied - Shows contacts list whose messages were read but not replied to yet. 
Not Responded - Shows contacts who have not responded yet to the messages.

You can read more about this [here](https://glific.github.io/docs/docs/Product%20Features/Searches/#search-contacts)

<img width="367" alt="image" src="https://github.com/glific/docs/assets/143380171/3953b10c-39c4-4a45-8c86-0c95c321aeca"/>

**Collection**: Collections in Glific are like folders where you can gather a bunch of users together. Once you have them in a collection, you can send messages to everyone in that collection all at once. It is a handy way to keep things organized and communicate efficiently with different groups of users.You can find more details
 [here](https://glific.github.io/docs/docs/Product%20Features/Others/Collections/)

<img width="370" alt="Screenshot 2024-02-29 at 12 23 25‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/18b9f619-0eed-4d4e-b2ad-6d9b06859acd"/>

**Saved Searches** : The saved searches are visible.

<img width="363" alt="image" src="https://github.com/glific/docs/assets/143380171/9238400b-388e-4e21-97bc-455055af9740"/>




**Session Timer** : You can also come to know the session timer for a particular contact in top right corner of the screen

<img width="159" alt="Screenshot 2024-02-29 at 12 10 12‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/14649b61-1fd1-4680-8619-e621567b2d1b"/>


**Shortcuts**:

The handy shortcuts like Speed Send, Templates, and Interactive Messages are present in the bottom part of the chat screen. These shortcuts make messaging quicker and easier. 
Speed Send helps you send messages faster, Templates let you use pre-made message formats, and Interactive Messages allow you to engage users more dynamically. They are like quick buttons that save you time and effort while communicating with users.


<img width="882" alt="Screenshot 2024-02-29 at 12 11 21‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/c0c525f7-c903-4ad9-8813-f7bf4f0ca7f4"/>



**Preview Button**:

<img width="69" alt="Screenshot 2024-02-29 at 12 12 35‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/66403685-2984-4e90-a220-ca0c89f8d591"/>

A green phone-like icon towards the right bottom end is present which acts as a preview button. When you click on it, you can see how your chats will actually look on a phone screen. It is like a sneak peek feature that lets you visualize how your messages will appear to users, helping you fine-tune your communication for a better user experience.


<img width="281" alt="Screenshot 2024-02-29 at 12 13 21‚ÄØPM" src="https://github.com/glific/docs/assets/143380171/0bbf03af-1c81-4af3-a834-b0719d7b7d93"/>

> ### **2 minutes read &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `Beginner`**


**Triggers in Glific are used to start a flow with specific contacts in a collection at a scheduled time. Triggers can be used for scheduling periodic tasks and automatically sharing them with required beneficiaries.**

___
## Create a Trigger

1 . Go to `Quick Tools` and find `Triggers` tab from left panel


<img width="1440" alt="Screenshot 2024-03-04 at 4 08 32‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/81b38ff2-1b3a-49d6-917a-a4e73e0748e1" />


2 . Click on `+Create`button.


3 . Fill the details of the `Add a New Trigger` form

  a. **Select flow** - Select the flow from the dropdown you want to execute.

  b. **Start Date** - Select the date from when you want to start a flow.

  c. **End Date** - Select the end date, when you want the trigger will expire.

  d. **Time** - Select a time of the day, when you want to execute the flow.

  e. **Repeat** - Select the options if you want to repeat the flow.

  - Does not repeat

  - Daily

  - Weekly


f. **Select days** - Select a specific day if you choose weekly option.

  g. **Select Collection** - Select the collection to which you want to execute the flow.

<img width="471" alt="Screenshot 2024-03-04 at 4 09 55‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/3050bf25-58f3-47df-ae22-d0ffe1f09d8b" />


4.  Click on `Save` button to save the Trigger.

5. Verify the created trigger on Triggers page.

<img width="1291" alt="Screenshot 2024-03-04 at 4 10 38‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/ce60f0d1-5a64-4faf-8856-d92e47b9f94b" />

___
## Verify Successful  Execution of Trigger

1. For verification of successful execution of the trigger, refer back to the chats and check how your defined message is triggered where time, date and message is being sent.

___
## Delete the Trigger

1. Click on three dots and select `Delete` to delete the trigger

<img width="1266" alt="Screenshot 2024-03-04 at 4 11 01‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/2c091122-358b-46cd-a049-9f707ee9e577" />


2. Click on `Confirm` button to delete the trigger.

<img width="479" alt="Screenshot 2024-03-04 at 4 11 47‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/a317b518-2733-4607-af35-157c4d9cb42d" />

___
## Copy a Trigger

1. Click on three dots and select `Copy` option on the trigger bar

<img width="263" alt="Screenshot 2024-03-04 at 4 13 04‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/bce2b724-71ad-432f-93f0-18f681ef7bf8" />



2. `Copy Trigger`form will open up. Change the details you want and save the trigger.

<img width="505" alt="Screenshot 2024-03-04 at 4 13 30‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/3eef35d5-df25-4838-bf0e-8c699b9cac18" />



3. New trigger will be created.

___
## Deactivate the Trigger

1. To deactivate the Tigger deselect the `Is Active`check box.
   
<img width="404" alt="Screenshot 2024-03-04 at 4 14 09‚ÄØPM" src="https://github.com/glific/docs/assets/141305477/e1ab672b-405f-4b51-964e-0842ac60370d" />

3. Click on `Save` button to save the changes
